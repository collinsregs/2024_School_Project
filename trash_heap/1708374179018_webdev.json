[{"text":["Creating a custom PDF"],"points":0},{"text":["Automate credit reports on my website","There so much missing info here that it would be impossible to help you. What kind of website is it, simple landing page, e-commerce site, etc? How was it made? Did you hire a developer, or build it yourself? Is it built with a particular framework? Was it made in website builder a squarespace, wix, shopify etc? Do you have a developer or are you capable of doing development? How are you getting the credit reports?I'll be honest if you don't have someone who can do web dev, you're going to need one, your going to be handling PII and their are lot of security considerations that have to be made, or you risk opening your self to massive legal liability."],"points":0},{"text":["Which programming language is the most enjoyable to learn and use?","This depends 100% on person and what that person wants to do. If someone wants to learn game dev, they won't find learning HTML so interesting as someone who wants to learn to make websites.","I think if you’re learning and don’t know any language, either python or JavaScript. Python because it’s the most similar modern language to normal English syntax while still having a wide variety of applications. JavaScript because it’s also fairly easy to learn and it opens up so many opportunities in modern web development.But if you want to do something specific, you will need to see which languages are used most for that task and learn those.","Modern PHP (8+).It has all those features that have made object-oriented programming great: classes, traits, interfaces, visibility of properties...Just a small example:<?phpdeclare(strict_types=1);abstract class View{    // Properties    private readonly string $title;    protected string $main;    // Constructor    public function __construct($title)    {        $this->title = $title;    }    // Final methods    final public function html(): string    {        return <<<HTML            <!DOCTYPE html>            <html>                <head>                    <title>$this->title</title>                </head>                <body>                    <header>                        <h1>Hello world!</h1>                    </header>                    <nav>                        <a href=\"/\">home</a>                    </nav>                    <main>$this->main</main>                </body>            </html>        HTML;    }}<?phpdeclare(strict_types=1);require_once 'view.php';final class Home extends View{    // Constructor    public function __construct()    {        parent::__construct('Home page');        $this->main = '<strong>Main page</strong>';    }}","Ruby is an absolute thing of beauty.","pleasure to learn: Schemepleasure to use: Haskell","I agree with others that there's no right answer. Typescript is great because it doesn't pigeon hole you into a single paradigm so you can write however you want. But I've personally found the most enjoyment in Rust (surprise, surprise, the rumors are true) and then Elixir because I actually like the way they forcibly structure your code.","Golang!!"],"points":0},{"text":[">1 minute loading time for manifest.json"],"points":0},{"text":["What are some good GitHub repos to learn stuff related to webdev?","That's like asking if there's good material to learn English on the Internet.What exactly are you trying to learn?I don't think you should learn to be a \"web developer\" either."],"points":0},{"text":["hugo SSG - is there any simple alternative?","If you only need two pages I think a SSG tool is overkill (unless you expect to add a lot more later). I would just write static HTML/CSS files. As for where to get templates I'm not sure, hopefully someone else will chime in."],"points":0},{"text":["I deployed a basic Hono server on Cloudflare Workers, Fly, Koyeb, Railway, and Render and compared the latency of each platform."],"points":0},{"text":["Naming personal site","Hyphens are never really desirable as they are easily forgettable.I'd stick with the name or initials, with another word, and the .tld of your choice/availability.","I would go for a \".me\" tld if available. Or you could go with samthom.as since \".as\" is also a tld. Just don't go for the hyphens, because they will be forgotten most likely.There are lots of options out there. I saw you suggested .online, which would be a great option aswell."],"points":1},{"text":["How to organize the API layer in React apps using React Query"],"points":0},{"text":["How to implement custom domain names for users?","Depends on what language and server you are using. I’ve managed to do so (similar to WordPress) by using redirects in Apache and pass the url to a PHP (could be python, etc) script to handle.","You want to edit the _redirects file using this guide:https://docs.netlify.com/routing/redirects/"],"points":2},{"text":["Should I do a fourth interview with this company?","They probably had someone else favored but it fell through. If you're interested in the role do the interview and have your concerns ready as talking points. Recruiters generally suck in that once they have the role filled or a candidate isn't viable they ghost everyone else. Consider it a red flag that the company might be disorganized, but it could be circumstantial and have no bearing on actually working for the team/company.Even companies that are great to work for or teams that are great to work for in meh companies can be disorganized or have shitty processes. I personally would take the interview and hear out the tech lead before burning the bridge.","Unless there wasn’t any technical interview already and/or you’re not hurting for a new job I would walk.Remember: the interview process is a two way street. Whilst they’re trying to vet you , you are also vetting them","\"I'm excited to talk to you today, you probably know that this is my fourth round interview with your company and our conversation has been ongoing for over a month now. I'd love to use today as an opportunity to address any remaining questions you have how I can help you with {some problem / challenge they're facing that has come up in previous interviews as the reason for the hire}.\"Control the interview from the first few seconds. - Put the tech leads in a defensive position that if they reject the candidate, they're rejecting the opinions of all the previous people that interviewed you. Make them change their thinking so this is a go/no-go decision, not a \"well we could probably find someone that....\" discussion.Do keep in mind that you are not their first option OR they have a serious problem with following through on commitments (e.g. you'll hear back in a couple days). This same problem will exist in many aspects of the business and is something you'll need to continuously guard against (e.g. promotions, raises, vacation approvals, etc.)You can however, exploit the fact you have 3 successful interviews already to hopefully steamroll this interview committee.","You weren’t their first option. That first option probably quit or got fired.They weren’t respectful enough to tell you that you weren’t hired. Big red flag, big no.","This happened to me with a reputable organisation and after talking to and getting on with the tech lead, I was ghosted. Maybe see how it goes but don’t put all your hopes into it","I swear reddit gives the most whiney entitled advice.Here's what the question sounds like to adults: \"a company asked to speak with me a 4th time before offering me $100,000 and they were a bit slow to respond - should I tell them to fuck off?\"​Your contact there could have had any number of life events, delays, personal or professional interruptions, downtime, illness, etc. Give a little grace and be a professional, even when others aren't being 100% on the ball. They apologized. Move forward.","It would leave a bad taste in my mouth the way they have handled it. It gives you an insight of what working for them might be like...BUT if you need the work and the pay is good... then go for it.","WT actual F.Walk away. If they don't know after 1 or 2 interviews if you are candidate material, then what will working for them be like?You've already wasted enough time with 3 interviews and following up. You've dodged a bullet.","Hard pass! There should be no need for 3rd and 4th interviews as well as not even contacting you for a month! Just shows the incompetence of the company and I would tell them that","Did your landlord take that as an excuse when you told him wait a month for rent? You got a fourth interview...Go in and waste their time like they took you for a cunt 3 times in a row. Plus a month of your time.","Hard pass. They aren't respectful to you even as an applicant, imagine as an employee. Their HR are aficionados. I personally ban any recruiters/companies who ghost me after promising coming back to me within X days.","If you are at all interested in the job then take it. You might even be able to to play them up into offering you a bit more if you say you've got another interest that developed since you last spoke to them.Maybe they hired someone else that didn't work. I've been responsible for hiring on my team for a while now and sometimes over the years I've gotten it wrong.I typically wouldn't need 4 interviews but perhaps someone that previously made a bad hire is trying to cover their ass by letting the boss have a turn.It's up to you. Good luck!","Have you not met the actual devs in those first three rounds? In my organization the boss, me as team lead and union people will have a first meeting. Second interview is with the team. That's it. Sometimes a small take home so we can discuss their approach during the second interview.I'd approach this with a 100% focus on finding out what this situation has to offer you. If it's double your salary as you said it's definitely attractive. So maybe not let your pride get the best of you, but alarms raised for sure.","ignore itI was in similar position but it was a company where my friend worked. It was hell for doing anything - meetings, talks, nobody had access to tools without approval etcthey paid me by hour and part-time so I did others contracts and I forgot about them in one point - lol","Twice the compensation? Ive had the similar happen then they made a bait & switch offer","Just tell them no. Red flags already.","Yeah.. you should not give a damn but you should not let any chance slip by just for the sake of it."],"points":126},{"text":["A collection of learning resources for curious software engineers 👩🏾‍💻","Very useful and in depth. I will definitely take a look at some of the resources. Thanks for sharing!"],"points":0},{"text":["Tailwind HTML Landing Page Template","Had a quick look in your repo. Looks good, thanks for sharing!"],"points":0},{"text":["I made a chatting app","Stuff like this feeds my imposter syndrome.Great job!","I like the design!, may I ask how long you've been a dev for? and how long it took you to complete this project? (Beginner here trying to get a scope of things)","You want the password and confirm password on the same page, so you don't get prompted to remember it by the browser if you entered it incorrectly","Solid so far!","Hash your passwords","Why google sign in is not implemented? Edit:I didn't ment to be mean, I just wanted to know if OP has considered this, and I thought he just didn't want to implement it.","Nice work","Very motivating. Building something like this is gonna be good practice! Thanks for sharing :)","Sending messages really takes time and there seems to be a interruption in the 'typing' indicator. There is probably an issue related to the server.Edit:Problem solved. It causes problems when using two different accounts in the same browser.","Are you storing messages in a database?","Souce code, i am a student so would help me study it","Does it use ai tools for nsfw image detection ?","For your question: Only fetch the last 10 messages or something and Lazy Load the others. But i dont understand, why you have to fetch them? Because you dont know how many Messages are new?"],"points":34},{"text":["Creating a data structures and algorithm visualization page with React and C++?","C++ be used to make a webserver. Unless you need animations just serve HTML and CSS.","C++ code can run in a browser using a tool like emscripten which will compile it to Web Assembly (WASM).Now the question is: what will the C++ part do ? You mention you want to create popular data structures and algorithms. Is the C++ code going to parse heavy datasets to provide a result for React to render visually ? If so, WASM can do that for you. You can also use WebGL in the browser to crunch the numbers, but the GLSL language for writing the shader is not quite the same as pure C.BUTJust because you can do a thing doesn't mean it's the best solution. If your intent is to actually integrate a C++ program with React as a proof of concept or exercise, then by all means go ahead as it's a great use case.But as far as practical use cases go, you can achieve the same result using plain JavaScript with React. At the end of the day, keeping your application within a single technology stack will provide easier maintenance and less barrier to entry when onboarding new people, which makes the considering when creating a production grade app different."],"points":3},{"text":["Are there (good) free hosting solutions for WordPress like there are for static websites?","https://wordpress.org/hosting/","WPEngine is my favorite. It costs more but the customer support and daily automated backups make it worth it for me. Their process also makes everything so easy.","I recently discovered https://spartanhost.org/webhostingI must say that haven't tried WP, but other PHP applications, and it seems very good (thanks to Litespeed servers I think).Plans start from 1.99$ per month (even less if you pay 1 year in advance) with no surprise at renewal."],"points":2},{"text":["Is CSS documented fully on MDN?","That depends upon what you mean by “documented fully”. If you want a complete, authoritative reference, then look at the CSS specifications instead of a third-party website. But that describes how CSS is supposed to work, so you need to supplement it with things like Can I Use… to determine browser support, etc.","If you mean the parts you ought to be using, yeah pretty much. If you mean every weird browser quirk or vendored extension, no","Like this?"],"points":3},{"text":["Adding singletons to my Sanity dashboard, but 'deskTool' is deprecated.ts(6385). What do I do? It still works, but I'm worried about it working in the future.","You could read the deprecation notice on their help page and follow the steps. Luckily, it seems as a quite minimal change.But for future cases, you can consider locking the versions of your dependencies, allowing you to keep using a library until you have time to update / migrate your code (as long as there are no other concerns with pinning the version, for instance related to security or losing out on new features).","It's not deprecated so much as renamed"],"points":4},{"text":["Google authentication backend"],"points":0},{"text":["Building an interactive data visualization website, but lost","You should look into your heart","You really need to break this down into more manageable pieces.I see a few immediate, foundational elements that you need to work on. These are:Backend / Server - Learn what this means, how to setup and use. Pay for a hosting account and spend time learning how to use it. I personally prefer Debian as the operating system, Apache and MariaDB are solid and fairly standard for the web server and database, and PHP as the programming language. You say you know Python, which is a great choice for data driven applications, so you could build with PHP and interface with Python scripts.Frontend & Backend - Learn the relationship here and where to split the responsibilities to provide a usable and performant platform. Don't rely on only one side. This will involve learning how status codes work, how to use Javascript and server API's. How to use CSS in combination with generated images. All of this can be broken down into smaller chunks to tackle in turn.Data - What kind of data? What kind of charts, exactly? What is your goal here for the end user? Are you going to store any of the data long term? How big will these files and generated graphics end up being? Are you going to translate this data into some baseline, and store that in your database as well?If you can answer all of these questions, you should have a good foundation to write a minimal viable product. I would suggest you learn enough of all of these disciplines to build a test example. Start with a very basic and minmal example data set, learn how to process a file upload, convert the file to your data, use that data to make a chart (after figuring out imagemagick and php libraries), then serve that into a test page.Once you've seen the entire end-to-end flow work once, you can iterate on it in time. You can make it prettier. You can make it faster. And so on."],"points":0},{"text":["Which AI tool would you purchase if you could only purchase one?","None. I've yet to discover anything they can do for me that'd be worth paying for.","I was paying for GPT4 for some time, at some point I found myself asking the 3.5 turbo model because i wanted it to work faster and my questions were stupid. In most instances the question was super basic, like whats the tailwind equivalent for (insert-css) that i dont want to google, or *using this as a template generate from this set... Now i still use the 3.5 only but i stopped paying. Bard, Gemini and Bing all do adequate work for me for free","Since I'm currently paying for JetBrains AI Assistant and I found none of the others useful at all, I guess that one.","The problem I have currently is that it is so hard to actually try the \"advanced\" model for free. I will not pay money for something that I HOPE is much better than the free model for my use case.","Just chose Other so I can see the results","Neither. They are all useless. I don't get how people get 10x more efficient using them."],"points":9},{"text":["Chromium browsers have a problem fetching JSON from a specific website","My first instinct is that this is related to CORS / Same-Origin Policy.Do you have a more detailed error message?I would also note that it's not normally good practice to make API calls to third parties using your API key directly from the frontend. Usually you would create a proxy in your backend that makes the API call, and your frontend would call that. This both masks your API key and avoids cross-origin issues.","Could you instead just use this built in js interface?https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition","Probably related to Brave's privacy blocking stuff. Turn the Lion off on the URL bar","blocked by client normally means adblock is blocking the request, or CORS/CSP.","Do you have any ad blockers/extensions enabled on some browsers that might block those requests?","See this SO answer for possible fix. I'm guessing that the browsers may be blocking the request because it tracks the user's location.","Do you get a response code or any other details?If you’re using vscode tunnels to run it in safari for iOS it could be that location is blocked by the browser settings.","Those errors come from ad blocking browser extensions."],"points":81},{"text":["CSS is Impossible and That's Okay"],"points":0},{"text":["Screenrecording","OBS","I haven’t used it personally but UserSnap does that.","Getting clients to send in screen recordings is so much easier to understand the issue, I recommend Usersnap https://usersnap.com/ which can be added to your website as a widget so clients can take screen recordings whenever they see something worth reporting.The best thing about Usersnap is that the browser info, js errors, metadata are captured too, and you can collaborate/reply/tag your clients when you are working on or have fixed the problem!","Usually I find screen recordings to be unnecessary. Written steps to reproduce are much easier to read and skim over (as applicable) instead of having to watch a lengthy recording. It's also annoying when people add a voice over because its never brief. I'm sure most of these reporters are just trying to be helpful, but it takes time. It does have merits though, for instance when the issue relates to a graphical glitch.edit The above speaking from the perspective of devs and QA's as I got OP's question was mostly about sharing findings from within the company.But to your question on software:Mac users can just use Quicktime Player (it has a screen recording feature in the File menu), or just hit Cmd + Shift + 5. Most ticketing systems (e.g. JIRA) will compress the resulting file for you nice enough.You can also use third party screen recorder apps, some of which are available directly as a browser plugin, like Loom, Monosnap or Kap.","Yeah absolutely! (I'm on Windows 11) I use LICEcap for recording small .GIF's, extremely quick and easy to use, makes it super easy to record a selection of the screen. Quality isn't the best though, no controls obviously and nobody wants to look at a very long gif so if I want .mp4 instead I'll use the snipping tool.Windows also has the game bar, Windows key + Alt + R starts the recording, probably the simplest way.","https://screenrec.com/Is free and uploads automatically online.If you register (always free) they give you 1GB of online storage.If you look for something more advanced and don't mind paying for it: https://screentovideo.com/ or https://www.bandicam.com/","If you are on windows 10 or 11 you can tap the windows key plus G to open up gaming options and on there is a screen recorder. That does capture the whole screen though.","Another good option is marker.io. The only action required is that the user report a bug. Screen recording is always happening via a few-minute buffer. The tool is added to your site via a code snippet.","Marker.io!","MacOS has seen recording built in. Linux has a gazillion options. I'm sure somebody in Windows land has figured out.Yes, screen recordings are very helpful","On MacOS, you can open QuickTime and then you can do sectional or full screen recordings from the file menu","Yes I heavily utilize the screen recording feature for posting to tickets and PRs, it comes natively on Mac.Not sure if the sniping tool of Windows can do it","In our team we use JAM. It captures all the information including network/console logs while you're recording, which is really helpful for debugging","I was tired of getting Jira tickets from QAs without needed information so I made https://www.pageshare.dev/ .It's for internal purposes only though but they can just pin what's wrong and all details are there including full website copy."],"points":12},{"text":["Jest unit tests failing, can't extend class, base class undefined, circular depencies?","Yeah, circular dependencies will leave you with a lot of gremlins in your code. Try and reorganize your file structure, split files up as much as possible, and try to avoid barrel files. Also maybe try using ESM instead of CJS if you aren’t already, sometimes that helps"],"points":0},{"text":["Best portfolio sites you have ever seen","Bruno Simon"],"points":0},{"text":["Easy to use and cheap cloud server with high RAM for a frontend dev","I know that bare metal is the cheapest, and then AWS, Google Cloud, Azure etc.Bare metal is almost always the most expensive option at a cloud provider as they cannot split provision the hardware.Thinking of Linode but I need to learn some stuff obviously.Linode is happy to give you a VM and is one of the better known providers. Do you actually need a whole VM though? https://cloud.google.com/run/What would you do? What cloud provider do you suggest?I don't think we have enough detail about the project but I'd probably find a way to do whatever it is without puppeteer if at all possible and either host at home or a much smaller service. You might be surprised at the cost of cloud for a hobby project which is what this sounds like."],"points":0},{"text":["Research API/DAPI marketplace"],"points":0},{"text":["How do I accurately convert pixels to VH or percentages of a container FROM a Figma design?","It’s hard to help without seeing what you want to achieve but for example: If you want a container to sit in the middle and have a width of 1000px on desktop then you can set this up for 100vw width and max-width of 1000px. You can use flex on parent container and margin: 0 auto; on the inner element.IMHO it’s incorrect to try to replicate 1:1 static design into responsive web and it’s simply due to the different nature of both. If you want to maximise the consistency you should use a grid approach from web in your designs to make it easier to transfer.Try thinking about designing elements as blocks that are nested in each other. Use flex and grid as well as max-width for a better control. You can also go with a grid setting volume to something like: 1fr repeat(12, calc(1000px/12)) 1fr.Ps. Might have mistyped something as writing from my phone.","I tend to ask the designer to tell me these things. This is also a dialogue: some designers don't know why they made certain choices, just that it looked good. Other times they had a very specific effect in mind.If this is within a company, make sure that the pm budgets time for both developers and designers to have these sort of powwows.Document the results so that you do not have to work from memory when the client comes with the same questions.","Why would you be doing that? Viewport can be different sizes and won't match a static figma file. What are you trying to use vh for? Images? Containers? If I have a super wide monitor the design would look completely different than on a mobile phone."],"points":1},{"text":["Good way to store files that are changed frequently on the backend?","File storage should be done by something that handles file storage... Your webserver ain't it. If you have access to a cloud, use something like s3 or any bucket storage.Otherwise you will need to use whatever redundant network storage you have access to. As for diffs, this can be done any number of ways and you may find it hard to find something that supports your exact set up. It might be best to pass the diff off to a service via a queue (or just a http call depending on perf and how you wish to scale) that can take that diff, download the file, update it and reupload (note, this could have bad consequences if multiple different diff happen simultaneously for the same file.Going off that, modify your solution. Maybe you will find you can chunk your file to smaller parts, meaning you no longer need to send diffs but whole parts (decreasing simultaneous access issues to one larger file).","Sorry, but why are you doing this in this manner? Are you not allowed to read the file content?Without knowing anything else, I'd ask why you're not parsing the file into a database and serving processes from there? Dealing in files is a bit of a strange use case unless you're literally dealing in documents, in which case it sounds like your client just needs to use a back up service.","Depends on what you're using, but I think the common go-to is to throw that stuff in an S3 bucket or equivalent remote storage option. There is also Minio, but that tends to be more pricey. Digital Ocean has buckets for $5/m. The uploading of the file with the client and sending that to the server is not that big of a deal to my knowledge.I personally use Laravel with a polymorphic files table. All models have a singular or plural form of the relationship if they deal with files at all, (profile pictures, cover photos, documents, signatures, reports, invoices, etc), and then the files table points it to my S3 bucket by saving the actual generated path to the file.I then added an url attribute to my file model so it generates or uses a temporary link for 7 days every time someone accesses the file. In our experience, the 7 day timer worked well enough for people to share their documents with coworkers, etc. Then, if they reaccess the file on day 8, or a different person in their organization accesses the file, it just generates a new url for it. S3 also has selective file versioning options you can enable too.","Not super experienced so might not be the best solution, but you could look at using something like AWS EFS. Editing files would probably be easier than downloading files from an s3 bucket, editing and then reuploading them. EFS is a little more expensive though so If files aren't touched in a while, you could look at moving them to an s3 bucket for cheaper storage."],"points":7},{"text":["Been Given a Training Budget from Employer - Considering most development resources can be accessed for free online, what are some good ideas for what I can use this allowance for?","Are there career paths available to you within or without your company that require some sort of certification?Have there been subjects where you had to drop the self-study because only paid courses sufficed?I find that with self-study I follow a very narrow, deep path that only touches on things I am genuinely interested in: the advantages of conferences and such is that you get exposed to other interesting topics that you might not have thought to explore by yourself.","A masterchef class.","Neetcode, frontend masters and gitkraken","Pluralsight, imho the best online training site. Think it is about $300 per year for unlimited.","I tend to use this budget for books. Yes, you'll never hit the cap, but books are highly distilled sources of information that cover the rest of the iceberg that free material only touches.Technology books are often of limited use to begin with and outdated quickly, so I focus instead on ones about broader topics. These are some of those: https://github.com/xiongchiamiov/booklist"],"points":5},{"text":["What website is for designers?","I'm assuming you are talking about a marketplace like Envato, where you can find various assets including website / page templates, both coded in html / css / js, and PSD / sketch files.Otherwise, these days there are more and more UI kits, some (partially) free, with paid extras & all sorts of assets. Just a google search away.","Try Dribbble"],"points":0},{"text":["What's the simplest method to set up a time-limited paywall leading to a page exclusively visible to paying users for 72 hours?","I don’t know of any out of the box systems that will handle this but there are a few ways to do this..1 way that comes to mind is to generate a signed JWT token and add it as a query in the url. This way when a user clicks your link, your backend will verify the token is legit, and not expired. If those 2 cases are true, then video is served. You can change the duration of the token to 72hours in your case.You would only send them this email with the token in the URL after they have paid.I don’t know that this necessarily the best way, but I think if you’re not going to use accounts, then you’re relying on data be stored in the URL in some way. Another way could be an encrypted string of query params stored as args..","Standard landing page with watch now button that links to the payment page. Payment call back generates the url, sends it via email, redirects browser to page.That page should check the url, pulling out the url parameter that is unique to the verified payment, and evaluate it.If it’s active, return the video.If it’s expired / not real, return some redirection to the landing page.This would require you to have some kind of database recording payments and customer info and associating it with the unique url string.If you don’t want a database, jwt is probs the way to go.It does seem like a rather interesting business model though.Not sure many people would be happy with paying for something that disappears in three days."],"points":0},{"text":["Spring Boot SSL Hot Reload on Kubernetes - Piotr's TechBlog"],"points":0},{"text":["Stuck in CMS picking loop, help with options","Statamic.com is definitely worth taking a look. Can run without database (flat file), and can also run headless or as static site generator. Its built on Laravel, so very easy if you ever need to extend or add some custom functionality.","The one instance where a junior dev is right on the money. Sounds like the seniors want to overcomplicate it. Sage is the best modern solution to doing WordPress right.","I work for an Agency as well as a Full Stack developer. We build all our sites now with Contentful whereas before it was all WordPress. There are some pay walls but everyone on our team preferred it. I wouldn’t recommend using Contentful unless you have a bigger scope/project though. If it’s a relatively small site WordPress will likely be the superior option.","+1  the full roots stack with ACF. It's pretty powerful. It's taken us quite a while to get our starter theme to where it needs to be. We like WP because easy for customers to pick up.","I'd argue *one size fits all* is pretty hard (and is why so many chose WordPress). WordPress remains the most common CMS by some margin - so it will depend on the likely market you'll be targeting. Headless could help differentiate your agency but it is not appropriate for *many businesses*. Part of your call is assessing how big you think Headless is likely to become and whether getting in relatively early makes sense. Headless sites are a little more complex and thus expensive, so your local markets appetite to spend will be key. It's like buying a new car - the price brackets can vary considerably. If your main audience is likely to be local / small businesses then WordPress / Squarespace / Wix can all work. If you want to offer more bespoke solutions for less budget constrained businesses then looking at Headless makes sense. However, it is a more sophisticated approach so it is preferable if these clients have front end devs in their companies / businesses (or you agree a retainer) to manage downstream issues.","Wordpress with roots.io (IMHO it's the only proper way of doing wordpress development).","As someone who doesnt know shit, I like wordpress because of the ease of set up and plugins but at the same thats its weakness, I don't like how bombarded with text and details I feel even in the tinyest of feature. Haven't tried root tho, im gonna have to take a look.I've been using strapi and love the minimalistic aproach, its a little harder to set up but for the customer imo its a much more clean experience, as a dev I like the challenges of figuring out what data type each collection needs, wich can be a hassle for others. Anyways thats my experience.","Every option will have pros and cons obviously. The right CMS can change on the context/requirements.You said \"One size fits all\". If thats the case, I think WordPress with the roots stack is your best option. It gives all the power of WordPress. Clients often know how to use it quite easily, which comforts them.You have the chance with the roots stack to modernize your workflow quite a bit.I personally am quite a big Laravel and WordPress fan. So using Roots Sage gives me the best of both worlds.For example: I use blade, view composers and sometimes even livewire.As long as I built as much as reasonably possible custom within roots sage, I get great performance out of sites, while still being maintainable.Just keep the must haves like ACF, Yoast/Rankmath and maybe WooCommerce.If you can't choose WP for whatever reason. I have heart great things https://statamic.com/, which is built on Laravel. Haven't used it in production myself, so can't tell you from my own experience.Just feel like it wouldn't be as \"One size fits all\" as WP."],"points":9},{"text":["How long should it take to make a static website?","How long is a piece of string?","Time needed to make a website is equal to square root of number of centered divs to the power of !important in your CSS.","My approach to website development depends on the budget. If I have a budget of $5k, I would spend around 1 to 2 weeks building the website. If the budget is way lower, I would use AI to generate the website and complete it in two or three days.It is important to keep in mind that customer feedback and website updates will take up a lot of time, so it is best to focus on building the initial version quickly to maximize profits.","When you’re learning, you’re learning. You can’t really compare that to the time it takes someone who has already learned.Don’t worry about other folks, just focus on your own thing. The more you do it, the easier it’ll be.","Two fitty","more than 3 less than 8","1 hour","6 grepples","Varies on many factors.","42","Wordpress is just less than an hour to install.","It really depends on a lot of things:Do you need to build this website in a way that is maintainable later?You mention that you're using Hugo and Tailwind, but even with those tools, if you want to be able to easily add new pages or make changes later, it can take a bit longer to do it right than if you just slap it together.How important is it that it looks right across all browsers and devices?It's fairly easy to make a website look good, but when you load it up on Safari, or on a tablet, or the browser built in to a weird \"smart refrigerator\", things can get weird quickly. Making sure everything looks right everywhere can take a while!How much content is there?If the website is just a single page with some basic info, you can easily be done in a day's work, plus a few hours here or there to fix some problems when your client tries to open the website on their kid's knock-off Bintenbo Swatch. On the other hand, if there's a lot of content, multiple pages, maybe a portfolio and all that, the content is going to have to be put into the website somehow, and in my experience, even if you make a really easy tool for your client to send you the content in the right format, they're going to send you a Word document or something, and you're going to have to just deal with it.How many different kinds of content are there?If it's all just text articles, for instance, you only have to build one layout, and you're good to go. But if your client wants articles, and also maps, and an calendar page, and a testimonials page, you're going to have to build layouts for all of these.How complex is the design?It's fairly easy to make a website that has a simple title and navbar at the top, and then content underneath, but if your customer wants something with a bit more flair, maybe they want animations, and drop-downs, and cool buttons with smooth transitions, and masked images, then it's going to take a while to make it all look nice.How experienced are you?Customers like to have a price \"by the hour\", and sometimes that's how you need to put it on your invoices, but they're not paying for your time, they're paying for a website. As you grow more experienced, you're going to be able to make things both better and faster. The question of how long it should take only matters when you're estimating whether or not you can fit it in your schedule and are able to deliver on time. In fact, you should charge more if your customer wants a shorter deadline, since that means putting off other things you need to do, working later into the night, and maybe even cancelling your weekend plans.","I build these all the time. When starting out, maybe 7-10 days. After you’ve been around the block a few times, maybe 5 days. Up to 20 hours.Now if I were to hand code a static site, probably 6-10 hours depending on complexity and number of pages. What you need to do is work with a designer to make your design for you, then you code that. Developers shouldn’t be designing. If you don’t have a degree in it then leave it alone because you cannot self teach yourself design as easily as coding. You’re not being judged on the order of your css properties or code structure. But your design will be judged on details as little as that and it’s very easy to screw it up.I found my designer on dribble in Asia for $20 an hour. Great work, degree, experience, and very thorough. Saves me 10-20 hours of design alone. Worth every penny.Then you need to be starting out with a finished site first and editing that. Use my kithttps://github.com/CodeStitchOfficial/Intermediate-Website-Kit-SASSIt’s got a blog in it too. Uses 11ty static site generator. Everything is documented on how to use it and where everything is. I clone this kit to start every project and edit the html and css. This saves me so much time. I don’t have the set the projects up anymore. I start with a finished site and work from there.Then I use my template library to fill in the site and finish a whole site in about 3-4 hours. I created an assembly line essentially. There’s no reason to spend 20 hours making a static 5 page site. Horribly inefficient.And when you’re done, your site should be scoring 95+ page speed if you’re coding it. If you don’t know how to do that, I wrote this to show you everything you should be doing to get 100/100 page speed scoreshttps://codestitch.app/page-speed-handbookFollow every step and build it into your workflow. When I launch a site I never have to go through these steps, it scores 100/100 when I finish the site because I built these practices in my coding as I work. Optimization is not a thing I do at the end anymore. It’s something I do as I build it. Saves me time and makes a much better product.If you have any questions about this, feel free to ask. This stuff is my jam."],"points":47},{"text":["Do you have any resources to learn more in-depth concepts about backend development?"],"points":0},{"text":["cooperation between companies","Unless you can confidently say that this company is not a direct competitor to you, I don't see a world where dealing with them works in your favor. Direct access to customers is one of the primary resources you have as a growing business, and any deal that abstracts you away from this relationship is not likely going to work in your favor.","It's called Strategic Alliance. You're new in the industry generally new businesses should do it. You can forward the work to me just in case you get overwhelmed 😅 just another partner. It's common nothing wrong, you're growing, YaY!"],"points":2},{"text":["htmx: a new old way to build the web with Carson Gross & Alex Russell (JS Party #307)"],"points":0},{"text":["What would you recommend regarding UI for swapping between hours and days?","A picture's worth a thousand words here.","A button group?"],"points":1},{"text":["code or no code?","\"Every time I am grilling burgers my friend says he can get the same thing at McDonald's\"","Assuming you are aiming to make a return on your efforts (and not just hobby building), it's important to understand when—not if— a hand-rolled solution is appropriate.If there’s a way to implement a version of your idea without building it from scratch, then 100% go with the no-code/low-code approach. Once you've established a product-market fit, then start to look for premium features that you would unlock by moving to a custom stack.","Then ask him to do it for you so you can shut them up. If it only takes them 5 minutes should be no problem for them right? That’s the amount of time it might take them to sit on the toilet. So if it’s so easy, ask them crap one out for you since they’re so much better. See what they say and how it turns out. It better look exactly like the design, score 80+ page speed score, be accessible, and fully responsive for all screen sizes. You don’t need to learn Wordpress or wix. Custom code will Always make a superior product. What sites are you working on for months at a time? Sounds like analysis paralysis where you get caught up on too many simple decisions preventing you from finishing big ones.","Depends. What is it you're building? Some things are easier with WordPress like handling pages and templates but no one is doing a full custom WordPress theme build out in 5 minutes.Other things like a one pager that doesn't need a CMS is quicker by just making your one or two files. Like I built a flexbox css generator because I don't like any of the ones out there. No need for it to be on WordPress as that's just over kill.","IMO depends on if you’re building for fun or for a purpose.If I’m doing a fun “me” project, I’m gonna spend a month (or a week or two, whatever) doing some awesome, built from scratch, artisanal site. I’ll probably pull in some new tech I haven’t used before too, because learning is fun and there’s no deadline on a just-for-me hobby project.On the flip side, if it’s a website with a purpose, or something I’m building to help a friend out/doing for a client/whatever, time is valuable and how eloquent the code is pretty much doesn’t matter, only the end result does. So for me, the right answer there is WordPress.It also depends a little on long term goals. Web apps aren’t powered by WordPress; if you’re wanting to build the next (Spotify, Discord, YouTube, Twitter, whatever), you really don’t need to know no code/low code web builders. If you’re trying to make a “normal” website—something informational, possibly with a little custom functionality, maybe an e-commerce shop or something—then yeah, learn WordPress/Wix/etc.","\"OK. Bet. When do you want me to start the timer?\"Your friends are dicks and full of shit. Get better friends.","Was Reddit made with WordPress? Facebook? Stripe? Udemy? AirBNB? Was Wix made with Wix? No, it wasn’t.The issue with no code solutions is that they’re there to fill a very specific niche, low cost entry level websites for small businesses and individuals, they can be built on and modified to look a bit different but they’re inherently limited by design.If you want to work anywhere then you have to be able to work in whatever code they’re using, limiting yourself to no code is limiting your potential, both in your earnings and in your skills.In 5 years you can be building The Next Big Thing, in 5 years they’ll be dealing with no money clients who are an evening away from being able to do it all themselves.","What will they do if they can no longer utilize WordPress? Or the Meta changes entirely? You'll still know programming. Chat gpt can design a website in 30 seconds but there will eventually be diminishing returns. If you're still learning you should take the time to work through it. Use WordPress if you already have a grasp of what's actually happening under the hood. You'll probably be better at using it than a non coder","You should hire your friend for 5 minutes of his time to build the website for you.","It's like arguing about frozen food vs. cooked food.","What happens when the website breaks or doesn't function the way they want it to? Do they have the knowledge to go into the backend and fix it without using another plugin that you probably have to purchase to use any of it's features?","Yeah but he's just churning out a template that will look the same as many other sites and is hard to change. You can literally do whatever you like with yours. Plus, he's just being very rude.","No! Don't stop learning to code. As soon as you try to do something complicated or custom with WordPress you're fucked.Also you don't want to be 100% dependent on some niche company like Wix.If you like to code, it's better because you can do custom stuff.","I develop themes, custom blocks, and plugins for client's WordPress sites (while wishing it would only take 5 minutes). Sure, a lot of ground can be covered with Gutenburg, but the block editor is frustrating to configure to match an approved design (to your point). WordPress can be as simple or complex as you want to make it and it probably wouldn't hurt to mix both worlds: CMS + Your custom developed integrations. Just depends on what the goal is.","Keep doing you. Your friends' WIX site does the bare minimum and nothing more. Based on how unsupportive your friend is in the thing you take passion in, it might even be time to find a new friend.","Hey bud. Im a fullstack engineer (PERN/MERN) and know Wordpress and Joomla as well. It takes 5 mins just to install Wordpress, not even talking about configuring it. Guess what Wordpress plugins are built with? PHP! Your friend might know how to put the lego pieces together but you will be the person making the pieces and instructions to them. Not even talking about getting a job. You do NOT want to be competing for a Wordpress Job. Trust me.","If he says he can do it in 5 minutes, he's full of shit. Nothing can be done in 5 minutes.Using Wordpress (or something like Wix) may or may not give a better final result, depending on what the client wants. If they want a website they can edit themselves, then the answer is most likely yes.","Are you still in the process of learning webdev ? Unless it's a huge project, or a side project you just spend an hour on from time to time, taking months in the making of a website is waaaaaaaay too long.","He's full of crap, you can't build a WordPress site in 5 minutes. It has a steep learning curve to do anything sophisticated at all... and worth every second. I've written code by hand, used Adobe DreamWeaver and Muse, and some old pre-wordpress CMS that's pretty much gone now. I do everything with WordPress and Elementor now. You can do darn near everything you need to with that combination. You can hand off the site for them to run after, while making some bucks teaching them how to run the basics, (so they don't bother you every 5 minutes for mundane stuff) and still make more when they need sophisticated upgrades/changes... and they always do. And btw, I still write html and CSS using WordPress. I find plugins for anything more complicated than that. And btw #2, WordPress is running on well over HALF the sites in the world right now. It's going nowhere until AI puts EVERYONE out of work.","Code is for losers, that Zero Cool guy hacked into the pentagon using only his sunglasses and 90s techno music.","As a developer, I find building websites to be a time-consuming task, especially when it comes to compatibility across different browsers and screen sizes, this is such a waste of time I always say to my clients that building websites can be costly considering ROI.Nevertheless, with AI website builders like Framer (if you are a pro designer) or PineappleBuilder (if your not great designer ;)), I really enjoy building them! These tools allow to generate 5 websites in just five minutes and choose the one you like best. Editing with no code is much faster. In my case, the biggest challenge is to structure the website and write the copy for the pages. So again, AI is a killer help here.I would suggest you to try new tools. wix and wordpress are way outdated, so try AI and see if it's a game changer for you as well.","code","I’m software developer and I mainly work on java backend and I love coding, I even do this at my free time (yeah I’m one of those). But oh boy how I often dream that we didn’t write that code where we reinvent the wheel again and just used some library, framework or 3rd party tool. Because all the code we write we need to maintain ourselves and now when a customer comes with a request for a new feature we need to integrate it in our existing code base. And now you look at the code that you wrote like half a year ago and you think “what the actual fuck is going on here? who wrote this peace of garbage? Oh it was me. Was I high or drunk at that time?” and what would take like a day of coding now becomes a week because you have to deal with legacy. I don’t know much about website industry and how often you deal with such situations but I think this shows important lesson - the less code you write, the better. But it doesn’t mean that no code is great, it’s just less code is better. Like let’s say you develop a website for some local barbershop and they need an ability to make and manage appointments. And yes you can develop this yourself from scratch and it will have like gazillion of bugs and it will be shitty on average. And your client will be angry with you and he will never recommend you to anybody. Or you can just use some 3rd party SAAS for this purpose pay them like 10$ a month and just integrate it into their new shiny website and if this saas company is not stupid they already have a plug-in for Wordpress. Clients most often will be pleased because they have a feature reach system for pennies, and they didn’t have to wait 3 months until you finished developing your “masterpiece” and most importantly (for clients) they didn’t have to pay you for that 3 months of work. Which brings me to the next point, the most expensive part of software development is you - the developer(well and the development team in general). Unless you have like thousands of concurrent requests the hosting is ridiculously cheap. So yeah think about how much you need to earn per hour to have a good life, and then multiply this by 3 months of work you need to complete your custom build. Do you think clients would want to pay this price? Of course no, and you will need to reduce your price to market level and you will end up doing more work for less money, and I’m not sure that final quality will be better in the end. And finally, I don’t know much about Wordpress but when somebody says “I can do this in 5 minutes” they are usually bullshitting, unless it’s a teenager who saw boobs for the first time. Also, Wordpress is just a tool, there are other tools that can do the same thing. For example Django with their Django CMS, or there are these website builders like wix or Shopify. It’s your job, as a developer, to find a right tool for the job, that makes the job economically viable.","What he meant to say is I'm a script kitty who can find a script that can do that in 5 minutes and if there are any minor changes I am stuck as fuck.","It's not about doing it wrong; it's about choosing the right tool for the job. WordPress and Wix can be great for quick, simple websites, but if you enjoy the process of building from scratch and have complex requirements, sticking to your current approach might be best. Consider your goals and preferences when deciding whether to explore these platforms.https://jagmohankrishan.com/","I code and I have a Wordpress blog so I feel like the perfect person to answer. They can do it in 5 minutes but it’s way less customizable. I just paid a girl on Etsy $50 to do mine and get the code. Then I can go in and change it if I want to. So maybe do that??","Have you asked how it would build in five minutes?? Surely all plugins...spending time learning code is not for the faint of heart. It's good to learn to do this craft well and methodically. Don't be discouraged not all clients want WordPress. Since you seem to know your way around code, learn php and really make him feel like shit. Now you'll know what he does and do it better.","if your objective is to learn how to write code - then keep doing what you're doing.And nothing wrong with using Squarespace or Wix or WordPress if your objective is to put up a decent-looking site.","Yeah I mean, it depends honestlyI had this website I built for months getting it all perfect, and someone legit copied it into WordPress and stole it from me when I ended up dropping that client. Thank you stupid waybackmachine 😑The thing is, sure, it could maybe be done faster. But the point is?You can get a car wash at a drive through one or drop it off for hours and get around the same results too...Point is, different strokes for different folks. Do what you want/love and they can do what they want/love. There's no wrong or right way as long as it works lol. There's more efficient ways sure, but those ways may not be better in terms of functionality, advancements, etcAlso, arguably your coded website can be upgraded a lot easier vs a WordPress one. Let's say WordPress completely shuts down tomorrow, they're done and everyone who uses them is done. But not your code...","No code solutions are a screw up when you need to customize the app/site. Yup, they can whip up a static site quite quickly, but not bespoke solutions.This is esp. true when you're doing state management from several API calls, and writing logic based on those payloads and user events.","I think the moral here is that your friend is talking 💩 Even building a theme out in Wordpress takes time. I don’t really see a time difference between custom build and Wordpress, the time saving comes from the fact that you have a ready made CMS if it’s needed with Wordpress.","Why not both?","Everything has a different application. In some occasions WordPress is the answer, but regardless of that, I am sure if a clone of your site was built in WordPress, it would perform 5 times worse","If you like coding then do code. No-code solutions aren't made for developers.","It depends on what your goals are. If your goal is to be economically competitive making boilerplate-type websites, then you absolutely want to use something like Wix, Squarespace, Wordpress, etc...If your goal is to learn the ins and outs of web development so you can make applications that stray from the beaten path, then learning how to do everything from scratch will make you way more flexible than your friend.","First of all, WordPress is not even in the same category of good, no-code software. It's is buggy doo-doo.But yeah, why use a hammer to build a house when you can use a nail gun?Do you need to bust out the hammer every now and then? Of course. All carpenters are using nail guns now, but they still have a hammer on their toolbelt.If something needs to be hand coded because its complex, or because it's so simple, then hand code it. But if it's in the middle, then use a builder.","they could build this in 5 minutes in wordpresslol okay. maybe I need to learn wordpressMaybe. Maybe definitely. It's a valid option for many situations. Did you know that 40% of the internet is wordpress. and wixOne thing at a timeYou can squeeze juice by hand, you can use a squeezer, you can use a juicer, you can just buy juice...","WordPress and no code options in general are great for building very simple things. If your requirements are low WordPress can be great.If you want complexity and customization, it's absolute shit","It's wild to see how some people in here talk about WordPress. I am not saying it's a perfect fit for every situation but I'm working on multi million dollar WordPress projects, it's funny to see people here act like it's no code or comparable to Square Space or Wix.","\"Amazing! Can you show me?\"","As a professional - if something can be done in 5 minutes with WordPress, versus weeks by hand - we're going with WordPress. There's nothing inherently better about hand coding.The catch is that, unless you learn to code, you don't understand what WordPress is doing, and you probably don't know how to ensure that the resulting site is sufficiently responsive, accessible, SEO friendly, fast, etc.The other catch is not everything can be done with a prebuilt solution. Sometimes the tool for the job does not exist, and needs to be coded by hand.If your goal is to learn, do it yourself even if it would be easier with WordPress. There's no other way to learn.","No code is for Project Managers that think they know how to do it better...","There's a whole gray area between building everything from scratch and using \"no code\" solutions or WordPress.I personally like using GitHub Template Repos. I have a few that I made for various kinds of projects that cover a lot of the setup and boilerplate and all that. That way, I build pretty much everything using the code I wrote and maintain, but I can be up to like 90% done (for simple things at least) just by clicking a button.","That's no friend","I think it is a bit sad that your friend says that if you enjoy it then it is good either way. Professionally it is good to know the strengths and weaknesses of the possible technologies. In many basic cases wordpress with some customization either with some plugins or some custom html/css/js/php can get you a long way in a very short time.In the other hand for some rather serious integrations with a lot of data or interactions, fully custom build using serious frameworks does the job better as trying to use wordpress or similar will need a lot of tweaking and will end up more like a bandaid solution build on sticks then a solid site and developer workflow. It sounds like you could benefit from getting to know site builders to see what they can do and for what/when they are used. Then you can decide for yourself, is it worse than what you bring to the table or is it about the same with less time and effort.It might be that your friend can build something that you made in minutes, I do highly doubt it for sure viewing the whole experience and robustness of 'self build' is normally higher than wordpress if you have anything advanced.I personally like wordpress as it does fit a lot of clients and needs when they just need a site to showcase their company."],"points":584},{"text":["Struggle to focus on tasks at work.","Make yourself a rule to only check your email once a task is finished, or every hour or so.","You need to get with your manager on that. How are you billing the time?And like @phpx mentioned, only check emails after a task is finished and check in ordered received","Also, your manager should be giving you directives on how to prioritize, so that you wouldn't have to feel bad about making clients wait.","When I was a high-pressure dev, I would work for 25 mins, then check phone/e-mail for 5 mins. Rinse, repeat.","Taking inspiration from operating systems, you should probably use a task manager like Jira or simply prioritize your emails. Figuring out when to task switch and when to focus is a philosophical challenge. Task management itself takes time, but if you’re getting a large number of tasks, slowing down and spending more time on organizing can be worth it. So maybe spend the first 1-2 hours of the day prioritizing tasks, and then ignoring all new requests during the day unless they’re critical.It might feel like you’re wasting 1-2 hrs of your time but it’s important. It’s kind of like stretching for athletes. If you don’t do it you will injure yourself.","My trick was. Make enough clients cry and they'll get a project manager to be the in between to handle client communication.","Hey there, sorry to hear you're having a tough time staying focused at work with all those client requests coming in.I recommend using task manager app that can help you organize your tasks, set priorities, and track progress. Some popular options include Todoist, Trello, and Asana.These apps have features like task prioritization, due dates, reminders, and collaboration tools to help you stay organized and focused.","Yeah, keep track of each email and each task it creates if you can’t convey this properly to your manager or team.You’re gonna burn yourself out because there IS a maximum you can handle.You need to work out which is more important for your team, that you can triage all these issues or that you can work on them and get the tasks done.I assume you have some type of calendar attached to your email. Block out hours on your calendar, 5hrs for actual working on tasks, 3 for emails/meetings/everything else. Make sure these people and coworkers can see it. Have your emails auto reply your hours if need be.Block your email notifications from showing up on taskbars/dock bar/etc during your working times. Minimize any distractions that pop up. Mute your messages except from the certain people that actually matter.","Sounds like you need a product manager(s) taking over these emails for you - just forward them if you have one, or to your manager at least.Then, get them written up (create a decent title) and copy/paste the email in to the ticket & assign to your manager/product owner for them to prioritise.Your exiting work should be in some sort of ticket system (JIRA / trello / azure devops) for you to have an organised list of tasks. You don’t move on to the next task until one is “developer done” and in to a PR or testing queue.","Here's what I'd do:First thing in the morning you go through the outstanding list of issues in email and you make a hit list of what needs doing. Respond to anything you can to close it out but your job for the next 15-30 minutes is to make a task list for the day.Once you have your list you stop looking at email. You don't go back to it. If there's an actual emergency they should be calling someone, not emailing; it can wait, it will wait.If you get through your list before the end of the day just jump right in where you left off.Never interrupt a task to look at email.Every time you break task you lose about 20 minutes of productivity. So every little \"I'll just respond to this\" is 20 minutes poof before you're back to full speed again.If you have an SLA that requires you to respond within a certain time frame the answer is you either set a timer for that minus 15 minutes or you tell your manager you need someone to handle ingest because it's ludicrous to have software engineers doing admin work given how much we cost. Like seriously you want to pay someone $150,000 to respond to emails? Good luck to that company...[Edit:]It's worth me adding some context about why I'm suggesting this. For about 8 years I was the sole frontend engineer at a pretty popular site and the result was I fixed a lot of little things. So when they came in I had to go, \"is this actually worth my focus or should I get back to what I was doing?\"The only thing that kept me on track was getting militant about my notifications (everything turned off unless it's a DM on Slack or a calendar) and making my own list of tasks so I could track how long something important had sat.","You should discuss how inputs for changes/functionalities come with you manager.Reserve a time frame until they have time to give input on new changes and functionalities.It's also nice to have one place where you can track the changes from the client, we do it in Jira.We also had a problem with changes coming from different directions, email, client pinged me on teams, etc.EDIT:Probably I didn't help you with how to concentrate more, but maybe this will help too.For DEEP WORK/FOCUS:When I am working, I go off mode for 1-2 hours, shut down slack notifications, emails etc.People easily get used to you responding promptly and quickly, and that is sometimes not good.","To stay focused, try setting specific times to check and respond to emails, allowing uninterrupted blocks of time for deep work. Prioritize tasks based on deadlines and importance, and communicate with clients about realistic timelines. Consider using tools for task management and blocking distracting websites during work sessions.https://jagmohankrishan.com/","If a person doesn't set their schedule, everyone else will. Similar to what other's have said: partition your days into time blocks for checking communication channels, working on tickets/day-to-day, long-term projects, professional development, personal-time, and a time for reflection and planning. Trying to play whack-a-mole and burn the candle at both ends has diminishing returns.","I have worked for some pretty chaotic agencies, but none of them let the clients assign tasks or priorities.The only exception was that one time when the agency had treated a client so poorly that management decided that for the next few months, every ticket the client wanted solved they would get solved. (Basically they got a new project built simply by breaking it up into ticket sized chunks.)If I were you I would look into what industry standards are for dealing with tickets and present my findings to the boss.","Similarly I stopped answering the phone when clients rang, in doing so they are making you work to their agenda, I flip it around and call them back when it’s convenient to me. It’s the same with emails, just don’t look 🙈","You should only check your mail/phone every X time period.I maxime my productive time by using focus modes on my mac. I just don't see any notification while active. It has been automated.I check my mail three times a day:1. Start of the day2. After lunch3. End of the dayI always do 3 things:- Respond to all mails which requires < 1 min to respond- Plan all other emails in tasks for the following days- Respond that I will get back to the person on the planned day if I can't solve the issue on the same day.This will improve your focus a lot.All mails I got \"(CC)\" in, I don't respond at all. I move them to a folder in my inbox. I check this folder only once a day, because it doesn't require a direct action from me. It is impossible to manage otherwise.But you should talk to your manager, because in the long run you probably need some kind of Project Manager in between."],"points":29},{"text":["What is the market rate for designing and then building a 5 page website for a small to medium sized business?","I have two packages:I have lump sum $3500 minimum for 5 pages and $25 a month hosting and general maintenanceor $0 down $150 a month, unlimited edits, 24/7 support, hosting, etc.$100 one time fee per page after 5, blog integration $500 for a custom blog that you can edit yourself.Lump sum can add on the unlimited edits and support for $75 a month + hosting, so $100 a month for hosting and unlimited edits.I keep things pretty simple.","Depends entirely on what market you’re referring to. Prices vary wildly based on things like country, state, city, experience, etc.","Timewise about 3 months and usually around 20k for a marketing website. I don't count pages. I do not handle hosting but will assist with consulting with hosting companies and providing maintenance for $200 / hr.I also provide maintenance retainers where if you pay me $250 per week you'll get up to 2 hrs. After that, it's $150 / hr. Most opt for the retainers since it's such a better deal.","I agree that most time you spend on communicating with clients and making website updates; my strategy is to initially build a website with the help of AI. Then, I work on refining the website according to the client's preferences. This approach saves me a lot of time as I don't have to spend too much time building a website from scratch.I have created custom workflows for different niches and collaborated with a few agencies. If you want more information, feel free to DM me. Additionally, for clients with a tight budget of $400, I use PineappleBuilder, so I can build whole website under 1 day.","Same price as a car."],"points":15},{"text":["How is reddit generating these og images?","When a post is submitted, this image is server-side generated and put into the open graph metadata.The backend can render anything it wants, any way it wants, and make a picture out of it.Reddit uses python. It doesn’t matter much past that, but they basically just take title, description etc and run it through a template.Then, the resulting html will be rendered with something like imgkit.Then, in the html, use opengraph :og. Something copy pasted from stackoverflow youre free to search for:html <meta property=\"og:title\" content=\"The Rock\"/> <meta property=\"og:type\" content=\"movie\"/> <meta property=\"og:url\" content=\"http://www.imdb.com/title/tt0117500/\"/> <meta property=\"og:image\" content=\"http://ia.media-imdb.com/rock.jpg\"/> <meta property=\"og:site_name\" content=\"IMDb\"/>","As others have already pointed out, Reddit is using opengraph, but there are only sending the meta-tags when they detect a \"social crawler\".Using curl https://www.reddit.com/r/webdev/comments/1aubqul/how_is_reddit_generating_these_og_images/ -H \"User-Agent: Twitterbot/1.0\" we can find both<meta property=\"og:image\" content=\"https://share.redd.it/preview/post/1aubqul\" /><meta name=\"twitter:image\" content=\"https://share.redd.it/preview/post/1aubqul\" />in the response as well as the disclaimer: Your user agent Twitterbot/1.0 has been identified as a social crawler.","Here’s how you can do this with php: https://getkirby.com/docs/cookbook/content/dynamic-og-images","You can use cloudinary image generation for this.","I wanna know. Why is GoDaddy a terrible decision","Open Graph Protocol. I used r/mealybugs to test out a workaround in getting it to work with pdfs. The code.","I know it's possible to generate dynamic og images on a node server, i've done it with vercel before (https://vercel.com/docs/functions/og-image-generation), but it still requires you to put a link inside of the og:image meta tag.There's nothing in reddit's html defining anything with a meta image, yet Discord and Twitter (not slack) show these og images.","GoDaddy Sucks. Use name cheap","I haven't found any other way than the backend image generation by creating a webpage and taking screenshot using pupeteer, and then usung that image as og:image. But it feels like a hack, there must be an easier way to do this."],"points":253},{"text":["Who are the best web developers you have worked with so far and why?","One of the best developer I know has a PhD, worked at NASA and FAANG and has some of his code in space. He will take in consideration what people have to say regardless of their qualifications, you would often hear him say \"I don't know, let's figure this out together\". He was smart enough to know that despite his massive knowledge he didn't know everything and he taught me \"You never want to be the smartest person in the room\". I noticed he listened a lot and only talked when he had something important to share, he would talk to intern and juniors the same way he would other PhDs, tried to learn from everyone and share his knowledge every chance he had. He was confident but not arrogant, he knew the only way to succeed was for the whole team to succeed. He lived in the terminal and knew low level code super well and very complicated math, yet he would always see himself as a beginner.","Chris.Fucking legend.He had four monitors.","They were respectful first, competent second, and productive third.The older I get, the more I realize how nuanced those values are. You want to be respectful, but not to the point you don't show up for yourself. You should be competent, but not the point of being a brilliant jerk or over-specializing. Productivity is especially vindictive because it's the easiest way to earn praise, but you might be hoisting tech debt onto the rest of the team.In the end, I think finding a team to which you're well attuned is the most important factor.","The best web devs I’ve known was a colleague. He was very polite, made very good comments and suggestions while reviewing PRs and was very respectful while doing it. He never made any person feel stupid - be it a fresher or a peer. He was an active open source contributor - I think that’s how his comments were super high quality ! He was also willing to learn and built a ton of fun stuff along with junior engineers - that helped him be current and fun and knowledgeable about trends.","Mike. I hired that motherfucker as a Jr, and somehow he parlayed that career into retired at 40 with a full time passive income. Still not sure how with barely learning code, but figured out how to jump place to place until he had equity in a dozen apps and somehow negotiated enough contract money to never actually write a line of code again. Asshole.","My current manager. He's always positive, great at taking and giving feedback from engineers, product managers, and users alike, and is awesome about making sure meetings stay on task and sprints keep a reasonable scope.","Haven’t met a best web developer yet. One bunch I worked with were really nice but not super advanced at web dev, but there was an AI researcher in an aligned team who to-this-day is the smartest person I’ve ever met by a wide margin, and one of the nicest people I’ve ever met and who I can call a friend even though there’s a large age gap between us.Huge ideas about science and AI, technically extremely competent but working in a place they are light-years ahead of because it affords them some abilities and perks, from a country they can never return to, the only person I’ve ever met that doesn’t see age, race, gender or culture and just wants to hear your opinions and ideas. Challenges you to be a better you. They can talk to anyone and they can tailor the discussions to you at your level, never showing off and never trying to look clever.I wish there were more people like them. I miss working with them, we would have “big ideas” chats over coffee every morning cutting way into work tile in the short time I worked with them. I still see them on occasion whenever we get a chance to catch up.","This girl Amy I met. She went through a bootcamp but could walk the floor with me in code challenges and general speed of work. And a wonderful friend to boot!","There was a guy that I really looked up to, he was the best web developer I've ever met so far. He was literally a machine when it came to picking up languages and building useful stuff with them. He used to tutor me and others, and he was just such a nice cool guy. He explained things very well, and was always very positive. He now works at a car dealership and is very happy.","My mentor and friend who taught me everything about ML (before it was cool) in 2018 and data science. Guy had a PhD. in physics - very smart, but didn't look down on me or others, always wanted to help and solve stuff together - he knew how to do it, but wanted me to be proactive and learn on the go.Sadly, I don't work with him anymore because he got big boy money working as a principal engineer at a company that specialises in ML.I still speak to him, and we occasionally go out for a beer. :)","There was this guy who always +1ed me in terms of software quality. I learned a ton from him how to test code better, how to refactor better and how large scale applications work. He was very involved with tweaking Selenium to a point where we could write tests in a breeze and we even went the extra mile to hook into the lifecycles of a Spring Boot application.I was amazed to see what software is capable of. And when I thought we were done implementing, we spent at least another day refactoring and it blew me away how much of the code could’ve been taken away.Had a nice personality as well. We was at least 20 years older than me and could teach very well.","Ones who weren't dicks.","A great collegue from Argentina (for some reason, certain folks still think the best devs only come from SF and SV).To this day, I'm still amazed at the esoteric, super niche issues he was able to debug and solve. I'm not the best at writing code but I'd say debugging is my best skill - primarily because of how much he taught me.Beyond that, his sense for front end architecture was impeccable. I was wet behind the ears when I started working with him, but his design patterns were like putting on glasses to see in 20/20 for the first time. He knew how to solve problems with architecture alone, when everyone else might have said we needed XYZ library or another backend service to do ABC. This guy showed me just how much more complicated front end work is than I thought, and is the reason why I roll my eyes when backend guys talk like front end is just about slapping together some janky React components.Above all else, he was super humble and was always willing to jump on a debugging call if he had time; helpful almost to a fault. Miss that guy.","In my first role I was blessed to work within a small team of 4 exceptional devs. Each one had their own specific strengths and unique personality, that when combined, put out some excellent work. No egos or drama, everyone helped and supported each other to achieve the objective for the betterment of the team. On top of that, we also had a great manager who lead by example and backed his team 100%. Best job I ever had!","Igor. Crazy Russian dude. Angry, argumentative, didn't get along with anyone, but wrote amazing code in a tenth of the time of anyone else, and it was solid.Plus, he hated chit-chat. We finished a 10-week job in 3. Code is still running.","There was this Eastern European guy who emigrated to the US and worked at Microsoft. He wrote code like I couldn't even understand, and I don't mean it was hard to read or complicated.And he also talked about coding patterns I haven't even heard about.","Me!\"Looks in mirror\"\"Your the best!\"\"No, your the best!\"This typically goes on for a good 15 minutes, really gets you going in the AM","Ras. He was a coach for World Skills Competition a couple of times. Smart as fuck. Always on my speed dial for help.","Sheriffderek at Perpetual Education. his knowledge of fundamentals of HTML, CSS, PHP and JavaScript are unparalleled. He’s a great teacher and person too","The ones who are willing to compromise with each other.","I worked for a company which was as good as development gets. They were a magnet for great developers. A key was they financially rewarded productivity in a serious way. A true 10x developer could literally earn 10x.But, they were entirely hard assed on burnout and working overtime. Not a little hardassed, but they would fire a developer they felt was working weekends, etc. They said, \"If you want to work weekends, work on your own projects.\"Code coverage was pushed as close to 100% for unit testing/integration testing and all branch conditionals.This then created a culture of doing things right. Cutting corners, hacks, etc were generally avoided. Code reviews were fairly straightforward, do you have 100% code coverage? No, why not? This often ended a code review. The second part of a code review was, can I understand this code at a glance? If not, why not? The only excuses for code which couldn't be understood at a glance was if it were some math algo which was inherently hard, or if some required optimization was needed such as going ASM etc.The coding rules in this company were otherwise fairly small. They didn't give a crap about spaces around == etc. Do what you want as long as it passed the \"understandable at a glance\". Most of the code was C++ at the time and going nuts with pointers or templates was a great way to break this rule. Thus, they didn't need rules about multiple dereferencing, pointer magic, etc.The concept of managers was non-existant.What was amazing was productivity was far higher than any other company I've worked for before or since. With the massive code coverage, things just didn't break out of the blue. The high code coverage resulted in code which was clean and simple.Long story short, this company was filled with top developers for two reasons. They got paid extremely well and this culture of excellence ran through the company resulting in many great developers. Bad developers had extremely anemic paycheques and were quickly pushed out. What was cool was many of the \"bad\" developers were extremely capable developers. That is, they knew C++ to extreme levels, they could read ASM like the matrix movie, they could do hex math in their heads, etc. But they couldn't get their heads out of their asses and wrote great OOP templated nightmares which other developers couldn't comprehend. Their code would fail review after review after review. Whenever a few of them would show up at the same time, they might get away for a short while by approving each other's code but one of the founders would quickly put a stop to this. Seeing these hyper experts get the boot was almost as much of a learning experience as seeing the great developers work. So few lines of code doing so many features.There was a web frontend which was just so clean. The product was all about generating SVGs and making them dance, so they had their own framework for this. It was maybe 5000 lines of code. The ramp up time for a new developer was basically a day. This last is now my simple test for company having a great process and codebase or a terrible one. How long for a new halfway decent developer to get ramped up? If it is months before they can contribute a basic feature, then there is a serious problem; 1 day is my gold standard now.One cool thing which I was blown away at was how they mostly kept their codebase a monolith. Internally it was modular as hell, but they had two simple reasons for the monolith. It forced a coherency which kept people generally on the same page. But it was wildly intolerant of flaws; you just can't halfass your code into a monolith. Also, with a monolith your code simply had to stay inside its own module otherwise merging your code would be a nightmare as people were moving fast. You could checkout your code on Monday and by Wednesday you would merge and see 10 other merges had already happened.If this company hadn't long ago been bought out and scattered to the four winds, I suspect they would be all over rust now.","They don't care about stacks. They are great UX designers and can do a design on a napkin.","he actually reviewed my code and would make me re-write it","I met 3 very competent developers and what stood out with especially 2 of them was that everything they do has a reasonable explanation, clear communication and that they were respectful and nice people, didn't question you differently if you had no experience and were always open for new ideas. They also sat down and could explain things to me in a very simple manner. They were the best communicators in the team without any bullshit and still being respectful and nice, without ever bragging about their knowledge, they only shared when necessary, unfortunately they were so far ahead of everyone else that they had to share a lot lolFrom these first 2 I learned the following:- How to organize a team and work together- How to properly, respectfully and clearly communicate in a team- How to break down tasks- How to ask questions if they are for the client or anyone else (matter of concern)- Everything should have a reason, even if in the end it was a stupid reason or not the optimal way, at least you had a logical reason and everyone can see that you tried and thought about it- How to break down code and code review efficiently- A lot more things just about efficiently working together, communicating and coding​The third one I met is really bad at communicating and working in a team. He only ever had to work in his own codebase where he's the most knowledgable from the get go and everything is done how he wants to because he has no team. I worked with him for 6 months, then I had to quit because I couldn't take it anymore. At first he would always laugh at my questions for 5 minutes and insult me a few times because he thought it was funny and then he calmed down and explained it very nicely to me. But at some point it was just unbearable and I explained it to him, he didn't listen and thought I was the problem, so I quit. It's hard to say how good he is or was but I definitely saw some talent for how to approach tasks and break them down and that he had an amazing pattern recognition of code without reading the whole thing he knew structurally what would be wrong and where or what doesn't make sense, it was weird. But in the end it was also most of the times his own codebase and the stuff I committed he just changed the whole thing completely and it just had to be exactly what he imagined otherwise it was wrong. He was also very arrogant most of the time. Btw, he has high functioning autism. He also has a 40% job for like 5 years at this point where he earns as much as someone who works 100%, just because he writes efficient and optimized code. But they never found anyone to employ for a normal salary to take the project over because as he said \"they're all not good enough\". I on the other hand am just not sure if it's more because his code is, even though performant and secure, very overcomplicated for anyone else than him to understand. Btw., he doesn't write any documentation because as he says \"the code is the documentation, just read it\".What I learnt from him was:- How to approach a complex task and break it down into code bits.","Me :)","Myself.","Myself. I’m the GOAT 🐐","There was a spider in a corner of my room...","[deleted]","The best ones I've worked with would always ask great questions that would show my flaws and funnel me into an awesome robust solution.The secret sauce is they didn't show me how to write good code this one time, they showed me how to think like a great dev. Their questions still echo in my mind after years.","I just started as drupal developer,when boss found that this topic is way too much for me he bought me drupalizme tutorial...that is first time in my 6 years as developer. I cannot say he is the best,but i gonna stick here for a long time just becase his actions.","The best web developers I've worked with are back-end devs who don't do web development, but had to jump into the front end to implement something. They make sane choices and aren't jumping on every single bandwagon that comes along.","Met one at my current job. He's so good it makes me wonder every day why I chose this career as I'm clearly not doing the same job as he is.","A childhood's friend of mine, Chris. Guy started to hack into an online portal's accounts just to steal some random coins to himself. Long story short, I've seen this guy progress for years, he passed everyone while in University and now is working in a goverment agency as full-stack dev. He's 24."],"points":1886},{"text":["Host website from your computer without much coding?","Netlify, Vercel.","Github pages lets you host static websites for free, just upload your files to a github repo and then turn on pages from the repo settings. The repo needs to be set to public","You went straight to hosting your website as an onion????? How in the world did you skip straight to that, of all options","You might be interested in using Github Pages","Don’t host from your computer. It’s not 1997 anymore.","github pages. easy and free. if u buy a domain, you can link it. if u have a database or backend, just host it on the free tier of aws or watever. much luck.","As has been mentioned, you rarely want to do this. The main situation where you would is when you want to just quickly share something with people on your same local network. For that situation, if it's just html, these are a bunch of ways to quickly serve it up: https://gist.github.com/willurd/5720255 These are not intended for production use, and generally are insecure in that context.","Exposing your personal computer to the public internet like that isn’t a great idea. In addition, you likely have a dynamic IP assignment from your ISP which will complicate matters. Your ISP may even block certain incoming ports and, if this is home internet service, it may be a violation of your terms of service.For hosting static pages, GitHub Pages is usually my go-to, and works well. Cloudflare also has a similar offering called Cloudflare Pages.","You really dont want to host from your home pc for a few reasons:ISPs typically disallow this and you may have your service terminatedevery website gets driveby scanned by attackers, looking for easy vulnerabilities. In this case, if anything were found, your personal computer and any computers and devices connected to it would be at risk.if youre only doing static content there are many free solutions that will do this for you","All of these people are giving you answers in the cloud, which is the most straightforward way. If you're actually talking about hosting a website from your personal computer which it sounds like you might and having someone connect to a webserver on your PC, no one's answered that - no one does that much but it's certainly possible (I've done it a few times). If that's what you've got your heart set on, say so, and I may have some tips, otherwise cloud is solid bet.","just forward the ports on the router to the webserverthen you can type in your external ip address and see your site","You probably want to use nginx as a reverse proxy. What did you make your website with?","For hosting a website from your computer with minimal coding, consider using NGROK. It's user-friendly and doesn't require much command line work. NGROK allows you to expose your local server to the internet easily, providing a shareable link to access your website. Simply download NGROK, set it up with your account, and run it alongside your local server. This generates a URL you can share, making your website accessible without the complexity of server setup like Wamp. NGROK's clear documentation will guide you through the process smoothly.","Use blogger/Tumblr. Both are free","Pick, choose, test, try:GitHub PagesNetlifyVercelCloudflare PagesThis comes up every day and the answers are the same every day. How in the lord's name did you end up with an onion? You must have followed one hell of a sketchy tutorial to do that.That said, make sure, whatever your website is trying to do, you comply with the Terms of Service of the platform you choose."],"points":82},{"text":["GuildTag"],"points":0},{"text":["React for my learning situation","i mean it is the most used front-end framework in the world, even if you don't want to be hired it's still a very useful skill to have.","When I built my first project with vanilla js I thought why do I need to learn react when I could do a lot with vanilla js? Then I tried it... Now I feel I don't want to go back to vanilla js 😅"],"points":5},{"text":["What actually is V8?","Other languages that don't have VM are compiled ahead of time - producing a binary. Therefore, they dont need VM.","The Java \"Virtual Machine\" is more of a name than a description of what it actually is. \"Java runtime interpreter\" is what it really is. They are the part of the program that reads their respective input code and executes it line by line, doing little optimizations along way, managing the stack and the heap and threads or the event loop.It's the program that runs the code.The browser is the environment that V8 runs in that also renders the dom and such, and nodejs is the environment that v8 runs in that can talk to the host OS and such.","It's a brand of Vegetable Juice.","V8 is one JavaScript implementation. SpiderMonkey is another (for Firefox). Python does not have a separate name for it's default engine, it's Python. The whole argument in many comments of interpreter vs. Compiler vs Jit is beside the point. Analogoes C++ is the language, g++ or clang are names of implementations of it.","You have your compiled languages (C, C++) and you have your interpreted languages (JavaScript, Python). For compiled languages, you write source code (text files) and feed them to the compiler, a program that produces binary from source files, which you can then run on your computer. For interpreted languages, the interpreter just executes the commands from the source file. ... that said, the lines really are blurred. There are C++ interpreters nowadays, that execute C++ commands one by one, and JavaScript's WebAssembly is compiled. It's a crazy world out there.","Java, JavaScript, Python, Ruby among others are interpreted (well strictly speaking Java is compiled and compiles to Java ByteCode which in turn is interpreted).Their interpreters are the the JVM for Java, YARVM for Ruby, Cpython for Python and yup V8 for JavaScript.They're not the only interpreters many of them more than one.Yes V8 is a virtual machine, I guess it took the name \"engine\" from the previous J's interpreters that were not VMs but ...well engines ... they brought it as the \"new JS Engine\"","JVM is not virtual machine as like VirtualBox, it just a name.they are normal interpreter like Zend Engine for PHP, or python.exe for python.V8 is same category with them. Basically native program that read non-machine code to do something.JIT meanwhile is a type of method / process, for example PHP also have JIT.","JavaScript engine is the same as JavaScript interpreter it executes JavaScript code. The same as you have Python interpreter. VM on the other hand is a platform of running byte code compiled from different languages (it's not only Java, but e.g. Kotlin, Scala, or Clojure) . Its abstraction for real machine/computer that runs your programs.","V8 is a C++ program that parses and interprets text files written in JS.","It is a delicious drink made from tomatoes and other vegetables. Refreshing, but somewhat high in sodium.","https://developer.mozilla.org/en-US/docs/Web/JavaScript/JavaScript_technologies_overview#javascript_implementationshttps://v8.dev/","If you want to know exactly what it is, what it does, and how it works. I can provide you with documentation where all of this knowledge is covered. Send me message and I can email you the docs. Or guide to where you can find it it’s very interesting"],"points":121},{"text":["Code and Coffee Discord Community"],"points":0},{"text":["Javascript not passing data to python backend","why are you using a websocket?","The first mistake was to paste code as text. Nasty. Use Gists or something","Does anyone know what I am doing wrong?Pretty much everything","ChatGPT can only get you so far"],"points":16},{"text":["Hold a Healthy Sense of Caution Whenever Running a curl|bash Command"],"points":0},{"text":["How to get and store users input from a form?","A quick and dirty way is to send yourself the form data via [mailto:youremail@email.com](mailto:youremail@email.com) but that really only works if your not expecting many submissions. A more common way is using a third party service or setup your own server/database. I also am currently building to solve this problem as well to avoid the whole server/database part","Google Forms.","You'll need a backend (dynamic web site) for that. If you're using godaddy's free web site hosting (static web site), then I don't think you will be able to do this. I believe their free tier is pretty limited.If you don't want to (or don't know how to) write code then you can use WordPress, which has a robustr plug-in ecosystem, for just about everything imaginable. There are plenty of sites that offer wordpress hosting if you don't want to host it yourself.There's also sites that offer free dynamic web hosting, like netlify. AWS and Azure have free tiers that might work for you, although last I checked, most of the free services related to dynamic web sites were time limited (e.g. 1 year).","submit button, POST method on form.You need to use redirect to prevent double data send when users press F5 (if you remember double post bug on forums then you know)","I’m guessing you’re not using Wordpress but if you were ContactForm7 and Flamingo."],"points":2},{"text":["Friend wants to use GoDaddy, how do I tell them it's a terrible decision?","My friend says his other friend has used GoDaddy for years and \"they are fine\"And you know what?It probably has been fine.I certainly wouldn't recommend GoDaddy, nor do I use it myself. But if they are just going to do something like register a domain and host a WordPress installation, it's going to do the job fine enough. It really isn't that big of a deal if your friend decides to go with them. Perhaps suggest an alternative that can do everything that they need.","Leave them alone and let them.In the time I’ve been on Reddit, people on this site try way too hard to min-max their life or achieve the best “ideal” setup to the detriment of things that actually matter.Their choice of hosting company isn’t a blocker. Not working directly on their core business is. If issues arise, they’ll ask for help and figure it out later.","The only real problem I've personally had with godaddy is that their site is slow. Every page you go to takes literal seconds to load.","I'm a noob. I use GD. I find that it worked well for me. I had never published anything before and the customer support have been really good helping me.Where do all the pro's in this sub buy and host?","Instead of showing why not Godaddy maybe try showing what you use and why. Maybe it will click for them.","Eh, not a great company by any means, but for a non dev, 'they're fine' isn't really far off the mark.I wouldn't advise they use GD, but I also wouldn't be too invested in swaying their decision.","Honestly, they're not nearly as bad as they used to be. I wouldn't make it my go-to recommendation, but they're competitive on price and the control panel/admin site is far less intrusive and upsell-y than in years past.","They're probably fine for most people.","A SaaS company that I worked for had a client report an email as suspicious from our mail-chimp new letter. Good Daddy sent an email to our CTO that ended up in the junk folder. Good daddy decided to block our DNS after 2-4h without a response. Many of our clients who used our software couldn’t even log in. This ended up costing our clients millions of dollars because of the outage by the time they removed the block.The very next day they started moving everything to route 53.","Speak in a language they understand: Money and risk.Godaddy deliberately makes maintaining a free SSL certificate difficult by not allowing things like certbot, so you'd need to manually update your certificate every 60 or 90 days or whatever. If you miss it and your certificate expires, users will get a big scary warning that makes it look like your site has malware, and really damages your brand. Why do they do this? Because they try to sell users certificates for something like $100/year. A certificate is not some physical good you obtain from someone else. It's generated code, just another step in the development process and one that doesn't take very long. But non-devs don't realize this, so they fall for the trick of thinking it's some product they need to buy.Explain this to them as an example of how godaddy has a practice of deceiving less knowledgeable people into buying products they don't need. They try to push all sorts of junk SEO tools and other products on people who don't know any better as well, but IMO, the certificate issue, and the fact that they deliberately take measures to prevent developers from being able to do it themselves, is the most egregious example.Personally, I used godaddy for something like 15 years. I still have a couple of products through them I believe. But the certificate issue is what got me to finally move away from them for hosting. As for domains, I moved away because they're a few bucks cheaper on other services like namecheap.Currently, I use digital ocean for my hosting and not only is a basic droplet (VPS) cheaper than godaddy, it seems to perform much better than all my godaddy hosted sites.important edit: I glossed over the part where you mention they aren't developers. Are they running their own websites, or paying a developer to build them? If the later, I would strongly recommend against godaddy. If the former, while they might get duped into paying for extra products they don't need, godaddy's probably the best at hand-holding for non-devs.","I would tell them \"When you're ready to move, let me know\"You can't tell people to move when they think they know. Warn them and let them find out for themselves.I'll give you a worst case scenario: You coerce them into using a better host and they have a problem then say \"I should have used godaddy\". If they won't listen now, when they discover the problems for themselves then they'll never go back.","Unfriend them, 😂","Nothing wrong with Godaddy as a registrar really. Been using them for over 20 years with various businesses.Truth is every 5-10 years or so the best host or registrar changes as companies grow and become more shitty/have data breaches/outages etc..","I mean - if your friend asks a plumber to fix a giant leak in their sewer system, do they question the plumber?Honestly - I'm in my 40's - I used to give this advice all the time, and people would ignore me, and then a year, or 2 years, or 5 years later, disaster would strike.I learned to just say \"yeah, remember how I gave that advice, and you ignored me? ... Pepperage farm remembers...\"","What exactly is wrong with godaddy. They have a perfectly fine Linux hosting web server option that can get a python, PHP, or whatever web app up and running in minutes and can support a healthy number of connections, etc... they will be just fine on GoDaddy. Please explain what is wrong with Godaddy as an option.","Just tell them to use cloudflare domains or namecheap. I've had no issues with either and you can say cloudflare domains just charges you with no middle man free","What's wrong with GD?","I mean... send them this page and let them see for themselves? https://www.google.com/search?q=reddit+godaddy","\"Friend wants to buy a Honda Civic. How do I tell them to buy a Lamborghini instead.\"","You can just tell them GoDaddy over charges and will make you pay for things you can get for free. That's why I don't use them. Money aside I'm not sure of there is any technical reasons.","Reason?","I guess it depends on the following questions:What do they need hosting for?What are your reasons against GoDaddy?If your buddies just want to host a WordPress site to market their business or have a blog, GoDaddy is an okay option.If they have some idea of building some large scale web application, they might need a better resource.","You can offer your advice as a professional, you can never make someone listen. Often the best thing is to provide advice and then stand back and watch.","All the experiences I've had with GoDaddy have been horrible, but I know some people have good experiences with them. I would never recommend anyone that company.","I use Porkbun, but recently I had to use GoDaddy for a premium domain, and initially it seemed like it improved but then the horrors began. They charged me $5k for a premium domain but an error prevented my order from going through and they had no record of the transaction. Luckily I was able to dispute the transaction with the payment provider, but it just reminded me how amateur GoDaddy seems to be. Don't trust them.","When I am in this situation I tell them not to do it. I don't convince them, I don't send them articles about how horrible the service is, I don't link to hundreds of reddit threads about that exact topic.I just tell them: Don't do it! And I also tell them: If you do it, I can not help you with it. Not with the registration, not with the setup, not with managing it, not with connecting a domain to a server, not with unsubscribing services or deleting the account.Basically: do what you want, but as soon as GoDaddy is in the pipeline, I will not help with problems and I am sure as hell not responsible for anything that goes wrong.And if it's not friends but customers doing this, I would even have them sign a waivor, so that I am not responsible for uptime, function, or whatever.","Danica says they're good, so I think you're wrong!/s","Say “eating boiled potatoes for the rest of your life is fine too, but you don’t wanna do that”","My friend says his other friend has used GoDaddy for years and \"they are fine\"Find new friends.","https://www.quora.com/Does-GoDaddy-have-the-right-to-suspend-my-domainThis link should explain better than anything else","I had a number of things locked in with them and I had not time to move off but I have moved away from all the service offerings.It is basically the modern AOL. It is appalling and no one should be using them and they should be loosing money hand over fist to enforce a buy out or change or for them to just be gone.Their setup and system makes it very hard to move off the solution, it is a lot of hassle and they clearly rely on that to keep customers rather then making a product solution people enjoy.- They recently moved their email service (Again) to office365. The offering is less functional across all plans so you will find less email space for example as an issue.- Their web hosting just not kept up with the times and is just bad- Everyone else is cheaper in just about every product offering from them.- Their support calling you constantly the seem to think is them being good. I do mind a company checking on a customer, that is awesome but GoDaddy treat it as a means to try and upsell. Same with support, they try to offer an upgrade as the fix to actual problems as much as possible.You can go on and on. They are just bad.","It's ain't that deep bro 😂","[deleted]","Don’t.save your breath.","what is kinda annoying to me about cloudflare domains is the lack of ability to park them for resale","Why should I leave? My domain is up for renewal and cloudflare doesn’t support .ca and dnsimple is more expensive…","Go daddy killed my daddy","Just say they dont offer free privacy protection and he will get bombared with sales/scam calls","I use Namecheap for my site, https://lavacharts.comTheir admin panel is easy to use","Tell them that if they go with Go Daddy, there will be absolutely zero support from you when problems arise.","Probably fine. It works for lots of people. I loathe this. We have dozens of clients in GoDaddy Pro. But it’s just easier sometimes to let them go do their thing. Save the grief.","Are there any good articles or stuff I can forward?The search function of this sub.","Show him better/cheaper services.","Let them make their own mistakes. They’ll soon learn.","ask them if they wanna be able to change their site in the future. if the answer is yes then GoDaddy is a bad idea. I've done multiple transfers off of it. Every single time the DNS propagation takes 3-5x longer than it should. Although easy for me, they obfuscate code made on the builder plans, so for most people it means a re-build of the codebase has to be done. For small sites this is easy but for bigger ones that can become a very large problem.","Friends don't let friends use godaddy","You haven't specified which GoDaddy service. For DNS, it's been perfectly fine for me over the last 6 years managing 200+ domains. I wouldn't recommend it, and it wouldn't be my first choice, but I don't have anything bad to say about it either.","OP, what’s wrong with GoDaddy?","I like Google domains","With your mouth","It's like using a pawn shop to do your banking.You are going to eventually get screwed, and the whole experience will be distasteful and unpleasant. Also, most of your fellow customers are losers.","Can you suggest few good alternatives here as well?","The cunts at GoDaddy keeps trying to put my domain up for sale at their other company's marketplace... My domain is not eve bought from them, fucking cunt company.","Just to be clear, are they using GoDaddy’s hosting services? Because as a domain registrar, they are probably fine.Assuming they are using hosting services, I would say that the effort you’d need to expend to effectively communicate the transition lift relative to the cost savings and performance benefits aren’t worth it unless you have a financial stake in their work","Don't use Godaddy and other EIG providers, beware with them. You better go elsewhere.","Let your friend use whatever they want.You as a friend can provide advice/suggestion and that's it. All you can do is hope that later on when they want to become more technical/advanced or need access to more features they'll start looking at other things like vps/digital ocean/aws etc. Stop being a net nanny. We all here to learn and play you fucking narc. ban me see if i care.","I used go daddy as I didn’t know any better, built my website using the free trial then they removed it and deleted all record of it without telling me before the trial even expiredI only found out when I directed a client to it. When I went on my domain is just an advert to buy it off them even though I own it through them…","I used go daddy as I didn’t know any better, built my website using the free trial then they removed it and deleted all record of it without telling me before the trial even expiredI only found out when I directed a client to it. When I went on my domain is just an advert to buy it off them even though I own it through them…","Neither of them are developers. How do I say every web developer on earth would strongly recommend against GoDaddy??Just give them the reasons: 1) They charge you twice as much as some other registrars for renewals, 2) they rely on sleazy sales tactics, and 3) their support is bad.If they're fine with paying $23/year for renewals, they're smart enough to not get the \"Full Domain Protection,\" and they like the support...then there's no issue.Whatever registrar you use doesn't really matter that much.","It doesn't matter all that much.Do they allow non developers to host a website fairly easy without much technical knowledge? Yes.If they ever need to go a different route later they can.As you can't really explain why it's a bad idea to them, then you clearly have no idea why it's a bad idea other than reconstituted bullshit from Reddit.","I use godaddy as domain registrar, site is hosted at Netlify. I'm gonna move to AWS or Azure when the promotion period ends in 8 months.What are other cheaper alternatives?","Huh that's crazy, I actually like GoDaddy personally and their VPS has been amazing compared to all the other sites I've tried.. guess it's just personal preference lol","Try one.com","I use them for domains and linode for hosting","I would suggest saying “that’s a terrible decision” and give them a better option.","I wish I could say this post doesn’t make me sad but it does. My multimillion company I work for uses godaddy for certs and dns. It’s the absolute worst.","Where do you go personally?","I have a few domains from them without issues. I host elsewhere though. What’s wrong with them?","Just show these reddit comments","I only used GoDaddy to buy domain names and point it to my hosting service and never had a problem with them. But never used their website/hosting options","My friend says his other friend has used GoDaddy for years and \"they are fine\"They wouldn't be in this position if they at least worked for some."],"points":688},{"text":["LMS SaaS Development","Yes, check it out, portal.thebullstrading.com. It's a LMS runs on Core PHP and MySQL (supports PostgreSQL as well). Tested with upto 10,000 Students currently. It's pretty possible to do such endeavours as a one man army. Some more features I added later included Face Unlock to stop Student's from sharing credentials.So yes, you can do it. But incase you want any help, write me a DM. I'll spin you the code along with required modifications. Good luck 😊"],"points":0},{"text":["Looking for some feedback on my site I'm developing with HTML, PYthon and Flask","Sounds like you're doing fine. You'll get better at it over time."],"points":0}]