[{"text":["What are the benefits of using third party services (e.g. Clerk) to manage users?","I'm old school. I write it all as much as I can, myself. It is true, webdev today is outsourcing everything as much as possible, it appears. At least to me, it appears that way. It reminds me of tech support being outsourced to places overseas, like India, or the Philippines. I've heard that didn't work out so well in the end, but I digress.I think as long as you can learn and be comfortable with the pace and output of your own efforts, there is little need to outsource anything. Just my opinion.","If you’re going to use a service like this I would check to make sure it is using an open source standard that actually has traction. I don’t know anything about clerk but if you need to use it for the short term just double check that you are actually able to migrate away from them at some point."],"points":0},{"text":["What do you think of my website?","Thought about traffic: if users didn`t like the design they would at least visited site, so i think it's not related to design problem.Thought about design: maybe replicate some patterns from Medium site design for posts(text part). They are easier to read and give more `space` feel while reading.brutally honest answer: I liked this site.","SEO is complex. It takes a while for all search engines to fully index and re-index all websites in their own time, so I wouldn't sweat this too heavily.In the meantime, check out what Google indicates to do when things change: https://developers.google.com/search/blog/2005/10/when-your-site-changes"],"points":0},{"text":["Entire Blind 75 - Leetcode interview questions solved - cheers."],"points":0},{"text":["How do record time difference between inserting a redis key and attempting to acces it.","> How do you guys decide TTL?Choose effectively a random number that seems like it'll fit the need.For the most part I can guess how effective a TTL will be and how much/little we need."],"points":0},{"text":["I am doing an assignment & I need help","Maybe use grid and make the timeline elements span X columns (assuming one day is one column)."],"points":0},{"text":["How to learn a new skill ? When to put it on your resume","I start immediately building something with new stuff I’m learning. I’ll use a tutorial as an outline for building what I want. I don’t waste time on building the actually tutorial project.I learn by overcoming road blocks, each roadblock is a true challenge that I have to figure out how to get around. And after years of doing this I’ve learned that I nearly always get around a roadblock.What’s important is also recognizing the difference of a roadblock and a dead end. A dead end means you have to try a different approach.After I finish something I’ll know if I know enough to advertise my new skill on my resume.","I see the doc of the tech then search for a stared project with it and just deep dive. It`s always easier to me seeing something in practice than reading docs that can be hell as large.I watch tutorials only if i don`t understand the tech at all to get the overview and start.I write just a piece of code that would implement logic of that technology, and than try to implement it in later projects.At the point I know I will not mess up with it.)) It can be entry level but with confidence that you can solve problems this tech is suited for."],"points":0},{"text":["Building wordpress custom themes for clients as a developer"],"points":0},{"text":["My developer portfolio - Showoff Saturday","The picture of the road that you have as a background image is nearly 5MB.Run a Lighthouse / PageSpeed Insights test and try to fix the mobile performance.","Some projects headings are distorted(2 liners), cursor change for objects that are clickable, and 2 lines animation seem a bit buggy for me, not sure if it's intended.","It all looks nice, but I can't take you as serious as I'd like because you use WordPress.I'm sure you're a nice person, a great developer and fun to work with. Just... WordPress is for noobs.I expect haters will hate. :D"],"points":1},{"text":["I'm building a desktop app that scrapes job sites for new listings","Would you consider building this as a browser extension? This has the same benefits of scraping on the client (server not required, avoids being IP blocked) but makes it a lot more accessible since I find people tend to not be as willing to install a desktop app as they would be to use a web thing.","This app is exactly what I need right now, as I'm on the job hunt myself. Is there a free version or maybe a trial period to test it out?Keep up the awesome work, really digging this project!"],"points":1},{"text":["PWA with Angular 16+, how to install via mobile browser?","Most likely in your manifest. Make sure you have all the relevant bits in there the proper icon, etc..If everything looks good check your browser settings. I'm not sure off hand but safari might need something specific if that's what your using"],"points":0},{"text":["Open Sourcing Webpack and Storybook Microfrontend Starter"],"points":0},{"text":["Gaming News API","News sites don't often love the idea of you taking their content and reposting it on your own site, so there won't be many free high-quality APIs available :)That said, you could try scraping a news aggregator like https://www.start.gg/discoverBing also has a news search API but iirc it's not cheap and you'd still have to scrape the links yourself: https://www.microsoft.com/en-us/bing/apis/bing-news-search-api"],"points":1},{"text":["Leapcell: A Better Alternative for Heroku + Airtable"],"points":0},{"text":["@scope emulation with revert-layer"],"points":0},{"text":["Cardstack component with animations similar to Apple Wallet / Passbook:"],"points":0},{"text":["Visual Studio Code removing types when saving","Check your selected formatter and the format on save setting","Is it just for any?"],"points":3},{"text":["[Showoff Saturday] Auto Transport Website Re-design"],"points":0},{"text":["I am Building boikot.xyz - a Log of the Unethical Practices of Big Companies","React Router makes the site super fast :) please submit amendments or records for more companies if you feel like it and thanks so much for taking a look!!"],"points":0},{"text":["How do I host a Wordpress website","WordPress can do this just fine. If you throw in WooCommerce you can even sell things there. As to hosting, icdsoft.com works for me. You can buy a domain name from cloudflare.","Wordpress gets hosted on a LAMP/LEMP stack: linux, apache/nginx, mysql/MariaDB, php. You can provision your own over at DigitalOcean, or go with preconfigured shared hosting at any of the legacy hosting providers: bluehost, inmotion, a2hosting, etc.For a brochure site like you're talking about, a static site via Jekyll, 11.ty, or Astro seems like it would be easier. That results in a a website that is literally just a bunch of files in a dir which means it's super easy to host: you just need a file server, not even a compute server. Cloudflare, Netlify, even GitHub will host a site like that for free."],"points":1},{"text":["[Showoff Saturday] launched a restaurant site this week complete with an interactive food menu that is also tied to DecapCMS so they can edit it themselves. Made in html and css with 11ty static site generator."],"points":0},{"text":["Check out my self learning chatbot!"],"points":0},{"text":["I built a dashboard to store and share all your online referral codes","The Figma designs look really good!","Hey everyone!Over the past months I have been building on friendscodes.de as a fun project. Goal is it to keep all your referral codes in one \"wallet\" to make sharing easier and more beneficial.For those interested in the codestack:Design: FigmaFrontend: Next.js 13 and SCSSBackend: Supabase​Hope you enjoy. Drop some constructive feedback or ideas on your way :)"],"points":1},{"text":["Aria-Pressed issues with Windows Navigator"],"points":0},{"text":["How To Build RESTful APIs With Node.js And Express? • Scientyfic World"],"points":0},{"text":["I created an interactive photo gallery inspired by a recent trip to West Africa","nice photos!","Photos aren't loading :("],"points":0},{"text":["I feel like I wasted the bootcamp I took by making myself absolutely reliant on ChatGPT and I don't know how to get back on track.","I mean, stop using ChatGPT and just do it yourself. There’s no fast way to learn. It takes struggle. You avoided that at your own peril. Just like you can’t be very fit and muscular by not ever working out. Your brain needs a work out, that work out is gonna suck, it’s gonna be tiring, frustrating, hair pulling at times, but it also comes with great reward. A runners high to continue the analogy.There’s no answer other than the one you have avoided. Do with that what you will.","At least you are aware of it now and you can fix it heh.","First, take a break. It sounds like you’re pretty stressed out, and forcing yourself through that doesn’t help anyone. Putting yourself under that kind of pressure isn’t going to suddenly make things better.Second, this is all a good thing. ChatGPT is a crutch, and you’ve outsourced your creativity and learning. Now it’s time to actually learn. You’re going to be taking some steps back before you take steps forward. You have some idea of how to ask questions about doing things, so now you have to learn how to answer those questions.","How about you attempt the exercise if you don’t succeed ask chatgpt how to do a part. Don’t ask for all the code. If you were able to do the exercise show chatgpt your code and ask how it could be better. Chatgpt is a tool, use it without being reliant on it and learn from it.","Hey, old school dev here. I know your pain. Been doing this IT thing over 30 years and the struggle can be overwhelming at times for a variety of reasons. Imposter syndrome is real. Learning new things is hard. Staying in \"shape\" is hard. Time management is important.Keep at it. Just break down a problem into smaller chunks. Really drill down into the specific problem and research the problem. Do your own solution but take inspiration from others approach.You got this.","You're okay, you know more than you think you do. Using references is okay, everybody has them open constantly, even for things they're intimately familiar with. Don't feel like a failure when you need to look things up. You'll find yourself doing it less often as you go.To be honest, a bootcamp was never going to be enough to have things completely figured out anyways, so you're not really behind. Try a sample project, and don't use any chatGPT.","Take a break from AI, the muscle memory will come back quicker than you think. Also this is normal, sometimes copilot will write a bunch of my unit tests and they all pass and I am like ok, I better proofread before I push this 😂","You just need to use ChatGPT longer","Lol, at some point in life you have to put in the effort to learn without ml. It is sad that junior devs will be stuck being juniors if it continues like this.","Sorry can’t help you there, I learned my skills on the job after years of humiliating undergraduate and graduate study.","Is it ok to use chatgpt to help with syntax? I usually only ask it to simplify topics and to help me with the syntax for things","I wouldn't feel bad for using ChatGPT if I were you. Before AI many devs were pretty reliant on Googling and Stackoverflow, even for reminders on basic stuff. AI just makes this process more efficient imo.","Attempt the exercise. After 30 minutes of trying then give it to ChatGPT and ask it to “give a hint”(NOT SOLVE) and attempt it again. If you truly can’t solve it then ask it to solve it and go through the solution.","things others say and for a new project, best way to learn is when things dont work. read docs, google stuff to solve issues","I was involved in a discussion around how experienced devs think ChatGPT and other tools might end up hollowing out juniors ability to progress into the field and this is exactly why.You just do not use code you don't understand from any source, it could do virtually anything. Most importantly if you want to be a professional, its got a pretty good chance of being suboptimal or not a really good fit for the problem and wider codebase architecture. Stuff experienced devs will pick up on sight.It does get easier, alot of it simply becomes intuitive knowledge eventually. I particularly remember the trouble promises gave me when I was learning them.Depending on were you are at, I recommend getting comfortable with array use (and avoiding misuse) and how to write a good well designed class as first steps into a solid understanding."],"points":76},{"text":["Is it feasible to outsource UX dev to a non-technical graphic designer who will use images or (basic HTML/CSS) then have a front-end coder implement it in code?","If you’re outsourcing why not have them give you an idea of their own processes instead mapping it out for them?","UX isn't graphic design"],"points":0},{"text":["I made this Atticus Dashboard","😎 - Atticus DashboardAtticus Dashboard is a web-based dashboard that provides various information and services in a centralized view.- Features+ Real-time clock and date display+ Cryptocurrency prices (BTC, EURO, USD)+ Weather information with forecasts+ #AdGuard Home statistics+ #Transmission torrent client details+ #UpTimeRobot monitor status+ #Glances System resources overview+ Lightweight, write in #php, #css, #jsIf this project helped you in any way, please consider giving it a ⭐️. Thank you!GitURL: https://github.com/sandu-bogdan/atticus-dashboard"],"points":0},{"text":["Looking for project collaboration forums to learn new technologies, any suggestions?"],"points":0},{"text":["[Showoff Saturday] Tracking workouts is slow, so I made a thing to quick-add my sets with a tap, and adjust with a custom slider","I think there's an error with the gif I uploaded. Here's a vid: https://streamable.com/0zhlm1[to mods]: FYI adding mp4 says it will be automatically converted to a gif b/c vids are not allowed on webdev, then it won't allow me to submit my post, because my source is is not an image."],"points":0},{"text":["How would you *actually* approach building a full-stack app today?","Depends on requirements","I will say C# and .NET Core on the backend side, for sure. It is a great community. It’s cross-platform, very performant, type-safe. It will be here for a long time. For frontend React (or any other JS based popular framework with an extensive community). Avoid Blazor or anything similar because JS is the king of FE development, and it will be a lot easier to find somebody experienced with JS frameworks than any other alternative. If mobile apps are involved, probably flutter.For hosting I’m not sure. I would go with Azure or AWS. They are not the cheapest but they are the best. You can learn about cloud and maybe even get some certificate that you can monetize in future.","Whatever is free and in demand. Gotta ride the wave.","LAMP lol but I'm a noob.R and Python feed the MariaDB database, but otherwise, pure vanilla.","I have the exact same set up as you for hobby projects, except my backend is hosted with fly in a docker container and my monorepo is managed by lerna. Moving forward, i would probably want to tie my database and backend in one service, maybe railway? Or just AWS straight up.","I like Next frontend and API routes, Prisma, Planetscale, and I use my own iron-session auth but next-auth or Clerk are good too (I just like that it’s free and simple with iron-session). Hosted on Vercel.This setup is dummy simple to use with decent DX and type safety. You could use the T3 stack, which basically just adds TRPC to the mix for that automatic typing but I didn’t like the extra complication/abstraction and prefer to diy it. Only bits you paying for is Vercel hosting and Planetscale, both of which have a very generous free tier.Reason I chose Planetscale is because I like the way they give you dev/prod branches that you merge similar to Git, as opposed to normal database migrations. It also has a high concurrent connection limit which is good for serverless.","less is better. Turns out browsers are good now and AWS Lambda / google functions / whatever you actually don't need much to get fully functional very quickly. Grab the tool for the job you need for that day and dont over complicate it."],"points":5},{"text":["I have a React and Redux book from 2019, will this still be useful as a base to start with?","Redux especially has changed pretty significantly due to the introduction of Redux Toolkit (also made and maintained by the Redux maintainers). I’d recommend checking out their docs.","Probably, but why not just use online resources? That way, you have access to the latest documentation.You can usually find guides on how to do the majority of things on YouTube for free.","Books get outdated very fast unless they are about computer science fundamentals. React has changed quite a bit since 2019, React hooks was released 2019 so there might be a risk that the book mostly covers class components.","oh no"],"points":4},{"text":["Chartjs with .Net 8 mvc TypeScript"],"points":0},{"text":["wtframework/sql: An SQL statement builder for PHP","~How can you user WHERE queries containing operators (other than =) or SQL functions?~It's unclear how you should specify lists of columns (potentially from multiple tables, using aliases, and/or SQL functions).You may want to look at how Aura.SqlQuery handles this."],"points":0},{"text":["[Showoff Saturday] I built a website to generate SQL queries from your prompt"],"points":0},{"text":["Do we need a BFF and are we doing it the right way?","The Java backend is responsible for validation of data. Full stop. Anything extra is only for user experience. The more you validate elsewhere, the more you have to add custom and complex logic to handle the case where your layer validated something as correct and your backend rejected it. It can get dicey fast.The Java backend is also responsible for sanitizing data. Having it assume everything is already sanitized is a recipe for problems.Having a JS API in front of the Java to do early validation is… sorta microservice-y? I could see how this could let you do some stuff faster, but it seems like a fucking lot of work and complexity to run the extra service when you could just learn Java and work in the actual API. It mostly sounds like you’re looking for ways to avoid doing Java.I do think having a spam detection API could be nice to have, but since you’re already calling out to a third party… adding it to the JS layer instead of Java doesn’t make sense to me. It’s a lot of work and no value add aside from not-being-Java.","Everyone should have Best Friend Forever.","So you already have astro server for server rendering front end app. And instead of:Browser -> java apiYou want to:Browser -> astro api -> java api.If i get that right, i think it is correct to forward your request from there. You might even not expose java api to public internet, accept only from astro server and only open astro to public. You can do more stuff from that bff layer, it makes it more flexible.","Possible reasons to use a BFF:To use as a token handler,to enable the frontend to make API calls to its own hostname using cookie authentication and keep JWT tokens out of the frontendTo expose endpoints specialized for one specific frontend. When I see this 'in the wild' it's usually that they have a set of microservices for their backend, and a layer above that exposes tailor-made endpoints that can aggregate and orchestrate between the different microservicesIt's up to you to decide if those things are worth it","[deleted]","Having two apis for a single post seems very unnecessary.Using Astro for a single form seems unnecessary.People love to get distracted by shiny things when refactoring."],"points":9},{"text":["I'm a Data Scientist that took a crack at building a website","The design looks very clean. Good one on that color pallet which feels modern, yet formal. However, I tried to paste in a BBC news article and it says \"working on enabling this source to be scanned\".Is BBC news source not yet covered within NewsCord, because I do see a BBC news article in the trending section on the home page?If you need here's the article I tried to see what exactly NewsCord does. BBC NewsAlthough I saw what it does through the pinned news posts, I thought I should ask how and why this happens.","I thought this was an interesting idea, so I clicked on the top trending article. According to the tool, this BBC article has a 62 variance score compared to this RNZ article, and it identifies three key differences.Except... they're the same article. The RNZ article is a reprint of the BBC article, word-for-word identical other than localization style changes. The AI is repeatedly wrong when it summarizes differences between the two articles.Have you talked with any journalists before building this? This sort of wire-service redistribution of articles is extremely common. I think a tool like this is an interesting idea, but it has the potential to amplify misinformation and be actively harmful if it's claiming two news organizations are reporting different facts when the articles are in fact identical.","Looks nice! Worked fine on my end. Just a bit cluttered on mobile but that is unavoidable. Great job!","IMO looks great, love the logo. Skeleton loading UI too nice touch. Pretty good for a “first timer”.","Cool idea","Your footer column spacing could probably be smaller - it snaps to the next line too early, so it looks weirdYou can fix an overlap, by providing some padding or marginYou need to give your text some room to breathe, it looks incredibly cramped, and I can't stop looking at \"Enter\" and \"NewsCord\" not being aligned (Which they don't necessarily have to do, but I can't unsee it), so you could probably put that text elsewhere?\"Why waste time say lot word when few word do trick\" - Kevin","Looks great!Tips:set your scrolling list's scroll CSS property to auto instead of visible so that scrollbars pop up only when needed.change the CSS styling of the scrollbars (I could give CSS example if you want)in the landing page, set the main content block's height to like 80% leaving room for the top bar and an equal height portion of the bottom footerThats all I can say for now. Cool site!","I've seen a bunch of these \"compare news articles for better information literacy\" sites get developed over the years. They never seem to get lasting traction, but good luck with yours :)","Off the back of u/CPstyle observations, I've just pushed live a change that should completely mitigate the chances of NewsCord incorrectly finding \"key differences\" between articles that are duplicates. This is why I love this community, it's a safe place to put things out there and quickly iterate and improve. Thanks for all your support ❤️P.S. About that BBC article, it now can't find any similar articles anymore which in my opinion is better than what it was doing before! Instead, have a look at this as an example of what the AI now generates: https://newscord.org/results?url=https://www.politico.eu/article/russia-plane-crash-ukraine-prisoners-of-war-putin-accuses/","Looks like Reuters is blocking the AI from scanning the page.Error message: Sorry! We could not process this article. It is possible that this news source is blocking us from retrieving their article contents. Please try another one."],"points":14},{"text":["Plotteus | The JavaScript library for data storytelling","Basically:Plotteus is an open-source JavaScript library designed for data storytelling. It allows full control over animations, enabling more natural and engaging data-driven stories. The library supports seamless transitions between different chart types and elements, including colors. It includes six chart types like bar, bubble, and scatter, and offers features like config-based operation, grouping support, and theme adaptability to any background color. The focus is on empowering the audience to interact with the data at their own pace, making stories more memorable.If you don't like the summary, just downvote and I'll try to delete the comment eventually 👍"],"points":0},{"text":["I built a playlist player component for React (free, opensource)","The component is called ListPlayer and it is available in a package called react-list-player which I recently made public and opensource!Check it out! I would love feedback on this!Github repoIntroduction demo(note that the tracks listed in the playlist in the demo are royalty-free)Additional features:Ability to remove controls (if you have your own playback controls you want to use)Turn keyboard shortcuts on/offAbility to loop, stop, or \"continue on\" when you reach end of playlist (if you want to avoid interrupting music when the end of the playlist is reached and want the player to move on to additional suggested tracks for example)Package comes with the header, controls, and header-card components if you want to use them by themselvesPlanned features:Seek bar (with a desktop and mobile mode)Shuffle buttonEmbedded lyr-ix component (optional)","Awesome! How does one go about starting to design such stuff, without any prior knowledge of react?","The music player, while looking great, could use a seek bar or progress bar.","Very cool!","Really nice design, impressive stuff!","Oh nice","It looks pleasant and amazing!!!","Ohhh. Do you use Rэreact native or just a react?","I like it. Why not publish on npm?"],"points":10},{"text":["[Showoff Saturday] Online Map Editor - add markers, lines, animate markers along lines, generate pixel and heat maps. Download as JS code, static image, or embed directly into a website."],"points":0},{"text":["Was finally able to get my agency website live - would love to see what people think!","Very nice. I'm not crazy about the color scheme and scroll snap feels a bit off in featured works but I love the speed and design. Good job!","Looking at this on mobile, the title text “In today's competitive business world, a captivating digital presence is crucial. Custom website development can provide a distinctive and memorable experience through appealing visuals, interactive elements, and well-structured content that accurately represents your business's philosophy and nature.”Takes up way too much of the screen. Idk I feel like the title text should be shorter","Our services button: Make it full width on mobile and Also take off the menu button and keep it top right so that it doesn't come and destroys the website scroll and aesthetic.Overall a nice build.","I like the content and the layout.What id change is the featured projects section. It different image sizes look unprofessional.Another thing im a lil confused by is the pricing scheme. Feels a lil confusing😅","It’s too messy, the colour scheme is off, you don’t need that light/dark theme toggle set it from the browser preferences, the buttons are too bulky, the featured cases, either make them the same size or do something else entirely to show them because it looks off when they’re not the same size, the toggle switch for monthly payments or lump payment takes the attention away when it’s position is set to sticky, you don’t need the user to be able to switch between that on a whim, if you do need it put that option on each offered service instead.The menu CTA is off on mobile at least, you open the site and it’s party covering the “our services” button, maybe consider a hamburger menu instead? Or change the colour of it, your menu button shouldn’t have the same priority as your other buttons at least not when it’s overlapping them.","I don’t like it.The fonts, the colors, also the different sections are not separated enough. The CTAs are not coherently spread across the page. The „Dark/Light“ mode switch is completely out of place.On the „About Us“, it’s just you, and then totally irrelevant „HTML JS CSS“, that‘s for people that just graduated from college or bootcamp. No customer will care for this.All the pictures look too random. „People with computers“… bit boringI started to like the portfolio section until I scrolled down and you just pasted the full webpage as a single image to the website. Looks completely off.What I like: the descriptions in the portfolio sections, nice to read how you and the customer worked together for a satisfying solution. The accolades are also a nice touch and you seem like a great person to work with.I would also rethink the name. „Test valley“ sounds like you accidentally released a test build. Why „test“? For someone that adds technical details to their About Us page, you should know that „test“ is super overloaded and mostly means „not final“ or just „testing“.","Sizes and spacings are to be improved, by much. Everything is too big, yet some text is too small. Not everyting is aligned corectly, ex. contact info next to form looks like it shouldnt be there. \"Discuss the project\" don't look as good as you might think","Looks solid! You could add a little more life - make that round logo spin, on scroll maybe. Also I’m not a fan of stock photos with happy people.","Site is cool but not gonna lie most won't notice but some of your copy has chatgpt signature phrasing in it."],"points":13},{"text":["HTML Template suggestions, please.","Building something big like that; I wouldn’t use a template at all. I’d go for a framework like React and use Tailwind with Tailwind UI or another component library.","GitHub list of templates: https://github.com/bradtraversy/design-resources-for-developersI am also struggling to find high quality free html templates so if you have a website you find which you can single out and highly recommend let me now. For now all I can offer you is a list of resources you can look through"],"points":1},{"text":["I built a programming assistant that searches the web to help integrate packages into your code","Check it out here: https://useadrenaline.com/I built this because alternatives like don't have the best interface for dealing with code snippets, and also let you attach multiple snippets of any size to a question. With this, it's a lot easier to questions about integrating packages or libraries into your code and get answers grounded in search results.Please let me know what y'all think! Showing attached code snippets inside the question box was an interesting design problem, and I'd love some feedback."],"points":0},{"text":["I made an interactive TSX tutorial using Monaco editor","little styling bug: https://imgur.com/a/rs2uLR6","I know there's a ton of these CodePen-style tutorials but I haven't come across many that support both TSX and React, so I made one. There's 12 lessons including using TypeScript with styled-components, NextJS and Redux."],"points":1},{"text":["What's the point in SEO when stuff like this happens?","I could be wrong, but I think SEO is just to get your site near the top of the search results.Technically, these are paid ads that fall outside of that.On a personal note, I usually scroll past the ads when I'm searching for something anyway.","On desktop at least Google will give you the card on the right hand side telling you about the company Bet365, which is probably what you were looking for anyway","Most people skip past the sponsored postings","It seems like lots of people here are echoing the “you don’t know how ads work” comment.I think it’s fair to assume that just because someone complains about them doesn’t mean they don’t understand, perhaps too many people not taking this post as lighthearted/jokingly as OP intended","Virgin Games is a gambling company now?RIP","Not answering your question but last time I used \"Ublock origin\" it removed those ads.","Many people like me use adblockers and never see those sponsored sites. And anyway almost everyone that is familiarized with internet will avoid sponsored sites","I said it once and I say it again: SEO is scam","What’s your question? You are searching bet365 but didn’t get your result? Or your ads bet365 didn’t appear at sponsored?","Devs and techs scroll pass the ads. The majority of people just click on the first thing they see. It's Google's business model. Can't blame them.","Nothing. SEO is not a magic pill. It's just a way to follow Google's search rules.A lot of SEO is bullshit anyway.","do you work in seo for a gambling company","Those companies paid to be on the top of search results and google makes money off ads. I don’t see any problem here lol","I don't even use Google anymore","Not everyone clicks on the ads and not every query has ads.","Should be pretty easy to write a plugin that removes any sponsored results. But yeah google is pretty shit these days.","People usually skip the sites that have a \"sponsored \" tag I think. I'm that kind of person. The label is a red flag to me.","These are paid search ads so aren’t related to SEO which is aimed at driving relevant traffic through organic listings. Also paid ads tend to see a much lower click through rate. While it varies depending on query, the top organic listing tends to see around a 28% CTR while paid ads will have around a 2% CTR.","Easy: stop using Google.","No point at all just pay for the ad placement and get #1Not like Search Engines even return actual results anymore","Welcome to capitalism. Is this your first visit?On a serious note, a little work with uBlock origin will get rid of all this stuff pretty easily. I use it with :has-text() to filter out links to garbage sites that never give me any useful info anyway.What I hate most is an entire page of results to sites that look like they're relevant, then give you three introductory paragraphs about the topic you're looking with \"Register for free to read the rest\". No, thanks, you can sell someone else's PII, I already get enough spam.","Those ads are still SEO optimisedEdit: grammar","It is how it is nowadays. And it seems like nothing can be done about it.","just pay moreunless there is trademark for bet365 but I have no idea how trademark works for keywords in ads.","Is this why people can't be bothered with search engines?","There’s a paid listing, and there is a free site listings.If you want to be at the top with the sponsors, you need money.If you want to use SEO, then your listings will show up depending on how good, underneath the sponsors.","So you're trying to open a casino ?","There are 2 types. SEO, In a nutshell means you have to configure and optimize your site to be the top on searches. SEM is what your seeing. It means they paid to be the top. Free and Paid","You are using the following mentality, why eat if you are going to shit out the food. Why sleep if you gonna wake up again. Good SEO will get you right under the ADs bad SEO and your users will never see you.","Former marketer here. You will not believe the amount of people who intentionally skip ads and click on the first organic links.","SEO = F2PAds = P2W","Adblocks existWhat you are seeing here is unfair competition. Advertising in this way is reason for civil lawsuit and for google to take down those ads. I have written many C&D letters for this reason.","PPC in competitive sectors (gambling, hotels, law, insurance, financial services, etc) can be crazy expensive. A good organic ranking will get you traffic for ‘free’ (beyond the time and effort to get there in the first place obviously). A mixture of both is probably best.","The point of SEO is to make our customers compete over who can pay us the most money. -- Google","What if it doesnt happen ? Then bet365 is the nr 1. and if it happens, bet365 knows about that and does marketing on meta / television / real life etc.Do you think little bit of good SEO is enough to become a company like tipico or bet ? Nobody will find your website if u dont do both, ads and seo to be at least on the first page","Skip sponsored content, use other browsers?","Competition is a thing, and it's not gonna play fair either.","SEM != SEO","Money","Usually my brain just ignores anything that's under sponsored 😂","It’s still beneficial to work on seo related strategies even if you’re not paying ads. Pending industry being top ten could still mean millions of visitors a year.","Nobody clicks on ads first","Google blows. I googled a url without .com the other day and had to go to page 2 to see it. Google is slowly becoming an add riddled ask jeeves.","Sometimes I just click the ads to cost the company money","Yea I just skip those results. I assume almost everyone does to","Youve just discovered Google’s business model, congrats","I've been using kagi search engine which has no ads because it's a $5 subscription.","Google is trying to squeeze every last penny out before the adpocolypse. It's why Youtube has so many ads now. People will increasingly switch to AI chat to lookup information.Good riddance, Google has gotten gradually worse over the years.","Exetentions people extensions!","Having used ad blockers all my life, I forgot the search page even had ads. Life is great without ads","SEO isn't very helpful in most scenarios; however, there are a few cases where it is:Someone is searching for your company/product but there is something else with the same name/abbreviation. It happened to me once where a game I was working on got drowned out by someone who happened to choose the same exact name for a sloppy game jam game and manage to outrank the game we had been working on for monthsYou are going for a marketing campaign and are targeting very specific keywords such as \"best vegan budget apple pie recipe\", which most apple pie recipes aren'tIn most cases though SEO doesn't do much"],"points":795},{"text":["Why does the width on website no fit full screen ?","Max-width: 1440px. Margin-inline: auto.","1440 what? 1440 humans? 1440 plants? Don't forget your units. 1440px.","Search for boxed view.","For some reason that screenshot as is looks pretty catchy. I'd actually make it like that with the scribbles and gradient.","Check out the bootstrap container for a sensible width","I usually add margins to left and right and gradually reduce them with media queries.","First, you need to specify the correct units of measure. In your case here, it looks like the desired max-width would be 1440px. However if the actual screen width is greater than that, you will see the content have a side margin to fill in the difference.","This is called a container, and the container width is usually dependent on the viewport width (responsive for different breakpoints). Check Bootstrap or Tailwind how they do their container."],"points":21},{"text":["Connect GigE camera such as Basler ace to Chrome, Safari, Mozilla etc"],"points":0},{"text":["SharpAPI - AI-powered Swiss Army Knife API for Programmers"],"points":0},{"text":["I made Mystery Search - Google, but you get the last person's search","love the idea! (your personal website is also very nice)"],"points":1},{"text":["Api design advive","I'm not fully aware of your deployment strategy (e.g. are there external vs internal APIs?)However, personally I don't feel comfortable with tenant and/or site information being part of API invocation - as long as those are externally exposed APIs. Basically, caller shouldn't have any knowledge of which user/booking belong to which site/tenant - or even about existence of site/tenant.My guess is that externally exposed API (i.e. exposed to external caller) will only ask for user/booking info (without any knowledge of existence of site/tenant) - and then there will be some API-gateway-kind-of layer which will figure out (based on some mapping) details about site/tenant. Further, this layer will invoke internally exposed API with this additional knowledge (i.e. request enrichment).As long as APIs you've mentioned are internally exposed, I think those are OK. If those are externally exposed APIs, then IMO that's not OK (i.e. external client requiring to have knowledge of tenant/site).Further, I hope you've done due diligence w.r.t. to REST URL convention (assuming that those are REST APIs) - e.g. /users, /users/{userid}, /users/{userid}/<additional user details> and pagination etc. (e.g. what if /users return data of thousands of users which is too much to be handled by frontend).I hope this helps."],"points":0},{"text":["Problem in serving CSS statically"],"points":0},{"text":["What's the point of WASM and how/when should I use it?","Never use WASM just because you want \"speed\" unless you can justify this. The use case for these performance benefits are uncommon in most web apps, only when you repeatedly make heavy mathematical operations (like in DSP or rendering applications - even then AudioWorklets or GL shaders can already help you). A new dev trying to sweet talk his PM that their eCommerce shop needs a WASM rewriting for speed is worthy of a Batman slapping Robin meme. Wrong solution for wrong problem.The best use case is portability of libraries. For instance if you want a client side PDF generation functionality you can benefit from heavy binary operations (font rendering for instance) executed outside of the JS VM using existing solutions in lower level languages.can I pull it off together with Svelte or Vue or any other framework?Yes, your JS layer posts messages to the WASM VM which you can consider requests to perform an operation. This is framework agnostic.","The main advantage is that it's a binary compilation target, which means you can write code in other languages and compile it for the browser. I've ported C++ and Rust code to web projects by compiling it to WASM and interfacing with JS code.There are some performance benefits too, because WASM is closer to the machine code that the underlying CPU uses, but I don't think it's the main advantage of the technology.In the cases I used it, the code I compiled to WASM was mostly mathematics or heavily calculation-oriented code, so maybe that's more appropriate to seek performance on. Most web code doesn't really do much computation, and wouldn't gain from the performance improvement.","Yeah that guy either doesnt know what hes talking about or you understood him wrong. Basically webassembly converts your high-level language code, wether it be JS, C+ or any other language, and converts it into machine code (i.e binary) that web browser can understand. Standard JS is interpreted line by line at run time.Edit: I think what the video might have been trying to say is JavaScript is used to load WebAssembly modules and to provide an interface between the WebAssembly code and the web page's DOM.","WASM isn't about speed or performance, but a compilation target. The idea is to be able to run C++ (or other) routines within a web browser and expect a normalised performance across browsers in the same machine. The normalisation term here is relevant, because you could optimise JS-only routine to be very fast in Chrome, but it wouldn't be very fast in other browsers. Always keep in mind that JavaScript by itself is very fast.TL;DR You don't make websites with WASM, you run C++ routines. That's the use-case.","The guy may have been confusing WASM and asm.js. The latter was a subset of JS that’s designed to be really fast, so other stuff can compile to it.WASM is a bytecode standard, and the there’s at least one interpreter written in Rust, though you could write an interpreter in any language. The point is to have a standard fast VM allowing native-like performance in the browser. Or at least Java-like performance. I like to think of WASM as the new JVM.","Is it useful to try wasm to solve crash browser issues when trying to create pdf with hundreds of pictures ? I want to create the pdf on the wasm side with Rust, but I'm not sure of the result regarding the previous comments...Thank a lot."],"points":18},{"text":["Can a front-end developer build a website without a back-end developer's assistance?","absolutely! you can totally build websites with just front-end skills… start with cool portfolios or blogs (static websites)… Full-stack is awesome for more advanced stuff like e-commerce","You dont need any courses or classes to build websites or become front end developer.Having certificates will not help you in finding a job as a developer.You will be able to build basic websites with just front end, anything complex requires backend.if you have any questions - shoot.Edit:The thing youll miss the most with frontend only will be storing data securely. Its required for payments , implementing user account functionality (register / login / email verification etc).","yes, a front-end developer can build a website without the assistance of a back-end developer, depending on the complexity and requirements of the project.For static website a front-end developer can handle full project development without help of back-end developer, static website don't need dynamic data to show on website.For more complex website and functionality where your wanted to show dynamic data and authenticate user, then their is a need of back-end developer.","Yes, you don’t need a back end for static sites. You can even make dynamic sites, using other people’s data and obtaining it through API calls.There are plenty of free apis to use, such as pokemon or cat facts.","Yes, you can but you're going to have a tough time if all you know is the frontend. But you're in luck! Learning the backend is super easy!Try out some of these resources:https://developer.mozilla.org/en-US/https://web.dev/https://github.com/matheusfelipeog/beautiful-docshttps://stripe.com/docs/apiYouTube: Full Stack Web Development Tutorial Course","There’s no such thing as a certified front end developer, find a project you wanna make don’t think about if you’re actually able to complete it, start working on it, even if you fail making part of the project you’ve learned something","If you can do programming on the front end, try doing whatever programming you need on the back end, and boom now you are now full stack","Absolutely. I only know html and css. None of my client sites have a backend. I made this in html and css.https://www.mapleandyolk.comYou can do it. It’s easier than you think."],"points":7},{"text":["🖤 ❤️ heartwave","this is cool! (though maybe add an explanation because it took me a while to figure out what this does)"],"points":0},{"text":["Help me pick a stack!","I would recommend SvelteKit for the frontend. It has good SEO features, smaller bundles, and loads only what is needed on the current page. It also has simpler code and generates vanilla JavaScript from the code.SvelteKit is also very good for SSR with the right adapter.","https://fresh.deno.dev/I think you might find this approach intriguing.","Next.js and Remix are very SEO friendly and have tiny payloads. So you're wrong about that. They aren't SPAs until they are first rendered, before that they are SSR.My preference is Remix, it's more flexible and just overall nicer to work in. Remix doesn't have React Sever Components yet, which more or less allows a single component to work both in SSR and CSR, but they are coming.These frameworks generally don't work well as main backends due to limitations of connections on DB connections. It's better to have your Next/Remix/SvelteKit/Nuxt call a backend API, which you can write in Go if you want. If I were you, I'd roll out a couple smaller microservices using Go before going all in. I've worked in Go quite a bit and I really dislike the language and ecosystem a lot."],"points":4},{"text":["Navigation in Print Media Style","TUTORIAL, CODE & DEMO: HERE","ok, that is seriously cool."],"points":0},{"text":["Web app - customer account login template"],"points":0},{"text":["Too many layoff recently so I created an app to help write cover letter in under one minute","How about adding pdf upload and then generating letters from that content? I'll try this version when I get back to my office."],"points":1},{"text":["Does a web Development job have no growth?","There is a lot of growth. Junior developers become senior developers. Front end developers become full stack developers…. You can go from making $40K to over $100K and more realistically it will take you a year or 2 to find a junior role","What does your dad do for work? Sounds like he doesn’t have much experience with tech.Software is a huge part of nearly every job in every company.If you learn how to build software that makes or saves a company money, there is no limit to your growth.","Web dev here, 14 years of experience and a Bach Science in CS. I’ve worked at a number of big companies whose names you know, and had some years where total comp including vesting stock was >400k. Not trying to brag or make comparisons, just trying demonstrate that there aren’t really many limitations on what you can do or make as a web developer.I’ve bounced around through product work (making features / websites / applications), platform work (build tools, testing frameworks, CI/CD, observability, etc), and a lot of architecture work. In all of those roles, my focus is on building websites, whether it’s thinking about end users or developers at my company. I like building things that people use, and making the things they use easier/better/faster. My current role is pretty much just architecture — helping hundreds of developers figure out best practices for browser and backend API design patterns, optimizing, etc. Designing software so that they can ship faster and more reliably.I’m not a full stack engineer, despite all of that. I don’t do ML, I barely understand SQL or anything about databases, and DevOps / microservices / hosting / etc is all Greek to me. My job involves doing many things, but at the end of the day, the goal stays the same: ship better websites, with a focus on users.You absolutely can start going with 6 months of learning, which I love about web dev — how accessible it is. But I can also say that the more time you spend learning about engineering in general (with a degree, maybe, or something similar), the better set you’ll be for your whole life. The only one who will limit your career is you; don’t let anyone else stop you from doing what you want. Definitely don’t spend your life doing work that isn’t interesting to you, because that shit will eat you up.","Web is a excellent place to learn programming, but programming websites isnt where the big money in software is. start with it and have a plan to progress so you dont get stuck doing old tech management like half this sub kicking some dead 25 year old lamp stack around.","I would say, as much as it’s grown, there are for sure a lot of uncharted waters in this world. The explosion that will come with AI as it gets better seems scary, but to be honest I feel like it will help us chart these waters quickly.","Depends what you mean by web development.This touches on a discussion that I have been meaning to raise in this sub. Web Dev can be broken down into three main areas.What most people think of as web dev and what your father was probably referring to is building public brochure service and ecommerce sites. The bread and butter of the web. The digital presence that every business needs these days. The glorified product list and contact us site. In my opinion, this part of the web is likely declining. It's a solved problem. You have WordPress, Squarespace, Wix, Shopify, eBay, Amazon, Etsy, Facebook and tiktok. These services have been slowly chipping away at the need for trained developers to allow SMEs to gain a presence on the web with minimal need for technical expertise ( you still need some design oriented work). And then you have the new GPT LLM kid on the block. I think the era of chat bot services is finally here, and this is an interface consumers like once they get good enough.Then there is the dark underbelly of the web, the back office systems. These are the internal tools, the more complex B2C applications, the B2B systems that power the supply chains for the first part. This is where myself and a lot of other old school web developers lurk. There is still a lot of work in this space, but the platform is also starting to see encroachment from things like native apps - mainly on mobile devices, but also more traditional desktop platforms (the company I work for has standardised on OSX so I've built a few native apps for people in the office cause it's easier and offers a nicer experience for them), as well as the dark horse VR, which has potential, yet to be realised.Then you have the fringes of web development. Wasm, embedded, browser based games, ChromeOS, etc. This is the wild west and nobody can predict how long it will hang around or what it will be used for.The web as a core set of technologies has a lot invested in it and is pretty solid, but the days of making a quick buck with a to-do list bootcamp under your belt are over.","Maybe your Dad means web design. Like building a basic Wordpress site or even a static html/css site. I'm assuming what he's trying to say is \"Anyone can build a website for a small local company. Takes 20 minutes on Wix\". But that's not what webdev is."],"points":22},{"text":["Static blog with free/cheap hosted CMS for non-coders","Maybe Netlify CMS?","Here you gohttps://github.com/CodeStitchOfficial/Intermediate-Website-Kit-SASSWe already built it for you. Follow the doc go get the site live with a working blog in a minute. Then just change the html and css to your needs for the site. Client can edit the blog in a Dashboard created by decap cms. Enjoy!","I generate my blog from markdown files in my GitHub repository. I use cloudflare to build it on commit and host it. Totally free 😊","If you know your way around Svelte, try Primo CMS, it's open-source (MIT license), but they have a paid cloud option if you don't want to manage it yourself.","Blogger","Prismic.io free tier for your CMS (this is cloud hosted though) + Next.js or Nuxtjs and deploy to Netlify."],"points":3},{"text":["What is at bottom right","it's just the webpage html being displayed in the textarea.The base64 in the screenshot (OP) is the base64 encoded jpg of the FBI seal.To trigger the page loading you have to hit a bunch of vault pages in succession for it to prevent further accesshttps://vault.fbi.gov/","Pack your bags and be ready to leave at 5am tomorrow.Also, don't be overenthusiastic - waterboarding only sounds fun when you don't know what it is.","It’s a puzzle. Solve it and they’ll hire you as a cryptographer and code breaker","Share the URL if you want anything other than wild and inaccurate speculation.","That looks very much like a recaptcha token","no What are you doing","It's an ARG you have to solve it to get the flight logs","Nuclear bomb codes","If we told you then we’d have to kill you.","Whoops that’s my SSH private key 🤡","Cookie clicker save export code kek"],"points":319},{"text":["How to capture a long scrolling screenshot of a website which uses lazy load?","Firefox > Scroll entire page > Right-click > Take Screenshot > Save full page","I’d look to downloadable software solutions for this rather than trying to roll your own. I highly recommend Cleanshot X if you’re using mac and fully replace the built-in screenshot tool. Not sure what tools are available and high quality for other OSes nowadays."],"points":3},{"text":["In relational database, how do I decide what should be a table?","Yes, columns should be its own table.Anytime you have a relationship that is 1:M you need a separate tables. If you have a M:M relationship then you need a table for each thing plus a 3rd join table.Even sometimes for things that are 1:1 you would still want to separate them into separate tables. Take a User table that has country they are from. It would be better to have a separate countries table than just repeating the same data in the Users table.Read up on data normalization which will help with how to efficiently design relational databases.","One thing I’d suggest is not to get too worried about getting it perfect first time, you know you’re not sure, if you can’t see a clear answer up front, go with one!If this is the first project you’ve worked on for yourself, chances are it will never get finished, or be replaced by another.Let’s say you aren’t sure, so you decide to put boards in users, eventually you’ll come to a point where you’ll see it isn’t working as you want, so this brings you the opportunity of going back, refactoring, splitting it out, and improving.I find with coding there’s a lot of things that are hard to tell people why, but once you learn from doing, it makes so much more sense and sticks much better","Does a Board only ever have just one Column? Probably not, right? A Board can have one or more Columns. That's a 1:n relationship, which cannot be appropriately modeled using columns in an RDBMS without resorting to extended data types like XML or JSON (which would be anti-pattern for this use case).","I agree with others that column should be its own table in a relational model, but what about using a NOSQL model? I don't have much experience with those but since many support storing pure .json it seems like it'd be a more natural fit for a starter web dev project :)","i’d have column as it own table. With a foreign key to boards. So i could get all columns by board id."],"points":4},{"text":["At last, its official: Google: HTML Structure Doesn't Matter Much For Ranking","I'd like to hear more of the context around \"doesn't matter much\". And what structure they're talking about. Like, are they saying div soup is OK or are they saying semantic markup is irrelevant to Google? Because those are two very different things.Though it won't change my behavior. Semantic markup is as much about accessibility as it is anything else and I just like making well-built sites. Until it starts hurting I'm going to keep doing the best work I can.","Makes sense. Poorly designed websites with <div> soup (been there) encourage search engines to optimize for them, which disincentivizes developers from putting effort in markup.Btw I would love to find a good, thorough guide on using semantic HTML for various web site designs--from landing pages to news aggregators, admin pages, and full-blown desktop-like applications.","I mean they might be right, but I'm not sure I'm going to take advice on semantic HTML from a blog that can't spell semantic correctly.","I highly doubt this. But even if it were true. It does matter for A11Y and ADA laws.","It takes little to no effort to use semantic HTML and at the bare minimum helps users of assistive technology. Regardless of what Google may or may not say, there’s no excuses. Div soup helps nobody","“It doesn’t matter that much” is NOT the equivalent of saying it doesn’t matter. There are over a hundred ranking factors in search, so in the grand scheme, each individual item “doesn’t matter that much”. It’s the sum of its parts.","And accessibility experts screamed out in unison.This might be true, but certainly not helpful to semantic Html advocates","SEO industry : this is important, pay us Google : it doesn't matter  I feel it has been like this for a decade.","Wait. What!?","if they have 100 factors for ranking, no single factor matters much ;p","Lol every source is just another post from the same site.Pretty sure this is not true and just a no-name site pumping out clickbait.","Google is pretty trash regardless these days. Any money spent trying to game Google would be better spent just on advertising and marketing in the first place because that's what you're competing against. Not people fiddling with their site to improve their rankings. People paying for ads to be shown at the top.","Good website structure maybe doesn't matter for google, but it does matter for users. Commercial websites that are unusable for people with disabilities are pretty much automatically losing the profits that those potential customers would generate","FYI google is known to be lying when it comes to SEO and there are many experiements that prove it. I'm not sure their lies are intentional tho - it's just that the search engineers are so far in their shit that they don't even know some consequences themselves.","Use good semantic HTML structure for yourself and your colleagues. The fact that is more SEO friendly is just an added bonus.","I would argue that even if it’s not helpful for SEO rankings, there is still a lot of value for accessibility/people with screen readers and so forth by using proper, consistent structure.","At least do it for DX and A11Y then","Accessibility matters, it’s not all about SEO","I'm going to put all my body text in <H1> tags.","Me : ** spend days & days to learn how to make perfect HTML page structure. **Google : Well .. HTML structure doesn't metter..","When did this sub turn into an SEO forum?","Finally I’m vindicated: I only use <u> for everything on my site, to save typing time and now this is confirmation I was right all along. Will send this to my former 7 bosses.","Maybe google should care bc their search results suck now","SEO guy we hired demonstrated that you rank #1 with a blank page using nothing but JsonLD 🤣","SEO is BS as Goodhart's Law states \"When a measure becomes a target, it ceases to be a good measure\".just look how the recent studies shows that google search are getting worse and it's not just the ads ,people spend much more time on optimizing keywords and all of that bullshit instead of focusing on the actual content ...\"semantic\" HTML , the author can't even spell that word jfc ,is crucial for Accessibility , rendering the content properly , all sort of analyzing tools you might need to run , testing ...","How is it matter how web page created. Are they pushing monopoly?","Isn't it also super important for accessibility?Plus the developer experience improves greatly when you're not searching through a sea of divs.","What’s important, I think is good structure with schema and micro data, accessibility, and correct syntax for certain things — as it will become apparent with new AI and GPT crawlers","Don’t ignore it entirely! Screen readers rely on proper html to translate to hard-of-seeing users. There are other reasons for semantic html besides rankings.","No it's strictly content quality, reputation and authority. I built a GPT trained on the same docs as the humans who trained their ai that judges these three.https://chat.openai.com/g/g-fAoXCbzTN-content-seo-sensei","\"Much\" just if you want to outrank someone who has similar results on the other factors. So it matters... just not \"much\".","The irony of reading this article on a website with all of the ends of the sentences cut off is not lost on me."],"points":529},{"text":["Are there web developers who mostly work with only HTML and CSS?","I believe that normal, everyday people are also web developers. I know because I've worked with them. I've been one of them. I meet them at BBQs, and often - they don't want to talk about work. Not everyone is as intense as new developers seem to think. We're not all tastemakers and Git heroes who just grind leetcode all night. Maybe there are other jobs besides that 120k SWE jobThat's a fundamentally different argument than the claim that you can get a modern \"web dev\" job with only HTML/CSS. You're presenting a false dichotomy focusing on people's character rather than their knowledge.You also keep presenting this as a question about what people do in their day to day jobs. That's not the question, though. The question is, are those technologies by themselves enough to land a job as a developer? And I simply don't buy that the answer is yes. I'd like to see what kind of jobs you're talking about."],"points":0},{"text":["Candidate Generation Using a Two-Tower Approach with Expedia Group Traveler Data","Here's the Lowdown:The post explores the implementation of a two-tower approach to candidate generation using Expedia Group's extensive traveler data. This technique aims to enhance the personalization and efficiency of travel recommendations. The method involves using separate models for query and item representation, allowing for more precise matching between user preferences and available options. The post details the benefits of this approach in improving the accuracy and relevance of travel suggestions, demonstrating its effectiveness in the context of the Expedia Group's extensive travel-related datasets.If you don't like the summary, just downvote and I'll try to delete the comment eventually 👍"],"points":0},{"text":["Please stop me","Benchmark to see the difference — if any.","It’s not weird to .filter(…).map(…). They’re optimized to the nth degree.But, if you find you’re doing this a lot, you may want to look at why you’re getting data in a format requiring so much manipulation.","[deleted]","Maybe look into using Array.reduce, you can can basically do a filter and map in the same callback function without iterating multiple times, it's also a pretty good practice to use those built in functional type iterators instead of trying to concoct a hacky solution.","I think the correct course of action would be to get a referral to see a psychiatrist so that you can get assessed to see if you have OCD /s"],"points":10},{"text":["nodejs: getaddrnfo EAI_AGAIN error","rate limit on cloudfront. more than 20 consecutive calls in 30 seconds will get blocked"],"points":0},{"text":["Why does JS dominate despite frameworks like Django, Flask, & Rails?","Because JS is the language for the frontend.For users, it's easier to just learn a single language and stop learning forever.For companies, it's cheaper to hire one \"JS guy\" instead of one JS guy and one Django guy.Would it have been Erlang instead, everybody would be writing Erlang on frontend and backend now.","Same reason as its always been - to use the same language on the frontend and backend","Even if you learn Django, flask, or rails, you still need js/ts to survive. It's not a hard rule, but sometimes it is nice to to finish a project without have to learn a whole new language... then frameworks and best practices with a limited budget.If it is a personal project, than who cares. Sometimes, I use the latest trend just for exposure, but most times, l drop it.I like to think of myself as a code wanderer. A Ronin...","The Vue documentation tries to explore the advantages of SSR and using the same language back and front .TL/DR: isomorphism and a unified mental model.It also discusses disadvantages.","When I started web development in the 1990s there was JavaScript and VBScript for client-side scripting. Microsoft and most of the world moved to server-side heavy solutions such as ASP.NET but JavaScript stuck around.Later in the 2000s, there was a sudden flurry of client-side functionality enabled by more features in web browsers. JavaScript was there to fill the need for client-side scripting. REST APIs, Ajax and jQuery all began shifting more focus to the client. JavaScript got so popular that eventually people started using it on the backend. Most notably with Node.js in 2009.JavaScript was there when a tool was needed and it’s been riding that wave.","I can't discuss specific frameworks, but in most of the places I've worked, they've migrated to TypeScript for pretty much everything, and the reason is straightforward: types.You can configure a monorepo housing hundreds of projects, including full-fledged back-ends, front-ends, microservices, lambda functions, and more, and effortlessly share type-safe code among them. Especially with something like tRPC.This is not something achievable with Ruby or Python, for instance.In general, strongly typed languages contribute to more maintainable and scalable codebases in the long run. Sure, you can accomplish anything with either, but that doesn't guarantee an enjoyable working experience. Plus, you'll be catching bugs before your code ever gets the chance to run.","JS isn’t dominating enterprise grade backends by far.","JS/TS's dominance is partly because of its widespread use and vibrant ecosystem. But diving into Python and Django can be eye-opening. Django's comprehensive nature simplifies many tasks. I've used Js frameworks, Flask, Rails, Django and more, and I actually stuck with Django because of how fast I move with it. I'm now building a Django-based tool that significantly cuts down development time even further for SaaS projects - a complete boilerplate.","Ease of deployment and small footprint. You can cram about 800 dockerized/container microservices running 800 small Node REST APIs on a single 32gb server.That is very powerful. Some stacks, you'd be lucky to run 20 to 30 on the same hardware.And stuff like async.Upload a video file. Process it as it is being uploaded, not having to wait till it is finish. That type of workloads really shine.","JS also has a battery included framework like Laravel, Rails etc.It's AdonisJS.","I'm not convinced JavaScript is dominant; I see plenty of python, java, c#, go, and so on, both in my own dealings with companies and when I scan job postings.We got here because Google wanted to compete with traditional software companies, which meant making good interactive web apps. Java applets and Flash weren't great forward paths, so they invested heavily into JavaScript engines and tooling. That eventually lead to JavaScript being considered \"a real language\", and the creation of Nodejs so you could run JavaScript outside of a browser. Shiny new things being shiny new things, the hype-chasers picked it up and it was good enough to establish a lasting community even as the hype moved on.","There's a hype cycle built around what \"The latest and greated JS library/tool/framework\" that has captured all the attention in the last few years while all the mature frameworks get ignored","Because some times you don’t need a whole framework. I’m curious when JS wasn’t dominant in webdev? 🤷‍♂️","ease of use and deployment I'd imagine. Web browsers didn't support any of those on the front end, generating tons of people familiar with JavaScript who back-ported it to server-side. thus making it so they didn't have to learn another language.","There’s loads of great web frameworks about, many of them arguably better than things like NextJS. The problem though is that when it comes time to server side render your React components or whatever, you need to run the same code as the client. So then you need to use js. That means there’s a whole class of features your other-language framework literally can’t implement in that language. There are exceptions to this like Blazor but it’s not very popular and has a bunch of trade offs - I can see it growing though.If you’re not using React or its ilk then there’s still an argument to be made that using a single language for all your code makes things easier, and makes it easier to recruit staff and move their capacity around. There’s also a LOT more js developers around, although the skill level of the vast majority is debatable.","Because it doesn’t matter which backend framework you use, the FE will be JS.So for smaller companies and personal projects, it is so simple to have everything being the same language. BE/FE can share the same code, API types can just be imported, it is convenient.","Javascript is a programming language that dominates in the fronted.The others are frameworks - not programming languages - used in the backend.","They don't. Most of the Nodejs server projects that I've seen are backend-for-frontend projects. Yes they run code on a server, but they're really implementing front-end/display logic and are managed by the frontend team who needs finer control over their HTTP servers. They're rarely the actual backend that implements the actual meat of the business logic.","Front end devs too lazy to learn anything else.","JS is both the most common programming language and the one needed for fromt-ends. Easier recruitment is a big deal.Django and Rails are MVCs, designed for CRUD servers for specified rsources. Pass-throughs and other kinds of servers need something else.JS works with JS packages. There are rendering options, and there are SDKs. JS SDKs have the advantage of working from both front-end and back-end, so most SDK-writers go for JS.","Here's what I've experienced having used many backend languages. Beyond the super obvious:Node is very good at doing simple things. Getting data into and out of databases. Python is not as fast. Also, node breaks down very quickly if you try to mash really complex business logic into the backend. So people don't do this as much.Python is better at complex things. This is also its weakness. It is then tempting to mash a bunch of complex business logic into the flask portion, and this turns into a nightmare very quickly.Node is very easy to put in containers. I find flask is a bit harder to put into containers.Almost any tech is perfectly serviceable for simpler sites. But, once data starts dancing around the backend in complex ways, getting the architecture right is fantastically important.Some people will use this to justify their favourite framework. But, to me it is choosing the correct tech to solve the correct problem.Thus, a combo I personally like is node on the backend, but to keep it super clean of business logic. Then, I have python(not flask) doing complex business logic things which either runs on timers, or responds to messages to do complex things. It will send out messages in return. Then, the node will simplistically process these messages.This has evolved from doing many ML projects, and of course, the ML has a fairly high chance of being in python, and by its nature, is going to be complex business logic. There is exactly a zero percent chance I am doing ML in js. It can be done, but this is far from an industry norm.This all said, I have some projects where the back end is in C++. I could make a long winded argument about it, but a simple example is that unencrypted response times are not measured in milliseconds, but microseconds. I've noticed some rust web crates are significantly faster than what I am using in C++; thus would benefit in the same way.","Believe me, most JS devs don't even like JS it has a strong hold on the web, frankly I really wish blazor would get better so we have a choice","A big issues with Django, Flask, Rails... is that they dont scale well to big organizations with complex multi tier projects. This is why all the big tech orgs dont use it so much.That doesn't mean Django is bad or that you can build great stuff with it. Its just that figuring out the ownership boundaries for 6+ engineering teams contributing to a single Django app is hard.It ends up being that having:A dedicated front end layerA backend domain layer composed of microservicesIs the least bad model for organizations that want to scale their engineering teams to more than a single team with a single product.Now why do people outside of big orgs end up following the same pattern? My guess is just that it gets popularized by the big players, people learn a certain set of skills, then they just stick with what they know... since adopting your skills for a particular use case is hard.","I started 20 years ago and have worked with many backends. To me it's about brain drain. I have to work with JavaScript anyway so as soon as I could use it on the backend it was a no brainer. Even when node wasn't that good I was still using it just because I hate context switching. Now node has progressed a lot and I see no drawbacks whatsoever. It's actually faster and offers better async syntax than many of the others. For this reason it's a no brainer for me to use JavaScript / TypeScript whenever possible. I even use JavaScript for mobile - react native. It just makes me more efficient.There are a handful of JavaScript quirks which people always point out, but honestly they are way overstated. Pretty much anyone knows how to make sure you limit your equivalencies and use very specific flow statements. You'd have to learn the quirks of any language anyway. One funny thing about JavaScript is that it looks almost identical to C so it's not like Brendan Eich just made it up with no context.Today I see it just like verbal languages. What is the language of business? English? What do pilots speak in the sky? English. It just makes things more efficient when everyone can talk to each other. Yeah it's good to have context and other languages to draw from, but it's also really good to have a universal language.","You still need JavaScript if you plan to have any interactivity using these frameworks. JavaScript is the only frontend language for the browser, so you need it for client side interactivityDjango can be used to make non-interactive pages","2 reasons mostly...1) Allowing the browser to do more of the work significantly reduces hosting costs2) Most JS projects are using multiple legacy systems, so sometimes 3 or more backends, so a tech that allows all the backends to work with a single frontend is in very high demand","for django and flask i think front end js devs are intimidated by jinja2 templates. they're like \"ahhhh, it's too simple\".","10 years ago this was not the case, the oposite was true, rails, Django, Laravel, etc. were the dominant and node.js was used by almost no one.Several things were happening that ultimately made node win:There was a big shift from server first to client first web apps, because users demanded better UX these apps were more complex to build, but easer to use. In order to make their development easier tools emerged, usually written in js, so you run them with nodeThere was a need for better performance, handle more request per minute, node had non blocking IO and an async programming model, with this suddenly it was ease to write web servers that could handle multiple request per tread, as opposed to popular frameworks of only one request per thread. Also JS was a much faster language when compared to Python, Ruby, PHP, Perl, about 20x fasterNPM, it was by far the easiest package manager to use. pip -r requirements.txt was painful to useNode was simple to deploy on a linux server when compared to Python, Ruby, PHP","Java dominates where JS doesn't. If you're not making isomorphic apps, there's no reason to go with two different interpreted languages.","FamiliarityGiven TypeScript, the language is actually quite goodV8 is somewhat fast. At least faster than Python or RubyIt's single-threaded garbage-collected language, which is simpler to writeAbundance of libraries and relative simplicity of dependency management with NPMNow, I also love Rust, but it's a newer language that's more difficult to learn due to the borrow checker and support for concurrency and multi-threading. Rust makes development feel really good and encourages code quality, but because it's not as famous and not as easy, and because TS/JS is widely considered good and fast enough, it's not much of a mystery people prefer it","Those are all worse DX","Lotta good answers here. Another I haven’t seen yet is a downstream effect of the browser needing JS, which is separation. Web apps used to be very hairball-like w/ the backend merging into the client code. Which meant changes effected the entire apps codebase.Separating means the ability to upgrade/rewrite a section of an app(like the client) while maintaining the backend’s infrastructure in place.","That's like asking why the car is so popular when you could just drive a Mustang...","It’s not a full circle moment. Those other frameworks suck at client side.","A big reason is because bootcamps shifted to it because (1) React was HUGELY popular at that time and a little of places were demanding that skill, and (2) you can teach it with literally just a browser; no IDE needed.I love ruby with all my heart but it is more challenging to bootstrap a rails app than a JS app. Not impossibly harder, but enough. Or rather, it is SIGNIFICANTLY easier to setup a js app than a rails app, and that creates a friction in using rails for bootcamps. Most bootcamps used rails before switching to react.","There a few other reasons JS dominates that I don't see mentioned yet:there is a reinforcing cycle where because javascript is already so widespread (out of necessity for web apps), it has a lot of staying power as answers are easy to find on google, stackoverflow, and now chatGPT (LLMs favor more popular languages as there is more data to train on)most bootcamps stick to javascript so that you can learn frontend and backend w/o having to learn multiple languages (well besides html/css)same for small teams - it's easy for 1 person to build a fullstack javascript app w/o having to jump between languages. And it offers the flexibility of replacing parts of the stack as team/org/company expands (e.g. replace front end .js with typescript or backend with go)","Rails (and perhaps some of those other choices) is not mutually exclusive with JS frameworks, at work we have a hybrid, slowly evolving website, with some legacy pages in full ERB, some with some Vue components mounted within ERB, some pages where the entire page is a Vue app, closer to SPA style but without front end routing.","It's like asking why does CSS dominate when there's web frameworks.JS is the only option for client side programming.","I feel like it’s dominating certain use case (SPAs) rather than everywhere.Plus while you can build stuff pretty fast with it the amount of churn in the JS ecosystem means long term maintenance is a bit of a headache.","It was the language that was picked for browsers. The rest is a little bit \"obvious\".","Because some people learn JS and never want to learn anything else. And instead of learning a new language, a bunch of enablers made it possible to put JS everywhere because they love the smell of shit blasted everywhere so much.JS has the one advantage that it runs on web browsers. That's IT.","Reading the comments, it feels like a watching ladies picking fruits are the market, everyone has a favourite and you just can’t please everyone.","Think it’s easier to just dispel the myth you claimed to start with.JS does not dominate. It’s just newer and shinier which means you see and hear more about it.If most of the web is powered by php, java and python. (Yes others like c etc)It dominates frontend because it’s the language of browsers. There is no competitor. Ruby doesn’t (get out wasm lovers) run on your browser.The appeal of using one language for back and front is promising for some teams problems.But it doesn’t “dominate” the web, it enhances it :)","I am fullstack dev, but I never use JS/TS at backend.","People start with JS on the frontend and then it's easy to stick to it on the backend.I agree that the trend towards SSR is quite ironic, it feels like some of the \"innovations\" that Vercel is doing with Next.js are just the same thing we had 15 years ago.","People have covered the single language for back and front-end development, but I will add something else: Because all that work to make JS run fast on the front-end across billions of browsers has made it super fast on the back-end too. Python and Ruby are slow in the beck-end, and painful to manage and deploy too.","Because all browser have to support it","I don't think js is dominating on the back end. Do you have data?"],"points":587},{"text":["Accurate eng estimations: predicting and negotiating the future","One thing that frustrates me about communicating ENG estimates to cross-functional folks is that there is more to it than just coding. There's review, debugging CI, maybe a merge-queue, deployment, dogfooding, getting late edits from design, carefully ungating a feature flag, getting tagged on two bugs, adding alerts to watch for regressions, and finally calling the feature launched. This time adds up, but it's hard to get roles to appreciate.Shoutout to all the kind folks fighting for quality craftsmanship in their work, despite pressures to compromise."],"points":2},{"text":["Apple's plan to allow browser competition dubbed unworkable - Open Web Advocacy"],"points":0},{"text":["How LetterBoxd Creates Pixelated Skeleton Images","I don't recognize this syntax, is it pure .js.html??<imgsrc=\"https://a.ltrbxd.com/resized/sm/upload/9u/5h/ey/it/there-will-be-blood-1920-1920-1080-1080-crop-000000.jpg\"class=\"absolute w-full h-full opacity-0 transition-all duration-500 delay-500\"onload=\"this.style.opacity = 1\"/>​Very neat way to achieve that :)","Hey guys! I recently came across this cool loading effect on the letterboxd website. I thought some other people might be interested in how it works, and how to replicate it on their own sites.I used TailwindCSS to keep things succinct, but let me know if there's any interest in vanilla CSS","Never heard of the image-rendering property. Thank you so much for sharing. I think blur.io is doing something similar.I've been using blurhash for the last couple years but this effect may make me change my approach."],"points":1},{"text":["Tips for freelance web development with local communities and what/how to present myself?","Anything you’d ever wanna know about that and how to freelance small businesses i wrote here. Hope it helps!https://codestitch.app/complete-guide-to-freelancing"],"points":4},{"text":["Should I use Wix or GoDaddy as a website builder?","Absolutely stay far far away from GoDaddy. If I HAD to use a website builder it'd be SquareSpace or Wix temporarily then move off it to a dedicated site when you've the funds to hire a developer, because long term both platforms are a bad idea.","No, you should not use Wix or GoDaddy as a website builder.","Do everything you can to never have anything to do with GoDaddy.","Neither. But of the two, choose Wix.SquareSpace is better than Wix. Either SquareSpace or Wix is going to be a low quality website. If you're considering anything interactive, I suggest looking at WordPress. There are several WordPress hosts worth looking at. You could get pretty far with one of them without having to hire a real \"developer\"","i remember like 5 years ago when i did web dev stuff, wix was so agressive with their ads, thats how i knew they are bad, and i was right...stay away...","Fck gofather. Don't use it. Just don't.","Neither, but definitely not wix.","Nope","Simvoly is is a great alternative"],"points":14},{"text":["Render server payments","Here's the fallacy most new business people make. You're directly passing on costs to the end client in a very transparent way.Ask yourself one question. What business are you in? If you're in the business of just providing development services, then show them the admin panel and allow them to take it over for payment, etc.If you are in the business of recurring hosting services, then suck up the $7/month and bill them accordingly for your time, effort and work so far, and future work to come. No one says you have to detail out every little aspect of the hosting side of things if what they are paying for is a continued online presence.The path you choose is up to you. I price out my work both ways, depending on situation. For one-off work, it's by the hour if its fairly small. For recurring work, I charge a package deal and then the yearly renewal fee(s).In either case, I'm well paid for my time and effort, keeping it simple."],"points":1},{"text":["Has anyone on here used AWS NEXRAD to implement a weather radar map?","Never used the specific service but are you building your site on AWS or hosted elsewhere?Are you familiar with AWS at all if you’re hosting elsewhere?"],"points":0},{"text":["ANy recommendations for a website builder for a boat charter"],"points":0},{"text":["How would you read a binary file with front end JavaScript?","You can get the File Object from the HTMLInputElement via the input's .files array property.Then you can use the FileReader API (or the file's .arrayBuffer propery) to read the file into an ArrayBuffer.You can then read binary data from that ArrayBuffer using the DataView API.","Js isn't great for binary you can do it but it's painful.If the files are going to be big or complex and require a lot of processing you could look at using webasm for it. I'd wager that if it's a popular format there are libraries that support it."],"points":21},{"text":["How can the QA team test error states dependent on 3rd party APIs?","Yeah that’s a difficult one, test date in general btw. I think you have a few options here. Personally I would prefer to cover this flow in automated E2E tests where you spin up a version of the app with deliberately broken third party connections. No need for manual testing and gets the job done.If you really need a person to regression test it (I know lots of companies require it) it really depends on what type of application you have. For example, we do a lot of things based on a given address. We included code (with a feature flag) to trigger certain errors when a specific address is given. Problem is tough that you are still testing custom logic in that cases and not the actual failure. So another option, but again depending on the situation if feasible, would be to proxy the their party request on the test environment with some middleware you can control. That would be the best way to simulate a failure.","Lookup API mocking. The basic idea is to setup a fake version of the 3rd party API (hosted in your company’s Dev/Staging environments). The QA team has the ability to customize what the mocked endpoints respond with, which allows them to intentionally respond with specific error states, etc. during their testing.The frontend in Dev/Staging would ideally also have a way to toggle between the mocked API and the real 3rd party API dev environment. Or another solution would be to setup an independent QA environment that only uses the mocked API.","Could you use a custom hosts file and reroute the domains? https://en.wikipedia.org/wiki/Hosts\\_(file)"],"points":8},{"text":["Bombed an interview yesterday that left me questioning myself","If you don't understand something, ask the interviewer. That's a very senior-level move. A junior-level move is to pretend you understand the question, answer it poorly, and move on.E.g. \"Are you looking for me to compare the JS class model to other languages? I'm not clear on the question\" or \"Were you looking for more detail regarding click events, or is that sufficient?\"","when you click a DOM element, what happens within the browser/javascriptI think he wanted to hear you talking about event bubbling and propagation, not anything too low-level like the stack you mention. Perhaps the render tree being modified as well if the click event changes an element, but mostly about the bubbling.​the difference between \"javascript inheritance and class inheritance\"Yes, he meant the prototypal inheritance in JS, he should clarify that. Basically, he wanted to hear you saying that JS inheritance looks up to the chain to find ex. a method of an array you created when you want to use that method without you explicitly doing anything whereas in class inheritance you need to extend a class with the creation of your class to gain access to methods.None of those need a CS degree, though, don't be too hard on youself, you just got unlucky.My advice is to give yourself some time to learn some of the basic theoretic concepts of JS and HTML and you'll be good to go next time. You are already doing a great job and a hard one for that, you were chosen to be interviewed for a senior role by a big company and guess what, they knew you didn't have a degree and still chose you as a candidate. So, give yourself some credit for reaching this far and stop feeling down for that degree, unless you want to ex. build a compiler or something. Keep going, you've got it!","At least you're getting interviews. I've been always told to use them as practice, but I never get them so I guess here we are.","I was in the same boat last year! Interviewing for a senior role and one company kept asking questions like this. I found it really strange because they're asking theory questions and expecting you to recall the definition of all these things. It felt like a college exam, not an interview. I learned these when I was first learning, some things I still remember of course but some things you just forget as the years go on. IMO it's a terrible way to interview for a senior role, remembering the little details of how an onclick event work does nothing to help determine if you're able to do things seniors do.Anyways, like others are saying, forget about them and move on. You'll find something, you're smarter than you give yourself credit for","Don’t worry about it man. I’ve bombed some and won some, tech interviews always seem like a roll of the dice. Who knows what you’re going to get!","Hey, I'm a senior c# developer, been doing it for over 10 years, i wouldn't worry about it too much - there will always be things that you just don't know. Just take a breath and look into the things that they mentionedYou can extend classes in JavaScript which is inheritance: https://www.w3schools.com/js/js_class_inheritance.aspThe click one I'm not really sure what they wanted could have been a whole host of things really, buttons can be used for so many things, submitting forms, having a click handler as you say. So I can't be of help there.Best thing to do is just ask the company (or recruitment agency) for specific feedback and if they say that \"you weren't technical\" enough just know that you probably dodged a bullet.Everyone has doubts if they are good enough, technical interviews are weird because they can ask you a million different potential questions, ive had some weird and wacky ones in my time. If you dont know, then you dont know 🤷 nothing you can do because how do you even prepare for things you aren't aware of. If youve been doing dev for 6 years then you obviously have some knowledge 🙂","Is the little imposter syndrome voice in the back of my head right?Do I truly deserve to be where I am?They've tested your javascript knowledge and found it lacking. You may not be the developer they are looking for. Yet, you have a job, which means that some people are willing to pay you for your knowledge and skills, and presumably are finding them valuable, or they wouldn't be paying you. They must think you deserve to be where you are now.","Don't stress too much about it. We've all been there. If it helps, I usually look at every job interview as a learning experience. If I do well and advance, that's just an extra perk. Otherwise, it's just a conversation about what you know. If you feel like you didn't (or couldn't) answer a question well, write it down and spend time learning it for the next interview. As others have said, you never know what people are going to ask and a lot of times, if you're being asked weird questions it's probably a blessing that you didn't get the job.","Sobering moment. Happens to the best of us. Yes, he meant event bubbling and prototype inheritance. Learn from it and do better next time. I would recommend Jake and Surma's videos. Also, \"10 things you should know about JS but you probably don't\" YouTube video series. (Turns out to be 15 things)","I think for the click event they were looking to see if knew about event bubbling, which is quite a common interview question.","I assume he wanted to know about the event loop and how the click of a button adds a \"message\" to the event loops queue as described here. I think event loop questions are very common in JS interviews. Regarding inheritance, I think he wanted to know about prototype in JS vs non prototype inheritance in e.g. Java as you said.As others said don't be too harsh with yourself, its probably really more of a preparation issue. Check for common JS interview questions and refresh some of the basics.","You said it yourself, you were unprepared. Never go into an interview without an idea of what you're going into. You should be asking your contacts ahead of time what to expect so that you may adequately prepare.Other than that, you just need confidence. If you make excuses and talk about being self taught when you think you're struggling, you're just snitching on yourself. Don't give them reasons to question your ability.You said yourself you've been a web developer for 6+ years. You're a web developer by definition. Folks have paid you a lot of money to do high skill work for them for many years. Own it. Understand that there is not a single engineer who knows everything. There will always be questions in an interview you don't know the answer to, that's not a reflection of your skill level.","There are a couple of good courses on udemy specifically covering interview questions like this. I never remember terminology and I've been doing this for 25 years. Every time I'm looking for a new job I brush up with one of those classes.","Buy and rwad the book \"The imposter's handbook\" it's fabulous and really well written and funny as he'll and super interesting.The whole idea is filling in gaps you missed if you're self taught. I was self taught and felt intimidated doing college interviews because I didn't understand big o notation.This book really helped me. I mean I still don't understand big o notation but now I don't give a shit","There is nothing wrong with being a self taught developer. One of the best ways to get over impostor syndrome is a few thingsKnow your stack and focus heavily on it.Pick a stack that you want to specialize in and really read up on it. Even though I know C# I still read books that teach C# because authors often have minutia or ideas that I didn't see elsewhere.Even of you know React, read a book on it.Read more code.C# and Javascript are great because you can easily jump into the source code and learn how they did something. For example, I wanted to learn why my calculation for Geospatial distance differed between my code and SQL Server results. I decompile the code and really dug through it to get to understanding how it was calculated. It also gave me a deeper appreciation for how things were done.When you read more code you can identify why certain code is bad. You've seen patterns and practices across different teams and identify what's the most maintainable solution. You also feel more confident in what you write because you can identify why other people are idiots.Don't stop learning.Devote a 1-2 hours a day (even could be during down time) reading up about a new tool or technology. I have the Morning Brew as my homepage so I can read up on a few articles on c# and stay up to date.Get a Pluralsight or O'Reilly books subscription. You can get them with an Acm membership for less than $200 (normally they would cost about 5-700/year)","I always tell my teams that the difference between a senior and a junior is not the technical prowess but the way they behave in the team. You can have a brilliant engineer, but due to a lack of life experience or ego behaves poorly. I expect for a senior to not be afraid of being vulnerable, to know how to admit what’s unknown, to ask questions and clarify information, to help the team and clients, not to cast blame, to be tolerant and understanding, not to be Rambo or anxious or to panic, and to drive the project to success selfesly. Lots of people claim doing that but they actually don’t. You usually find them in the “I’ve been pulling this team forever but I’m not appreciated”, “nobody listens to me” crowd.Edit: also, OP, when you apply for a senior position think what the other party expects from you. Waaaaay to often techs think that the hiring manager wants some kind of leet genius, but 80% of the time is the other way around. The hiring manager wants to see if you fit easily within a team. Are you a nice person, do you communicate well, are you serious but not too serious? Can you take a joke? Do you panic or shut down when under pressure? Can you integrate quickly? Can you help the other team members? Everything else can be taught if you demonstrate a reasonable tech understanding. Behavioral skills are the hardest to change. Good luck with your next interviews. Be brave!","I almost had the same situation, being the sole developer for many years of experience something between senior and med level with deep experience in both front and back. The other day I was interviewed for a nice position with Big Buck but I failed to answer a couple of questions that were tricky and required deep theoretical knowledge in JS yet they wasted my time in extra round to create take home test that performed very well in.This stuff is not used in day-to-day jobs. My clients care about performance, user experience, maintainability, scalability, integration, fast delivery, clean code, etc. None of them care or know about vdom, this keyword, or internal gears of js, vue, or react. It seems this kind of question is just to flex knowledge over others and dismiss other aspects of developer knowledge and experience.","In a course of couple of interviews you'll understand your gaps, learn them and will be more confident","Hey look 👀. I NEED you to feel confident in yourself . Cause if you aren’t how the hell am I supposed to look in the mirror every morning when I have less experience than you.Just remember you taught yourself to get this far. You bend when others break. Just keep going.","When you don't know something in an interview, just my two cents: own it. Don't fret, scramble, or lie. Remain calm, say you don't know it, and try to navigate it as a conversation point. In this case about JavaScript inheritance or whatever, \"I've heard that term before but to be perfectly honest it's not something I've encountered in the X number of projects I've successfully completed. Could you expand on what kind of use cases it has in your environment?\"Then they'll tell you something and as you're listening, be thinking in real time back to your own experiences. What they describe might be something you do know, and it turns out it's just a terminology difference. Or if they describe it for a particular problem, say how you instead solved that problem, but that you're always looking for new techniques so thanks for the insight.That's the difference between junior and senior. Senior, like half the battle is the conversation. Even if you don't know it, if the interviewer likes your conversational style, how you didn't put up some ego front, how you admitted not knowing something, you may still walk away with a chance.","When I’ve bombed interviews I should not have I almost always find out later that what seemed like a great opportunity at the time would have been a horrible path to go down…or at very least not as great as the opportunity that came up later.","I can't speak to the technical elements, but if you have 6+ years in the business, multiple clients, multiple stacks/technologies/languages then you're anything but an imposter, I think most people would be very impressed by that.","look i'm all for self taught, afterall that's what we ALL are after college anyway...but sadly there are gaps in your knowledge that you have to work on to remedy. Example, I hired and worked with a self taught guy a few years ago on a project, dude was great in terms of churning out code and getting stuff done, had a real knack for CSS/JS that I lacked too so it was a good parternship. But he had sold himself as 'full stack' (which is meaningless at this point IMO) and once he started doing database/API type shit it was a fucking disaster, like no basic understanding of referential integrity or ACID or the many pitfalls that go along with writing an effective and performant backend. There's a reason we have CS degrees, and while its basically 4 years of shit that could be better learned in 2, it does give you a really strong core of fundamentals to build of off. I have a whole notebook of do's and don't and gotchas on dev that my profs passed along, invaluable for a young dev","Now you know. Your prospective co-workers are not going to care about those past projects and how well you delivered. They are looking for a baseline competency of a mid-to-senior level engineer. That is typical in a process driven engineering organization. I know I would never care about Shopify or Wordpress experience. It is irrelevant to what I do day-to-day. However, javascript fundamentals are important because you need it for many of the current frameworks from Vue, React to Angular.You sound more like you are a better fit in a product role.","They are the imposters.","I went through the same situation you have just gone through. I have a similar background. Anyway, i came to learn that interviews really ramp up in difficulty depending on the company.While I don’t think you should feel bad at all - tons of people fails interviews all the time - you should be in a better position to perform for your next ones. The questions you brought up here are found in most “JavaScript interview questions” YouTube videos. That’s the thing - interviewing itself is a skill and requires its own preparation. The higher caliber the company the more interviewing needs to be prepared for. That said I think it would be nice if experience were able to speak for itself but it can’t","These questions have nothing to do with CS, school wouldn’t have helped you.Anyway there’s a million things to know and these don’t seem like fundamental ones. Depending on the interviewer and the few questions they ask, it’s a crapshoot","Not being able to answer every question perfectly isn't necessary to pass an interview. It depends on the position you're applying for. They may want to see how you think or how you handle situations where you don't know something.Of course if this was for a senior position, you're screwed.But interviewing is a skill and it takes practice. Just keep interviewing and you'll do better next time.","Sometimes they want to give you a hard time. Had one session where one in the team wanted to bring in a girl with no experience that he liked and really tried to put the gut with a degree in a spot.","Imho they were pretty shit questions, so I’d be wondering if I wanted to work there.","The more you know, the more you know what you don’t know. Especially in this field. There is so much to learn and new technologies pop-up before you even read about the last one. You can’t keep up with everything. No senior developer does or should think they do. I always look for a way of thinking and problem solving in a developer. If you have that talent plus experience in whatever language, you can always learn the stack you have to work with in your daily job.","Don't feel bad. I'm self-taught too, and I failed on a basic question on what the difference between a list and a tuple is.Granted, I knew what it was. I was just so intimidated by the whole 10 person panel interview, no computers anywhere, etc. It was a very surreal experience.That and having to write 100 lines of python code on a whiteboard in front of said panel. Only to be told by their \"lead\" that they could have done it in 5 lines of python.I'm like, \"Ok, show me.\" and they didn't, cause I honestly knew you couldn't make a program to first convert binary data from a file to hexadecimal \"FF 00 AA\", then draw a window with matplotlib, display the results in one half, then display an ASCII translation in the other half.Fucking dickheads."],"points":462},{"text":["Best way to indicate Error to Frontend?","Rely on proper HTTP response code. The thing I hate the most is a 200 with what you have above. It is bad for several reasons -- screws up monitoring/observability. It forces the other party to dig in deep and figure out what the problem is. If I see a 400, I don't have to go reach out to anyone. I know, I am sending something malformed. Same with a 405. I know I have access but that method is not allowed.No one is gonna do a regex on server logs to see if you have symptoms of a long-term problem. They want to do a count of 400, 401,403s, 500,502 errors.If I get 100 400 errors, I am gonna ignore that. If I get twenty 502s in a span of 15 seconds, I want to find the root cause. So a generic message helps no one if it is wrapped in a 200 response code.Furthermore, if you provide an API contract like Swagger, they can deduct and even build test cases for that. 400? Swagger spec says I need x,y,z in this format. Oh, so I need to send M or F versus Male / Female in this field. Got it. That is why it is a 400. Swagger is useful.","Use correct response codes, don’t just munge things together. The codes have meanings for a reason, and they’re worth using.","No. This isn't clever. It's not creative. It's wrong.Conventions exist for a reason. Follow HTTP Response conventions.The framework I use automatically routes non-200 responses to an error handler. If you send everything as a 200, I not only have to parse the response, I now have to code for all of the dumb variations this produces.Before I started at my current company, they had a guy who did this for several API projects. He's no longer with the company and the company is refactoring all of the APIs. Seems you can't sell an API that doesn't follow basic conventions of HTTP responses.","What is the use case? As you can see a lot of people agree it's a terrible idea on a production environment, but in testing it's perfectly fine. You don't want to expose that kind of stuff to an end user. You could easily store any errors in a database for you/other devs to review and the only reason I can think of for you to want to see that in real time is because you're trying to emulate the end user.","This is a decent way of handling it, assuming you're already in charge of all aspects of the frontend.Probably a good idea to work out in more detail all of the desired objectives other than just an error message handling. How's your API? Can you re-prompt the server if needed? What types of errors do you need to handle? Maybe an error router or event handler that can handle things when you scale up.Just some thoughts.edit: and status codes. my oversight.","As others have said, you will want to also use HTTPS response status codes at a minimum.I alluded earlier to making an error router/handler and this is what you could use to handle those codes approprately.Errors are going to happen at some point. It's good to both handle them internally and write code that gracefully deprecates the situation, as well as actually indicate to the user something happened in case of utter failure. Ideally all of the code is well tested so that things don't just fall over with no obvious reasons why, but we can't always have it that way in the real world.Don't mind the angry tone some of these commenters seem to be attacking you with. They mean well."],"points":28},{"text":["Need Advice on Loading Database for Web-Based Game","Maybe just get a cheap vps and use your db.","Any decent web host will do for your needs. I always recommend hostinger.com as their pricing, support and service are (imho) stellar.","Is front-loading a file thats 1.1 MB (my entire database) something that is usually acceptable. That way I dont need to make requests to the server for every time a user enters a name.","1MB is small to store, but is way too big to download for something web-based. And your downloaded database is out-of-date as soon as someone makes a new user or edits account info.Why are you trying to load the whole database on the front-end? To reduce number of requests?"],"points":0},{"text":["What is the technical name for these, and how do I dictate them on a SERP for my website?","Site links. Google puts them there automatically, usually only for higher authority domains.https://developers.google.com/search/docs/appearance/sitelinks","https://developers.google.com/search/docs/appearance/sitelinks"],"points":23}]