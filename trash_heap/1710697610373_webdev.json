[{"text":["Should we expect mid code in the future?"],"points":0},{"text":["Where to Hire Fullstack Developer (React and Supabase)","Also guys I need someone too for just front end developer. Dm me if you're interested","Hi there, I'm a former FAANG Eng, 2x startup founder.Check out RocketDevs.com, they have vetted full-time devs for $980/mo. The developers on the website are all technically solid."],"points":0},{"text":["s3 storage overkill for personal website?","It's good for learning, you can replace mysql with sqlite and use litestream.io to keep the db data also replicated in S3.But for just having something online, for this scale definitely gh pages or cloudflare pages would be a simpler solution.","I think for the amount of data and traffic you’re talking about your monthly cloud bill would not be too high ( as long as you use SqlLite like one of the other comments said)Unless of course you start to get crazy high traffic"],"points":0},{"text":["You probably don't need to explicitly import Inter font.","I recently found out that directly importing fonts from Google Fonts violates GDPR","Why would you think this is available on 99% of devices? Why would it be in any JS bundle? Are you using data: URIs or something?It won't be cached by the browser unless the user has already made the request on your site. Saying \"it will already be cached in browser\" just shows you don't know what caching is.Just put the font in your CSS (or in JS if you use the API) with a local(\"Inter\"), url(...) using a regular URL. It's only a few bytes... the browser can then use a local font if available or import from the URL (probably with caching) if needed.","Is neither a default font on Mac nor on Windows. So if your CI depends on it, definitely include it!","This is why you should use a font face with local options as the source as well and let the browser decide that."],"points":4},{"text":["How to use event delegation for events that don't bubble?"],"points":0},{"text":["Feeling a bit frightened. Everyone keeps mentioning that DEVIN will take our place.","At this point we’ve had so many posts about this that it feels more like someone is advertising the bot by pretending to be scared developers.","honestly AI generated code reminds me a lot of when WYSIWYG editors were more popular, sure it works, but a lot of the time the code is absolutely horrible.","You're buying into the marketing. Just look at their website. It's a pile of shit. It tells you everything you need to know about them.","If your that worried then take up a physical trade like plumbing, because if AI manages to replace software engineers (which I don't believe it will, atleast not any time soon) then it's also bye bye to a ton of other professions, the only thing AI won't have devoured by that point will be physical jobs, builders, electricians etcUntil the whole smart humanoid robot thing becomes reality atleast, then we'll be working for them, serving our new masters on earth. Chin up bud, the futures looking bright.","Embrace the tools, don't fear them. I use AI every day now as a developer and architect. It's amazingly helpful.","not again...AI posts are the new JS framework posts.","I do not currently work in projects related directly to webdev (more backend) but I must say that ai-code assistant are very helpful and there is currently absolutely definitely no way they could replace devs and humans driving the projects","I suspect it’ll be a while before AI can fully replace engineers. On the order hand, I do believe that engineers who can effectively use AI to generate good code will replace engineers who can’t.","[deleted]","No one knows the future.In it's current form, even DEVIN is just a TOOL for you to use. Most execs, project managers, owners, and stakeholders don't really understand what AI can do. The worst thing you can do is resist change. Learn how to use some AI tools to accelerate your skills, like writing test code, asking it to optimize something, adding documentation to code, etc. It's your little buddy. It might replace us all in the future, but you will have to learn to adapt, like every other industry in the history of mankind."],"points":83},{"text":["Need Help in Deploying Please"],"points":0},{"text":["Which analytics should I believe in?","Sessions, users, and requests are all different data points. They cannot be compared.","Requests (Vercel’s metric) will count every file or page served, so for a single page view likely anywhere from 5-50 (or even 100) requests. A single visitor who visits your site will load a certain number of pages on average so it stands to reason that your user visits (Google Analytics / Microsoft Clarity) is a small percentage of your overall request count. You should check the definition of each tool with the provider in question to be sure how they’re counted. Something misunderstood by many seems to be that Google Analytics and any other JavaScript based analytics will not see a chunk of traffic at all because many bots, crawlers and spiders won’t load JavaScript at all. Therefore missing what might sometimes be a significant amount of traffic (requests)."],"points":8},{"text":["Help!","Do you have a node_modules folder?","Are you using render for Server side code ? Or their frontend hosting service ?","did you set the build command to \"npm i\" or \"npm install\"?"],"points":0},{"text":["CSS Transitions for background color"],"points":0},{"text":["REST API design. Filter by IDs or by Names?","In my opinion, statuses should be word names. ID's (such as UUID's) should represent objects that must be unique. Objects like users, posts, messages, activities (logging), or any other type of permanent data that resides in the database.This way, you can instantly understand the operating process both in the code and in testing by looking at the network call or logs, or code. Using UUID's helps ensure that people cannot iterate and know any particular object by guessing/hacking, as it were.","that depends...naming = user friendly, you know exactly what you search foruuid = could be messy... don't really know what is what and could lead to gibberishgenerally it is better with naming, since it is more understandable, more of an issue is how you get the records via databasealso, is it GET request to get records or POST?GET Request has limit of 2K chars which could be an issue if you have more filters along the way.","IDs because that's what you'll probably use in your database - using strings inside a status column would be huge bloat.Ideally your API contract should specify the available status-values."],"points":3},{"text":["PHP or JS for a social media site?","The one you know the most.Premature optimization is the root of all evil. You wont see much difference at the languages level in most apps.The scale at which language chosen had noticeable impact would be millions or tens of millionsAnd let be honest here, if you have that kind of userbase, you are not asking this question here","Well, this is like asking: Which is better: beer or wine?So: it depends on many thing, and it's also a matter of taste.","For backend it doesn’t really matter but for frontend a modern JavaScript framework like react or vue would give you that SPA feeling","PHP","Which is better a tank or a helicopter?They do different jobs.","I would recommend using JS and building on the APIs of existing open source social networks like mastodon. This allows you to focus on the app and not on how the internals work. I already build a few small apps on top of mastodon and it's quite easy.","There is no one that's better. Use what you can build the fastest with.","Others already posted that this is a matter of choice, or the language that you are more comfortable with.My question is - what is your goal? If you want to have the site up ASAP, you can pick any open source project that does that job (could be even wordpress + plugins) and adapt it to your needs.If you're doing it to learn about the code, pick the one you know best.","I personally find PHP one of the ugliest languages in existence."],"points":25},{"text":["Is hostinger a good site to register my domain with?","Check out Porkbun!","They're a great company, service. I personally use https://namecheap.com for my registrations/renewals and use Hostinger for hosting/vps. I don't like putting my eggs in one basket, as it were.","I use GoDaddy, Namecheap, AWS, Veerotech, and Hostinger for domains and hosting.I like all of them but my favourite is Hostinger and Veerotech. AWS is great but more setup is required."],"points":15},{"text":["I created a Vue like Web Framework using my own programming language","Looks fun, personally I don't like \"attribute logic\" (I call it angular.js PTSD). But you sure went all in and made something new. Nice :)"],"points":0},{"text":["Creating a Web, don't know what to do, help lol","Pay someone who have any idea whats happening here.","Welcome to the complicated world of WebDev! :PIt's actually fairly straightforward:Basic: Vercel (Free Tier)Description: Vercel offers a free hosting solution that's great for static sites and works seamlessly with Next.js and other front-end frameworks. You can deploy a landing page quickly with automatic HTTPS, global CDN, and more.Pros: Easy deployment, automatic HTTPS, integrates well with modern frameworks.Cons: Limited to hobby projects on the free tier, with usage limits that might require an upgrade as traffic grows.DIY Level: Low. Requires basic knowledge of deployment processes and Git.Mid-Tier: Netlify (Pro Plan)Description: Netlify offers a more robust solution for static and dynamic sites with its Pro plan. You get features like form handling, serverless functions, and more.Pros: Easy to use, great for both static and dynamic sites, automatic HTTPS, continuous deployment from Git across all plans.Cons: Costs can increase with additional features and higher traffic.DIY Level: Medium. Similar to Vercel but with more features that might require additional setup.Custom/Hard: Self-HostingDescription: Use https://hostinger.com with either a Shared Hosting account, or a VPS for more contrl.Pros: Full control over the server, scalability, and the ability to host multiple services.Cons: Requires significant technical knowledge to set up and maintain, including handling server security, updates, and uptime monitoring.DIY Level: High. Requires in-depth knowledge of server management, domain configuration, and security.Recommendations:For the Client: Given the simplicity of the requirement and the client's limited budget and technical knowledge, starting with a free tier option like Vercel is advisable. It offers an easy way to deploy and manage a landing page without upfront costs.Domain Purchase: You should discuss with the client whether they would like to have a custom domain. Purchasing a domain on behalf of the client is common, but they should be aware of the annual renewal fees. I recommend https://namecheap.com.Handover: Create detailed documentation on how they can manage the site and renew the domain. This ensures they are not left helpless when you hand over the project.This strategy allows you to deliver the project within the client's budget while ensuring they have a professional and functional landing page.","Why would you take on a project on that you don't know how to do? That's a disservice to your client.If they want a website, without 3rd party branding and other limitations, they are going to likely have to pay a monthly or yearly subscription fee whether it's for a 3rd party service like Wix or for web hosting. I'm assuming that this client is a business; it's a cost of doing business in this century.","Payment for things like hosting or at least the domain are basically inevitable. You can find free tiers for hosting, but the domain is going to probably be at least $12/year. Email probably also costs per month if the client wants email at the domain... recurring costs are unavoidable.And I recommend that you not take the job, especially for very little payment. Your client is wanting something outside of your skill set, and this is going to be far more work than you're expecting.However, if you must, use something like Wix... Don't try to figure out how to build it yourself. You'll only waste a bunch of time building something horrible and probably dangerous. And I actually hate Wix, but it's the better option here.","They/you have to buy a domain name, which is paid by year. This depends on the agreement you have with the client.Then there is hosting. Sounds like you will be fine with static pages, most of the platform allow for a free tier for websites like this.However, the biggest hurdle as I see for you is to turn your design into html/css. Again, this should have been discussed prior to work, who is responsible for creating the website and not just the design. If it is on you, you can learn simple web dev in a month or so, almost without touching JavaScript. Or you can find a plugin to Figma (or wherever you created the design) that turns it to code. The quality though is usually shit","Buy a template","... just bail. This won't end well","You can use No-code tools such as Webflow or FRAMER (my personal favorite). The UI of Framer is very similar to Figma, and you can use their plugin to easily copy your design from Figma to Framer.","Use Vercel best choice for a Nextjs app or netlify also good one.","Or you can leave the web dev part to me and after I'm done, you can deliver it to your client. Win-win.","If you can achieve your design in Wix, I'd probably do that. It has a CMS so they can actually update their website without you if they are willing to touch a computer, I know some clients like this aren't. Don't try and overcomplicate this unless you are really interested in learning to be a coder I'd say. I had a designer friend who would design and then build wix sites, it's a reasonable service to offer, especially if the client needs no fancy functionality and it's essentially a marketing site."],"points":24},{"text":["In WordPress which type of theme is better for clients? Block themes or classic themes?","Classic theme with ACF. Clients like to break things and block themes are just so easy to break, classic theme ACF is so simple and easy to work with on the dev side as well","I would say block as it’s the future. Get them used to it. You can style around the block widgets and their built in CSS. ACF flex content is great but the future is to have everything embedded directly in the block editor."],"points":2},{"text":["What stack to use?","Use whatever front-end and back-end you know the best or what was taught in class, those doesn’t really matter until you hit scale or need long-term maintenance, neither of which are a concern for you.I would ask your professor if a multi-personality DB is allowed. If so, use Yugabyte, since it allows you to have both postgres and redis (but it saves to disk) in one program. It’s marked as deprecated but this is a school project, so that doesn’t really matter. Unreplicated should be fine for your demo. If that is not allowed, deploy postgres and redis separately and configure redis for persistence. Put the music binary blobs in REDIS and the keys for said files into postgres. Turn on the REDIS REST API and use that to get data out, but deny uploads without an API key. This allows you to simply point the browser at REDIS and use the native html5 multimedia for audio, and let the browser handle the hard parts. If you do anything other than point the browser at an mp3/oog/flac/whatever audio file and use the builtin controls, you will have a bad time.Store all data except for the music files in postgres, and you should do decently well and not have a hard time.","Why would you have to use both databases? If you have to I'd choose to save playlists and songs because in a none relational database and then save artists, users ect in a relational database then relate those users with the playlists or songs they have in the relational database. Probably do mongodb and postgres or mysql.For backend it doesn't really matter whatever language you like works, I'd do it in PHP or GO.Frontend I'd choose Vue but I think most people would say React or Svelte is better although I think it doesn't really matter. Then add in Tailwind for styling.","For development, Next.js + Tailwind + Jotai(state manage)For hosting, Zeabur(full stack and database) or Vercel/Netlify(only static)Database: MongoDB"],"points":2},{"text":["Should i continue or move on?","Are we going to get this post once an hour for the next two months? The level of panic here is insane","In short - if you think Devin is a meaningful competitor to your skills, you definitely should quit.If you think you can do better, pick a path in https://roadmap.sh, learn what you choose properly, build small projects to practice, publish them on github. Here's a list of ideas https://github.com/florinpop17/app-ideasIt's a lot of work, but if you endure enough you'll be able to build a Devin yourself.","Okay, so it can solve just shy of 14% of issues. Why are you concerned? Here's what happens when you rely on AI to code all your stuff: https://www.ign.com/articles/video-game-made-purely-with-ai-failed-because-tech-was-unable-to-replace-talent","I bet these posts are being written by devin to promote devin","what is devin ?","Coding is about 20% of what I do daily, I don't understand how any AI will replace the other 80% any more than it would be able to replace every other job in most companies (mailing, answering questions, attending meetings, thinking a course of action, picking a stack, talking with clients, long etc.(.","https://www.reddit.com/r/javascript/s/2ub9FQcVn3","Wrong opinion. The industry is vastly different from a lot of the new-age tech that is coming out, like Devin. Just because Devin might be a great tool for development, doesn’t mean companies trust it with their sensitive client information. Keep learning, you’re doing great. Learn how to utilize Devin to be better, not to let it beat you.","I'd strongly recommend reserving judgement until after all those revolutionary tools are released. Chatgpt4 was supposed to be the next ai lawyer, but now there are papers showing the results aren't so perfect. Google's ai presentation turned out to be manipulation to say the least. The new sad norm seems to be to bend and twist \"research\" to the point where it's not yet a blatant lie but is impressive enough to draw much attention (money).","In any industry, there will and should be a human in the loop. From finance to manufacturing, to web development, medical, health, and so on, we will always have a job in the hierarchy. That job scope may change, but we will never allow (for a number of varied reasons) humans to be completely cut out of the process.Apply this to your life and work. What can you focus on that makes you unique, indespensible and valued? Just because we have new tools doesn't mean we are suddenly obsolete. It just means we have new tools we can use to enhance our work and lives.Figure out what you can now bring to the table and you'll find success.","Sounds like you haven't read up enough on Devin's capabilities. Go do some due diligence","Best to move on!","Yes. AI will replace you no matter what. Resistance is futile. Surrender now","That video isn’t even real I can’t believe people are falling for this xd","Clients often have near endless feedback and quirky requests during the life of a project. Someone is still going to have to make sure the stupid machine can output what those requests are, and until true AGI happens, I’m not too worried about a LLM taking my job.","Yes, move on. If you’re worried about AI replacing you, you’re already dooming yourself","This gets posted so often that I keep my answer saved.AI is a tool, even if it’s not currently a particularly useful one for deep work. It is okay for solving well defined and solved problems, but it can’t innovate and if you don’t even know how to define your problems well enough, it can’t give you a useful answer. The existence of hallucinations make it a minefield for any non-expert relying on it. The legal ramifications of using AI-generated code trained on code with licenses that don’t explicitly permit that has yet to be hashed out.It’s also being massively subsidized by the companies selling it, as a way to build reliance/dependence before they inevitably jack up the prices to make a profit. Copilot costs $10/mo for users, but an estimated $30/mo to Microsoft. Brace yourself for Uber-style surge pricing when there’s heavy demand. It’s too expensive to be a loss-leader.If all of these problems do end up getting solved, I see AI as something that will be for us like what compilers were several decades ago. They might totally change how we deliver things, but at the end of the day, our job is to deliver a website (or API, etc). The methods we use to do that aren’t as important."],"points":56},{"text":["Do you translate your URLs?","Depends. We run a webshop, so for product links we translate the slugs for better readability. But for administrative stuff like login/out, the cart, and checkout process, we stick to English for consistency.","I always do them in English - no matter of language the content is.","From what I know, the paths should be in site’s main language, but I’m a junior so take it with a grain of salt.That said, if you are doing localization, there should be and indicator of what language current site is in for better SEO like: site_name.com/en/articles/new -> site_name.com/es/articles/newThat’s at least how I do it in my projects and my company does this for clients","it's the biggest PITA and does not accomplish anything. Some companies do it because some SEO astrologist said it's important.","Casual users don't care and power users will bookmark. Plus modern browsers match by title element as well, which should be localized.","Absolutely do not do it. I can't imagine the problems it might create...","I did this for multiple sites in the past(2010s) but only translated article \"slugs\" not the login or administrative pages. Links were mostly like /language_code/article_id/slug-in-that-language, with slug actually not having any effect on how site loaded articles, it was purely for ux and seo reasons. /language_code/article_id/some-random-stuff would still load the correct article in that language. I still see this pattern is being used in many e-commerce and blog sites today. Apart from slugs maybe only translating article page url might worth doing. Like if you have something like \"/articles/article-id/article-slug\" translating it to \"/articulos/article-id/article-slug\". But even that's of questionable value.May be a bit tangential and anecdotal but one site's search ranking really tanked after adding translations, especially on google.Not all the articles had translations, some were in 3 languages. I put the language switching links inside the article after the title and the date & author lines as links along the lines of \"Read this article in English\" or \"Lire cet article en français\". They wanted it that way. Because previously they posted all languages at the same page and put a message at the start of the article that said \"You can read this article in English at the bottom\". I did multi language sites before and none of them had this search engine ranking problem. Moving the language switcher to top navigation and changing how it worked fixed the issue. Instead of anchor tags with the href as the other language's url, language switcher set the language in user's session (with an url like /set-langauge/language_code) and redirected to the appropriate article in the new language. If the article did not have a version in the picked language it redirected to homepage.","In smaller personal projects I would not do this by hand, but for bigger websites with many pages and languages I d recommend you to go for a Content Management Systems brings you that functionality of translating the slugs of your URLs out of the box (or at least with some plugin), Typo3 for example does that automatically.","Do URLs again allow for non Latin characters?","URLs don't matter anymore. Nobody is typing out your URL manually. They'll use bookmarks, browser history, or search. Search engines also aren't dumb anymore and URL has no measurable impact on SEO anymore (just use JSON-LD structured data and you're done).So with that said no I don't translate URLs. They're typically always in English unless someone wants them to be in the sites main language. They do not and should not be multi-lingual because then you get a dozen URLs all going to the same content and that can hurt SEO.","I work on a major website that has multiple languages - we prefer to not translate the pages urls.From SEO standpoint - it is enough to have your SEO fields translated, such as title, description and etc.","For applications, we do not bother translating url's.For websites, we do translate them as it makes it clear if people share links to articles (not all chatapps always crawl the link to retrieve the content)","I hate it when developers name internal stuff (URLs, variables, files, functions, etc...) in another language than English.","Use a proper REST like path, like so:https://example.com/es/article/an-example-article-titleYou can use a link tag in the markup to indicate alternative url's for this path, like so:<link rel='alternate' hreflang='es' href='https://example.com/es/article/an-example-article-title'><link rel='alternate' hreflang='en' href='https://example.com/en/article/an-example-article-title'>Assuming that your backend can parse and automatically retrieve the article in the respective language. This is a worthy goal not just for SEO, but for user experience who may want to read the article in their native language. To tie this all together, the website should have a language picker displayed somewhere prominently, like in the navigation header.","If you are targeting multiple languages, that would probably be really good for SEO, but is it worth the development issues? Do you or your team know the other languages to be able to navigate your project?Does your (programming) language or framework have a good way to manage this? If I was setting up routes in my project, I would create /{lang?}/articles/news and let that single route handle all languages instead of creating separate files/controllers for each language. But if I had a CMS or tool that handled the language organization for me, I would consider translated URLs."],"points":79},{"text":["UX = Design + Technology + Business ?","Product design today is about user centric design, meaning it’s more about user feedback and user interviews rather than graphic design."],"points":0},{"text":["UI component library alternatives to MUI and MaterialUI","Tailwindcss with DaisyUI was a fun experience for me recently.I heard positive opinions about chakra ui, but I haven't used it myself.","I'm also back-end. Used MUI and React for the last control panel I did... blown away by how easy it was to create an entire CMS in under 2 weeks.That was a few years ago, and I recently started a new job, again with a \"we need a CMS, and the deadline is in 2 weeks\" kind of stakeholder.I did some research, and these were the key ones I came across:ShadcnRadixNextUIDaisyUITailwind UI (not free)I think it's also important to understand that there are component (behaviour) libraries, and there are UI (visual) libraries, and libraries that combine both.I chose Shadcn, which is a behaviour libraries with basic styling based on Radix and Tailwind, but it allows you full flexibility over appearance.If I wanted something really fast, and didn't care about styling, I would have gone with NextUI. Tailwind UI would have been a no brainer, but my employer won't pay for it. I also find the license terms a little restrictive, but understandable.","I love https://getbootstrap.com/ . It's not a full JS lib, so you can combine it with Angular, Vue or server side rendering with PHP (like the way the web worked before 2010's).Or for simpler tasks just jQuery and some (old fashioned) Ajax.","Look out for ant design. It's awesome","Mantine has been my goto these days for","NextUI is my go to nowadays","We use mantine but shadcn is pretty okay too.","DevExtreme","I wanna recommend a thing I'm working on here, but it's still early stages.For what you're wanting here, Lit would be an appropriate choice. I've seen published pre-built components, but I forget where. The advantage here is that it's a more web-standards based component library, is fairly popular, is fairly small, and can be used in whatever framework or no framework.","shadcn for me. Have used MUI, Antd, shadcn and Mantine UI but mantine is far superior for me because of the hooks it provides with its base package ! I was creating one (named MeroUI) but had to drop plan as mantine already existed that fulfilled my needs and recently was busy. If you are gonna apply for jobs soon then don't use them, try to create components by yourself. Otherwise use them , People love daisy but I never felt confident with it as it feels bootstrappy for me. Everyone has their view but shadcn and mantine combo is far my best","Do you wanna make web apps or websites?"],"points":20},{"text":["Static website product catalog","Hey u/SqlJames! Came on discord or Dm then we discuss about your amazing project.","If the project is going to have any worth, then you need to pay for proper hosting. The SSL certificate is generally free, using LetsEncrypt, which is typically included with any good hosting package and automatically installed and renewed by that service.I always recommend https://hostinger.com for their great value and service. Been using them for 2+ years now without any issues.You get what you pay for.","You can pm me for some help"],"points":1},{"text":["Made an out of the way, keyboard controlled note taker for a unity project I'm working on. Great for jotting ideas as they occur. Built in Electron with vanilla html/css/js.","Made a little video of me using it, sorry for the slow typing, I make up for the time lost by making the app as quick to access as possible. 😅"],"points":0},{"text":["Your opinion on frontend testing","I write tests for reusable components , making sure that they work as intended. It feels like useless work now while everything works, but when you go and change the component later then you have an added guarantee that things will work as expected.e2e testing is critical in my opinion. Sure we can test the logic of parts of the site in isolation, but we do need to mimick usee interaction. I find it particularly useful with forms and auth.","I'm expecting to have the unit tests, especially when there are juniors in the project. We are lazy people, and writing unit test when ex. a Dropdown component has a check of the url location(real life example of a mess), they won't be easy - that's a good heuristic for red flags. If you want tests to be simple to write you must write simple as possible components without stuffing hundreds of hooks or dozen of props.  From my perspective unit tests makes you write simpler components that are easier to compose and alert mechanisms when you do refactors.","When I'm not working on UI, writing some trivial tests for a trivial function only takes a few minutes. It shouldn't take much longer for a simple component if you're writing them with testability in mind.Integration tests are obviously hugely beneficial too. It's common for applications to contain more lines of test code than application code.","I don't do front-end testing as thoroughly as back-end. My qualifications for something warranting a front-end test are:Something is a reusable component of some sort (i.e., part of a library, not, like, a button I'm gonna use on various pages, unless it has an unusually complex array of potential states).Something responds in multiple potential ways to an action or response from the server.I've seen front-end devs write front-end tests for Vue code that, like, assert that a button is disabled if an input field is empty, and my comments about that are always along the lines of, \"You're literally just testing that Vue's reactivity works. If that breaks, we've got bigger problems than unit tests can help with.\"","I'd focus on specific integration tests over unit testing, unless you're doing a lot of data manipulation of state on the front end, which is a bigger red-flag than a failing test to me as that creates massive security holes.If you're sitting there testing if something can be rendered or not, is just testing for the sake of testing because people on the internet told you to do it.","There's a contingent of actual good webdevs who think unit testing frontend code is not of practical value. We just don't bother saying it. You just try to dodge it as best you can in your career. I'm not trying to influence the world here, but if I see unit testing highlighted in a job description, I'm less inclined to apply. If y'all are more inclined, good, great, the sorting hat has spoken.","By practice , we unsure we want to try but the extra code make me nervous 😅 weird unit test , weird front end test . i mostly test disabled transaction only ."],"points":19},{"text":["How do I buy a domain?","You can't. The domain name service is a service that costs resources to maintain.","You cant. But many domain registars allow you to pay in advance so if you pay 2k it will be yours for 166 years (lets assume some inflation too and it might be just 100 years)","$12 a month sounds more like hosting, which is often bundled with domains.You always rent rather than buy domains, tho I've never seen \"monthly\" periods - it's always annual (but you can often pay for multiple years up front). Sites will often market it as \"buy a domain\", but the entire system works the same regardless of how they term it.A system where people could keep domains forever simply wouldn't work because we'd run out of useful domains (or have to create even more TLDs to confuse people).There's also an ongoing cost for the domain registries since they have to run the top-level DNS servers (which tell other computers where to go for detailed information on your domain) and handle other admin tasks (WHOIS and requests for information from authorities, for example).You also rarely deal directly with top-level registries. You buy from a middleman registrar instead. One of the reasons domain costs can vary is these registrars may either sell domains at a loss to market their other services, or run \"premium domain\" markets where they try to sell domains for much more.There's multiple aspects of \"buy a domain\":The domain itselfDNS - since this is needed to actually do anything useful with a domain, it's usually bundledHosting - if you want a website, you're going to need somewhere to host it. Since this is one of the top things people use domains for, it's also often bundled, but there are plenty of services which allow you to get just domain + DNS without hosting too, since many people often have hosting elsewhere","The simple, practical answer is no you cannot do that.","$12 is not a monthly fee, it's a yearly fee! 😊You can actually buy a domain directly from a domain registry, bypassing third-party registrars. However, most registries operate wholesale and don't typically sell directly to individuals.Domains require ongoing maintenance and technical infrastructure, which is why registrars handle the process and often charge fees for their services. If you're interested in a more direct approach, you could explore becoming a registrar yourself, but it involves significant investment and technical expertise.","Everyone else has answered your question. If it helps anyone, I'd like to add: if you're a student and have access to a student email, you can get two free domains, one .me and another .live valid for a year through the GitHub education student pack.","there is no lifetime domain guarantee, even with big corp if they forget pay the bills to extend the domain's time, they could lose the domain to someone else if they don't pay in time","No one sells domains per month. Where are you seeing that? Its yearly. You can’t buy them outright.The rules state minimum 1 year, max 10. https://www.domain.com/help/article/domain-registration-the-life-cycle-of-a-domain","If you pay 2k up front you'll be able to keep it for a very long time.","I learned the hard way that if it is optional, it is much better to get a domain from a different company than the host. I get mine from Namesilo.com, for example. That way, if you ever need to change hosts, it is very simple, instead of a nightmare. Also, base your emails on a different host from you website host, for the same reason. That way, again, if you ever need to change hosts, it is easy.","And whatever you do, stay away from GoDaddy.","If you are looking to own the domain forever, then you can buy a blockchain/NFT domains.It doesn't have any expiry/renewals AFAIK","Purchasing a domain is similar to owning a piece of online property, but you cannot keep it forever. Instead, you register it for a set period of time, typically one to ten years. To do this, go to a domain registrar such as GoDaddy or Namecheap, search for an available domain, select how long you want to register it for, enter your information and payment, and that's it! It must be renewed on a regular basis in order to remain valid. The $12 per month you mentioned is for registration and other services, but you can pay in advance for several years if you prefer.","You cannot do that unfortunately","As others have already commented the \"you can't\" part, maybe you \"can\" by setting up a trust into which you put your $2,000, have it invest conservatively, and its only purpose in existing is to renew that domain name for all eternity.Probably not worth it, but that's a way you could do what you're asking.","I use Namecheap, and I like their admin interface.I think I pay $20 a year for http://lavacharts.comSo yeah, if you had enough money, you could prepay bunch of years upfront.They also have auto-renewals, so you don't have to shell out upfront and can still keep it as long as you keep it renewing.","There is all these sites that offer domains for like $12 a month, but isn’t that renting it? How can I actually buy the domain name itself?$12 a month is for hostingThe domain itself is registered through a domain registrar. These fees can vary but the \"standard\" fee is ~$10 USD (more or less) per year. Some premium TLDs will be higher, but usually not more than $20-40 per year. If you see an obscenely high registration cost, it's because someone previously bought it and is holding it hostage until someone admits they want it enough to pay the ransom.There are many registrars out there.Don't use GoDaddy. Pretty much any of the other one are fine.","You can’t own a domain outright. A domain via a good registrar will cost you around $15 a year. Some allow you to register the domain for 10 years. That’s as good as you’ll get.","As everyone said, you can’t own the domain.However, you can get a TLD from ICANN, provided you have good lawyers. This will cost you hundreds of thousands, and then you’ll be bound by the availability SLA, which means run fleet of DNS servers that allow people on the internet to find your TLD. For reference, .aws, .sbi are big companies doing just this.The rental you pay is not for the address. If its available, you can have it free. The rental is for access to the domain. Those DNS servers aint running for free.","$12 a month for a domain? That's really expensive. $12 a year is more the average. Hosting on a server for a test site that gets no traffic is $12 a month. Or are you confusing the domain with the hosting?","there is no such thing as permanently buying a domain, no. $12 a month is generally pretty overpriced though.use Cloudflare Registrar and you won't get fucked, they sell domains at cost-price.","Not a stupid question, but they're right in that as an individual you can't really own a domain name. It's a pyramid of control that funnels down to the end user. Even for things like decentralized web services you can't really own a domain as there still needs to be some agreed upon consensus on what domain name maps to what IP address.ICANN/IANA is at the top of the pyramid and they control everything. They decide what tlds are valid and who gets to manage them. tlds are generally managed by industry special interest groups, countries, and private organizations. Registries manage the big picture and wholesale aspects of various tlds. At the bottom of the list you have registrars who do the retail \"sale\" and management of domain names to consumers.The most amount of control you can hope to get is starting your own registrar, which some people actually do. You'll still always be at the mercy of whoever owns your tld, though.","Someone mentioned property which got me thinking of analogies, because that's not really a good one, and it's key to why you can't just buy a domain forever. By analogy, it's more like getting a Yellow Pages listing (pretend people still use Yellow Pages). You're in this year's edition of someone else's book, but that doesn't entitle you to stay in it forever, and it doesn't mean much outside the book.The domain name system is ultimately a list kept by someone specific that most everyone trusts to have who's-where information. There is no \"domain\" as a property unto itself, just a call and response that you want someone to keep doing like you asked. You're slipping them some cash and telling them \"Listen, if anyone asks you about 'mywebsite.com', send them my way.\" You're not buying any property or title in the name, and nobody outside the people you asked has to care (though the people you ask are so authoritative they're effectively the only ones who matter for the purposes of DNS) just asking that the most trusted Directory Information on the Internet remember this nickname for a while, and that's a service you have to keep paying for if you want them to keep doing it.","“I want to buy a house not rent it. How can I avoid paying property taxes???”","It hasn’t been said yet, but don’t use GoDaddy. Or let me just directly say, buy from CloudFlare.Search domain availability on GoDaddy, back out of the process. Check back later, and your domain is suddenly owned by the registrar, and available to purchase through a negotiated price.Basically: Nice domain name, it sure would be a shame if someone else owned that domain but was willing to sell it to you at a much higher yearly cost","You could buy the company that owns the tld you want to use.But thats probably not \"2k upfront\".","Well, the $12 domain fee is for a yearly domain I assumed. Most Web2 domains is able to be rent only, and you couldn’t buy it and own it outright.If you are interested in buying a domain and keeping it forever, I recommended you to check out Web3 domain provider, like Unstoppable Domains or Freename through, which a domain typically could cost at least $20 and could up to $1000 I think, but you could own it forever","Are you LOL?You can buy any dotcom at 10$ per year","Since no one is giving very helpful answers, I'd recommend checking out Porkbun for the cheapest (that I've seen) yearly domain fees, like $10-15 for your .com domain. It's difficult and expensive to purchase for all time and its not worth the 2k as you described to avoid a small yearly fee - less than a month of Netflix. I think Cloudflare is also one I see recommended a lot."],"points":336},{"text":["Scraping Facebook. Impossible?","They actively change the markup content, dynamically, specifically to stop people doing what you're trying to do.","Probably not impossible, but since Facebook shut down all their useful APIs (like events) they're of course trying to prevent people from getting the data another way. We've used FB as a simple CMS for events some years ago, but without the API it's useless.. the amount of effort it takes to get the data isn't worth it.","If it is within your scope, LLM's can be really helpful in scraping sites that are very dynamic. You can target a very general container instead, loop through everything inside it and have an LLM (with the right context) parse everything for you.Not exactly a silver bullet, but I personally do this on some sites - and it works pretty well. I use a deterministic output like JSON or function calls with GPT.","Tried using something along the lines of what https://testing-library.com is providing? I.e. to target elements using role and aria based queries, instead of xpath or CSS stuff.","As others have said, their client side code and markup is obfuscated so you won't be able to use tag or attribute selectors. I don't think they actually change the structure of the DOM tree though, so if you could find a consistent way to locate the event title string, then you could possibly do some generic tree traversal to grab the info you want. Like maybe the event date is always one level up, two levels down, and in a specific format. You could search for a string in that format + elements matching that traversal and evaluate if it's a valid date / title combo (are there spaces, is it bold, etc).","Back in the day, I had written a Chrome extension for Messenger.com (Facebook's standalone UI for their facebook chat), and it was relatively stable. The extension was a hard-coded stupid mess that I scrawled in an afternoon for myself, since I wanted a night theme so badly. It stayed stable for a shocking few years (maybe 3-5 years, I can't remember), and then things started breaking rapidly. Since it was a hard-coded mess with CSS selectors instead of some dynamic night-theme-generation tool, it became a cat and mouse game to keep the extension updated.Eventually, I could see the writing on the wall and retired the extension, despite it having an active ~30k user base. So no, I don't think it's feasible to do anymore, especially with the anti-scraping stuff they probably have rolled out by now.","Here’s the hackiest jankiest solution I can think of. Use selenium, take screenshot of what you want and give it to chatGPT to analyse.","I know a workaround way to do it. It's probably not as fast and not even considered web scrapping but you can use a python library called pyautogui to control the mouse and keyboard as if it were a real user, creating a user bot of sorts. I've used this on google maps as a way to get coordinates for clients addresses (in order to improve our delivery system). It ran for a whole day and I got like 7000 coordinates from it.Depending on what you're trying to do this might be the way to go.And yes I know about google maps API but they didn't wanna pay for it.","What tool are you using to scrape with?","Their robots.txt should be honored. Depending on how you're hoping to use this information, they may come at you legally.To answer your technical question though, they specifically obfuscate their markup dynamically to prevent what you're attempting to do.","It's against the TOS. If they catch you, you are fucked.","have you tried using puppeteer ?","In the age of AI, open Webservices and scrapping means stealing, so companies actively block it now."],"points":176},{"text":["Best practices for \"forgot password\" flow?","Present the forgot password pageType in email address, let page generate OTP if email exists, state on the page ‘if the email address is valid you will have a One Time Password, via email, please type it below.Email gets generated from the page, so no moving off the page, do validation to compare both codes with a retry option.If validated, present new password field with a duplicate field to make sure typed properly, make sure password meets min requirements, if so save new password.I don’t agree with telling people the email does not exist, that can be used for harvesting, yes you can slow people down but it’s a way of finding logins.","Why redirect to login screen once successful? They just typed their password in twice, why make them do it again? Just log them in after the password has been set.","If the email exists in the system, I send an email containing a link with a long random hash (48 or more characters). The user has to click this link in order to get to a page where they can insert a new password. The link is only valid for 15 minutes and has to be recreated if opened after this timeout.","So it's not a security bad practice after all?It is bad. The fact that many websites do it doesn't make it OK.As others have said, the correct response is \"If the email address is valid...\"Similarly, the correct response for a failed login is \"Incorrect email address or password\". Also consider registration where someone tries to sign up using an email address for an existing account. You shouldn't respond with \"There's already an account for this email address\". Respond like a normal registration but send an email saying something like \"We saw you tried to register but you've already got an account... Click here to reset your password\".Otherwise you've got a privacy leak that makes it possible to determine if a third party has registered on your site.In a trivial case it could be used by someone to determine if their partner has registered on a dating site, for example.A more serious problem could be a scammer determining that a victim has registered on a site and then sending them phishing emails to steal their password.But apart from that your workflow looks pretty good.","I follow OWASP https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html, so I consider it bad practice to return specific messages such as no email, as it allows bots to figure out what email address are registered with you, for which they can then perform social engineering attacks. (Just check the jobs at Upwork under the \"scripts\" category, it's full of people wanting email enumeration scripts)If emails can be figured out by sign-up forms, then that's a failure to be consistent. You should do the same for both forms.For registration you could go with a safe no commitment message like: \"Thanks for registering, once we have confirmed your details we will send you a confirmation email. If you have trouble registering please get in touch on <contact\\_options>\"","A company like Google or Facebook has so much market share you can be pretty confident a known e-mail address has a high chance of existing on their system without any probing. So it is of no practical use for Google to provide less feedback on these pages. Is the fact someone is registered to your site an issue for the customer? If so then show less information.I'd be more concerned about your passcode, especially it being short. It would be safer to e-mail the user a link with a proper hash code. Anyone can access your reset page and try these short codes, which sound like they have a high probability of being guessed. Yes you could and should put a rate limiter in either way, but I see no benefit of reducing the security by using a short code if you are e-mailing them.","Saying “email does not exist” is data leakage - it allows anyone to probe at the system to see who has/doesn’t have an account.Most sites I use these days will say something like, “if your email address is in our database, you will receive instructions on resetting your password.” That is best practice, anyway.","There's no single answer. It's a balance between security and usability.Personally I'm annoyed when I know I have an account on the site but don't remember the email I used. The I submit the form multiple times and don't even know if I've not found the right email or it's a case-sensitivity issue or the email just is filtered out as spam by a server...","Check NIST - they prescribe a flow.","Should I return message saying \"Email does not exist in the records\", or just say, \"Code sent to email\" irrespective of whether the email exist or not.Your password reset form should not reveal which users have accounts. If the response is different, attackers could use that form and a list of email addresses to discover accounts. Or maybe some jealous significant other could check if a user has an account.If you return an error about the account not existing, you are leaking info about your users.Also, I wouldn't necessarily think that what Google or Facebook do sets or should be interpreted as best practices. For one thing, they've been known to do some insecure and dumb things. And second, they'll (hopefully) have additional security to prevent abuse. And finally, they pretty much assume that everyone has an account anyways, which makes leaking that info less valuable/dangerous.","I personally like the magic link flow. For normal login flow, get the user to enter their email and send them a link to their email address. Once they click the link they're logged in. Then you don't need to worry about forgotten passwords as it's the same flow.","Step 2a, check if account is also active if you also deactivate users (based on subscription etc)","UI will show a text box for the secret codeI would just have this in the url that you give them for convenience.Once verified, UI will show \"new password\" and \"confirm new password\" fields, to update the user's password.I wouldn't allow the user to pick their own password, because they'll pick something stupid. Instead, I would generate a new password for them and show them what it is once on the page. Make sure it isn't cached.","Just firebase auth if possible","Outsource identity and access management to a third party like Auth0 or OktaYou’ll probably get it wrong","Regarding the question: Go with the first. Email existence is found via registration anyways and potentially login. It's also a NIST recommendation and I believe PCI. If it exists, say it was sent. If it doesnt, say it doesnt exist."],"points":154},{"text":["Is hiring a cheap developer from another country a good idea?","Spend little, spend twice","communicating over different time zones will cost you so much lost time. it becomes very frustrating and will make things take longer. if you can afford people in the US, do italso not to be mean but every india dev we’ve dealt with over the years writes horrible spaghetti, bug filled code and creates so much work for you down the road to fix and unhappy customers because your product is breaking. yes there are good ones, but majority of them are going to pump out code as fast as they can sacrificing quality because you are 1 of their 50 customers they are coding for","I just want to say that the fact that they’re “cheap” doesn’t really mean they’re bad, take into account that in a country like Pakistan 1000USD is a lot of money. For example, here in Chile 1000USD a month would be a good salary for a Junior dev, but I’m pretty sure nobody would accept that in the USA. Just saying.","https://fastgood.cheap/","Sometimes yeah. Hire me","The odds are not good, if you do this apply twice as much research into them and their work. I have had to rescue projects like this in the past and observe low levels of professionalism. There are of course good coders in these countries but you wont get them cheap.","Generally speaking, someone that has skills (and confidence) and knows they can get the job done are not motivated to keep their pricing super low.This is regardless of whether they are in a \"cheap\" country like India, or the Phillipines, or if they are smack in the USA or Australia.Regardless of the country you are hiring from, make sure your brief is extremely clear about what you want, and make sure the responses are all accurate and not canned when they reply back to you.Frankly I've worked with developers based in the Phillipines who can do some absolutely amazing work.And conversely, I also deal with an American for a particular project and whilst he isn't the most useless developer I've contracted out with, he sure better hope nothing happens to the other guy...(Obviously, I've also been burned by overseas labour, and had amazing local workers).That being said however - it also depends on the project.Anything that would need extensive consulting to figure things out (as in less \"coding\" and more \"planning and figuring things out\") it's better to hire someone that is in the same country as you. Time zones make this stuff a nightmare, and being aware of local market and cultural trends is definitely a benefit.It's hard to describe the difference, but I'll use accounting as an example. An Australian is going to have a far better idea of local tax regulations in Australia than someone in the Phillipines would.Likewise, anything that involves health data or protected data depending on your country is a no-go for overseas workers.On the other hand, if you're just after something that makes it easier for clients to book an appointment with you (something that doesn't really need local knowledge) then absolutely an overseas contractor makes sense.","Dont expect professionalism and compromise if you are not willing to pay what it's deserved, people know when they are being treaded as slaves","Only speaking from personal experience so milage may vary, but I've found developers in The Philippines, Vietnam and Malaysia to be more reliable than those found other lower income countries.As with anything, ensure that clear goals and requirements are defined early on.","I know people like throwing the advice 'hire cheap, hire twice' but the reality is there are a lot of 'web developers' who need work right now which means a lot are trying to price themselves the lowest they can.Just because developers from third world countries price themselves considerably low, it doesn't necessarily mean they are bad. It's currency arbitrage, they can afford to work at that low rates because $ is expensive. The cost of living is low etcOnce they have a good reputation, they price themselves back to their value or even higher than they would charge locally. But that's besides the point.The best way to find the best value for money dev is to vet them properly, look at their work or projects, discuss the job and see how they respond or what ideas they bring in or how they talk about their projects or their work ethics, you are not looking for all the right answers, all you need is honesty and understanding.Good luck.","Is $16/hour considered cheap for you?","As others commented, there are more people who would take it but the quality is not so good but there are a few who are really good but it is a hit or miss. I used to be in upwork(odesk at that time) but left because im \"too\" expensive which is not really. 😂 Im from Philippines, not India or Pakistan.","I always ask my clients what's important to them: value or price. If it's price, hire someone from abroad. Can't compete with the prices from countries where the costs of living are a fraction of other countries. If you want value and high quality, pay the higher price.There is this saying: buy cheap, buy twice.","Picking a developer should not be just based on price, you need to see a portfolio or examples of their previous work. Whatever you do, NDA’s all the way.Delivery times is very often something that slips, payments should be based on specific milestones being met.Thinking long term, who is going to maintain the work, what is the deal around that.Understand what is being offered, what tools, languages are going to be used. You don’t want to get locked into a language or toolset just because a developer prefers them, a lot of money is wasted in this area.","If you have an engineering background, you could have spent more time testing the chrome extension framework and making a sample one by now vs hiring offshore cheap shit. I once hired a person to do some work off a major site and paid a very good premium for a small piece. I used a temp credit card for testing and gave it the person for that reason. They tried using it a ton after the fact and nothing happened cause it had no money on it.","Try Eastern Europe or Southeast Asia like Philippines.Less risk for scams, and communication will be better.","I learned early on, you get what you pay for, especially when it comes to freelancers. You might get lucky and get someone skilled who can deliver, but 9/10 going for the cheapest option isn't gonna end well.And never, ever, ever trust the projects on their resume is actually their work.","Try OLJ Philippines","I have tried many time and almost every time they are not who they say they are and just give it to somebody else. Then they are not who they say they are and gets passed to somebody else.I have had projects get passed down so many levels before it actually gets handed to a real dev it’s fucking insane.Because I can’t find anyone I do it myself.","Hire me in in the US, here's my company bluangeldigital.com"],"points":83},{"text":["At what point are vector images less performant than raster images?","SVGs of detailed images end up more bloated than gifs & jpgs. Stick to reserving SVG for things created in Illustrator (without bitmap based effects and layers) and you’ll be ahead.","Svgs are great for icons, logos and backgrounds. A well optimised png especially with srcset sizing will be far better then vector for portfolio images. It's also going to be much quicker then you spending time recreating the layout in vector.Take screenshots of everything, make your portfolio site then check your score. Lazy load what you can, optimise sizes with responsive imagery if they're huge and it'll be fine. At that point if you're still convinced it might help you can try one and test it.I'd be willing to bet the work of vectorising will not be worth the small benefit (if any) of not just using an image.Don't prematurely optimise.","WEBP was made for this. I think it's the best image format for web apps. They look great, they are light and load super fast.","This is almost certainly negligible in either case.One thing though, if you use svgs, go with best practice, always outline your fonts.Otherwise, if it's more photographic content, use webp and output at multiple sizes for your srcset. In this case, you also want to lazy load anything that's not on the first visual hit.But seriously, it's not likely to matter here. Build your site, check it's lighthouse score, and if it's low for some reason, pagespeed insights will tell you if there are optimizations you didn't think of.","I don't have much knowledge of how the technologies in webdev work exactly, but from a graphics programmers point of view, there isn't really a simple way to know which is faster, there are just some general statements you can make: The time complexity for rendering a (unencoded) raster image will always be near constant, no matter how complex the image is (unless you do further processing with shaders/filter). Vector graphics need to be rasterized somewhere down the line, so the time complexity is dependent on amount of primitives that need to be rendered. So if your vector graphics has a lot of objects, \"pre-rasterizing\" it may be faster. But where that point is, generally only experimentation can tell.The other tradeoff you have to consider though is space complexity, which I guess is even more important in webdev if graphics have to be fetched over the network. In this case, the space required to store vector graphics will be much, much smaller for most use cases than for raster images.","Vector is for icons, logos, and simple graphics. Use raster whenever there is any photography involved.","I think it comes down to which one you like better/prefer to have on your website. Sorry I know my comment does not directly answer your question, I am unsure of the specifics of which is technically supposed to perform better, but remember people looking at your portfolio are not going to be sitting there with a timer. As long as your website isn't significantly slow, no one will notice and/or care about how fast it is.This is just my opinion. Someone else who knows more about this specific topic may be able to make better suggestions for you.","This may sound stupid, but listen to me: think about the content of the picture and imagine you were drawing it. How close would you get to the original? (I'm assuming you're not a gifted artist, for whom it makes no sense). But as a \"normal ass\": things like a logo can easily be drawn on a piece of paper by almost anyone who takes a little time. In cases of such \"simplicity\", an SVG is the way to go. In cases where the complexity of the image is greater, such as a photo of a city, raster-based images are the better choice. I don't think there is a clear answer to your question, but rather a trade-off.","When they’re CPU intensive and or weigh more than the raster version","[deleted]"],"points":42},{"text":["Intro screen to website?","Splash page, as it was called in the late 1990s to early 2000s."],"points":3},{"text":["How does my blog look? Anything that I can improve?","Looks good. Remove the sounds. They're a bit extra. It's nice that you can mute them but they are completely unnecessary.","It looks really amazing man !!","I have a horizontal scroll of the main page on my phone. Also, the navbar icon is touching the edge (at least on my phone).","Very nice.Tip - serve fonts localy.","Looks great. Second vote for ditching the sounds. I don't like websites to make sound unexpectedly. I also don't like that when I open a blog article, >80% of the view height (at 1440p, >100%!! at 1080p) is taken up by title + giant image, so I have to scroll to even start seeing actual content, but that's a personal gripe; I know that vertically huge components are in right now."],"points":6},{"text":["Remilia treasury got hacked for over $1 Million","How is this webdev","I do wonder if this is just the owners creating another account and then “hacking” in and just taking the crypto. That’s the awesome thing about crypto, it can be untraceable.","Another day, another insider stealing/cashing out and saying its a hack in crypto","Remilio"],"points":125},{"text":["Help with hosting a website.","You do not need two domains or two servers. Both front and back end can be hosted on one server using a single domain. You can route requests to your backend using a separate path (e.g. /api) or a subdomain (e.g. api.mydomain.com)."],"points":1},{"text":["[Show off Saturday] Created a intuitive stock analysis website for small investors","Looks really good man. Well done!","Bro this looks fire, can I contribute to it? Let me know","How long have you been developing this project? Great work.","site looks amazing. how did you make the individual stock graphs?"],"points":3},{"text":["A simple, modular and observable Go framework for backend applications."],"points":0},{"text":["[Showoff Saturday] I built NexusTrade – an AI-Powered Automated Investing Research Platform",""],"points":0},{"text":["Show Off Saturday Firebase Weight Tracker"],"points":0},{"text":["Develop lean, secure relentlessly, make it prettier - scale effectively.","Bop it","Don’t be afraid to fail. Fail often, in fact. It can always get better.","But get it all done before the deadline.","In case you all missed your daily jargon injection"],"points":1},{"text":["Current React/MERN stack page render SEO solutions? Everyone Just using Nextjs etc?","Can it be static?I like Astro.SSR? Astro or Next (if you must React,)Or Nuxt for Vue (or Astro and Vue)Or NestJS and Angular Universal (their Astro plug-in is weird, you could just use standalone components)Or Svelte and Sveltekit... you get it","React 19 I believe is supposed to support SSR out of the box. Past that if you can’t wait, you could look at react helmet"],"points":0},{"text":["[Showoff Saturday] Firebase Weight Tracker","Hi all,I have built a firebase weight tracker, which can be accessed anywhere, You can view your start weight, your current weight and your goal weight as well as your BMI, you can also view progress you have made through charts, as well as history. If there's any improvements please let me know, as this app is going to trailed to local gyms for their customers, so any help is helpful.Thanks for reading.Link: https://pss-weighttracker.netlify.app/dashboard.html","That's pretty cool, nice work!","What's pss?"],"points":2},{"text":["Web illustration","SVG","Adobe Illustrator, Photoshop are two examples.","I create SVGs in llustrator. You can animate those in after effects and use lottie to bring them to the web.There are other methods and tools but to me this has always seemed like the best way. If you are already familiar with the software there is zero learning curve to bring it to the web which makes it pretty accessible to motion graphics people."],"points":1},{"text":["Our not half bad resume site(critique welcome)","The Good : It works. I like how you included different resume templates. There are a ton of options for fields that one would include in the resume. Proper log in function, email validation (no repeats) and password hashing. UI letting user know that the information is being saved when switching fields. It's pretty fast. Solid backend from what I could see in a quick scan, though I do not code in python.The Bad : Design, which I understand was a last minute pivot and not the focus of the project, but I almost did not make it past the login screen. Some of the Templates came up as undefined and would not render. UI rendering issues with the nav. I could see my password data in the network tab when it was being sent off. No way to upload and parse a already made resume.Overall: Not half bad! I like the execution. There are a ton of these out there but I feel for a project this is a great starting point as an MVP. I was pleasantly surprised after getting passed the login screen and diving in. Might even fork it, change a few things (Probably use React) and use it for personal use. Great job. Also bonus points for putting yourself out there for some feedback, I know how it feels to want to show off something you've put a lot of time and effort into."],"points":3},{"text":["What would you consider a \"dangerous\" level of skill with frontend development?","If the recruiter is not able to describe the job in a serious manner or in a comprehensible way, I‘d think the company is not either.","Got to change your resume summary to \"Coding ninja wizard, with a dangerous level of skill, looking for opportunities to disarm complex challenges and polymorph code into marvels of engineering magic.\"","This is the level you reach when you are afraid to even touch the CSS stylesheet you wrote yourself. Every single change in order or inside a class rule can cause unexpected changes across multiple pages of app you were not even aware about. This is real danger.","How should we know lol.","I’m dangerous as in I only halfway know what the heck I’m doing and don’t yet have any professional experience to speak of. Very, very dangerous. The code base fears me. As it should. I have a particular set of unrefined skills. Does that count?","Write your code dangerously. Have zero skill. That's danger. Don't use descriptive names or any patterns, that shit is for losers who like things to be easy down the road, you want to fuck shit up good.When naming classes and methods just whack your keyboard like so Class hsidteyebdudhsjSuch danger.Please don't ban me","It's just a buzz term recruiters use. Usually without knowing much about coding or development. \"Dangerous\", \"Coding ninja/wizard\", \"web guru\", etc. all just boil down to \"be really good\"","If they want someone with a \"dangerous\" level of skill...I wonder if the pay will knock your socks off?","If you code a front end that creates a black hole, that would be a dangerous levels of skills","A dangerous level of skill would be little to no skill: high likelihood of production impact. ⚠️☣️☠️","With any luck, the company is fine and the recruiter they picked is awful. With no luck, the company is also awful.","That whole \"dangerous\" malarkey is good for content. Twitter / LinkedIn posts, it gets engagement.It's also good for when there's a stupid amount of VC money being thrown around. Makes naive investors have more fun while they gamble their money.For most real-world situations though, you should be careful about feeding into that game. There's big \"company culture implications\" there, and if it's not for you, it's not for you.If I were asked that question, and I was okay with the idea of dealing with that culture, I would simply try to sell myself to the recruiter. Sales, buzz words, key terms, technical jargon, the works.\"High impact project delivery skills with build tools such as webpack, babel, Typescript, roll-up. Knowledge of graphics programming to create unforgettable user experiences with WebGL / WebGPU....\"You get the idea. The goal is to just keep talking and keep them interested.","wait .. no TIGER thing no ..?probably they got scared of Peta .","I think it's when you use dangerouslySetInnerHTML in React or something","I wouldn't feel inclined to proceed with my application after that conversation.","Serious answer: Senior to lead level. You should be able to set up a build pipeline, implement a comp, and write robust and extendable code, and have the wisdom to see pitfalls before the project runs into them. You should also have the people skills to mentor newer devs and communicate with other departments.Sarcastic answer: \"CSS dev with 15+ years of experience, too cool for frameworks.\"","Who gives a shit? Apply anyway and move on. Either they are too stupid to work for or actually will hire you.","I think it means your really adept at like XXS and CSRF attacks?","Create an entire page (html tags, css, javascript code) as a javascript string and set it as innerHTML of body tag. Also use eval whenever, wherever possible.This may qualify as dangerous level in my opinion.","Leaving form fields unvalidated is quite dangerous","\"dangerous\" level of front end skills to me sounds like pushing straight to the main branch with no senior reviewing the code."],"points":211},{"text":["Introducing EmailBuilder.js – a free and open-source email template builder","Good, useful. Bookmarked, soon have to play with it to update some of my email server reports.","Looks very nice, but why is the json output not putting the blocks in an array? I feel like them as distinct properties makes parsing and transforming that output much more cumbersome."],"points":2},{"text":["Check out my new portfolio site","nice I really like your mockups","A suggestion: don’t use the same design for your header text as you do for your buttons. The headers look clickable.","Looks great! You might want to fix how it looks on bigger screens, seems a bit off."],"points":3},{"text":["I made a changelog page for my open source project"],"points":0},{"text":["handling a webapp 33K proposal with a client.","Thanks for your time, I’m afraid the gap in our expectations is too great to progress this brief together. I wish you all the best.","I quoted him an estimate of 33k+. $110 @ 300 hours to begin.That was already far too low, IMO. Unless you already have something similar built, you may be underestimating how long a project like this takes. The requirements reek of a scope creep project from a client that only knows the gist of what they want, and will be modifying requirements in real time.he claims $5K is reasonable to build thisThen walk. It's that simple. Negotiations are over. \"Clients\" who think they can get $100K of development for $5k are a dime a dozen and not worth dealing with. It's barely worth a response.","You don't tell him why it would be impossible at $5k. You thank him for his interest but cannot take on this project.Why? Because a lowball budget expectation is a giant waving red flag for a perpetually problem client.","Tell Vinny to either pay up or go pound sand. He's lowballing you and he knows it.The mere inclusion of an Accessible version as dictated warrants at least a third of the price.","I wouldn’t even read the specs for 5k","You should be asking for a ballpark budget from them before you invest time into coming up with a quote. You waste your own time by not doing this.You could probably build a system for $100K or $200K as well, but there's no point putting a quote together for that if their original budget was only $10K max.Once you know their budget, you can charge maybe 20% of that to start to just gather the requirements and design the system. Then do a detailed quote after armed with all this extra information.Basically, don't spend time doing a quote when you don't know their budget, and don't commit to a quote for a complex system until you've been paid for a few days at least to scope it out properly. Otherwise you're just quoting blind.","Yeah 5k is not reasonable.Just let the client politely understand what is included in your scoping and that your estimates follow the appropriate development practices and are an accurate reflection of what you can deliver for them.If they want to cut off features for a lower price you could spend more discovery time with them to understand how that would work, but I'd be weary and ask for discovery to be paid as well, otherwise you're just wasting your time. The output of the discovery would be a worthwhile deliverable for them by itself, and you could provide an incentive to deduct the discovery price if they then want to proceed with you for the delivery of the project.At least that's how it would go with a normal client.In your case I think they're just trying to low ball you or they have no idea how things work. If they keep pushing for unreasonable prices just let them know those are not feasible for you and they're more than free to go with another supplier.","33k was way too low already. I'm not quoting less than 60-70k, not including after delivery support","« A Tesla for 50k ? That cost 10k max believe me ! »« You build this 200m2 house for 600k ? No way I am sure we can do it for 50k ! Deal ?»Who on earth accept this as a seller ?","Don't try to convince. Find better customers and move on.","I read a bit closer and you’re dealing with student data and IEPs? Fucking bail. This dude is waiting for a lawsuit.","If you’ve worked with this client before, just be upfront about the depth of the work involved, and maybe circle the things on the list can do for 5k.That’ll give a little perspective on the scope of the project on the whole.I wouldn’t burn this bridge, since they may back with something else in the future, as they are doing now.","I wouldn't have even put an hourly rate in there. If you want 33k to do the job the jobs worth 33k end of story.300 hrs is a pretty reasonable amount of time for an MVP for an app like that but the price you'll do something is set by what you'll do it for. If you wanted 60k that doesn't mean it's 200$/hr that means to get you to do it will be 60kSorry you spent your energy on such a detailed quote for the guy. It's tough, you have to start with budget up front. The guy probably doens't have 30k to spend.","Sorry to hear about this, having the same issue with a client. in fact on my end I am dealing with client that I was deceived to take via a broker, who failed to disclose the whole scope of the project and wanted to pay only 2,200 dollars for a dental/hospital management system with invoice tracking, health scheme &insurance management, payment remittance, HR management, pharmacy and inventory management, administration privileges, patient management and billing among other vast features. Please do not start before you set things straight, define all the scopes you will work on and at what time you will work on them, ensure you also set a very flexible end of project date, and bi-weekly meetings for updates that should not take more than an hour and ensure you ask the client on what revisions need to be carried out and take them through updates. Don't be like me.","Tell him to try Devin!","You are lucky, committing to this for 33k would have bankrupted you.300 hours? You have an army of developers?This is more like 900 - 1200 hours.","I fed the specs to ChatGPT, and it gave a range of $81k-$198k… here is its full response:Estimating the cost of developing a web application involves considering various factors such as the complexity of the features, the design and user experience, backend infrastructure, integrations, and the team's hourly rate. Based on the detailed requirements you've provided, your project involves complex functionalities including user authentication, dynamic form handling, scheduling, automated calculations, digital signatures, email integrations, and real-time updates. Here's a rough estimate range categorized by development phases:Planning and Design: This includes wireframing, designing the UI/UX, and planning the app architecture. It might take between 80 to 160 hours depending on the complexity and the number of revisions.Frontend Development: Developing a responsive web application and mobile app (assuming you want a hybrid app that works on both iOS and Android) could range from 400 to 800 hours. This considers the implementation of the UI/UX design, form handling, session logging, real-time alerts, and other client-side functionalities.Backend Development: Building the server, database, and application logic, including authentication, scheduling logic, automatic calculations, email notifications, and digital signature processing, might take between 400 to 800 hours. This includes setting up the infrastructure for real-time updates and ensuring data integrity.Testing and Quality Assurance: This phase involves manual and automated testing to ensure the app is bug-free and meets all requirements. Estimating around 100 to 200 hours for thorough testing across all devices and platforms is reasonable.Project Management and Communication: Effective management and regular communication are crucial for the success of the project. Allocating around 10% of the total development hours to this would be wise, adding approximately 100 to 200 hours.Maintenance and Upgrades: Post-launch support, bug fixes, and updates are essential for keeping the app running smoothly. This is often calculated as a percentage of the initial development cost, around 15-20% annually.Assuming an average hourly rate for a development team varies greatly depending on their location, expertise, and your negotiation, but let's use a mid-range rate of $75/hour for calculation.Adding up these estimates gives a total of: - Minimum: ( (80 + 400 + 400 + 100 + 100) \\times $75 ) = $81,000 - Maximum: ( (160 + 800 + 800 + 200 + 200) \\times $75 ) = $198,000Therefore, a rough estimate for the entire project could range from $81,000 to $198,000. This is a broad estimate and could vary significantly based on the specific details of your project, the team's location, and the exact specifications you decide on during the planning phase. It's also important to consider ongoing costs for hosting, maintenance, and updates.","This may not be a popular opinion, but I think you could be looking at this wrong. You are correct--33k is low for dev'ing an application to meet those requirements. As a developer, that is generally our default perspective; but we are also software solution experts. Try looking at it from that approach.Could you provide a 'customized' solution for 5k? What the client is asking for isn't anything new, quite the contrary. Look for a COTS solution with a white label option. 5k would then go towards the purchase, customization and configuration...which all of a sudden becomes a lot more reasonable, much faster, and possibly more profitable (profit vs time spent).This may not pan out, but from your client's perspective, this is probably the smartest solution for their business. If I was in their shoes, I'd 100% look into customized COTS before considering 33k from scratch dev.","You should not take on this project. If the customer has no experience working with devs and unrealistic expectations, my experience tells me this will not pan out good for you. Sorry for the negativity 😌","How do you fixed time guys manage to make this work when its like impossible to estimate a completion time?","You say “No”. That simple.This guy will be a major PITA through the entire project. Walk away.","No UI design?Frontend + Android and IoSBackend + handling invoices + emails35k and 4 months deadline, realisticly 2.5-3 months of work.","Skip, 5k USD is too low even according to the development costs from india.😅","I'm sure it's doable for 5k, but as for the quality..","I would run. You ain’t gonna win this one. But… if you want to stick it out and see where things go you are going to have give the client a fully itemized schedule with deadlines and deliverables. With a lot of padding in the time estimates. Because right now you are essentially selling “a website/system” for $X amount of money. In their head it’s one thing for a seemingly large amount of money. They need to understand that “the thing” Is full of details. Lots and lots of details. And each and every one of those details needs to be carefully considered, planned, executed and tested. It’s a big job. And your offer might even be a bit low to be honest.","Mmm look LL yjxa","Option 1 : dear client thank you for your time and trust, I thinl you don't have the maturity for this project to succeed. Find someone else who can do it for you at 5k.Option 2: dear client, let me introduce e you to bubble. It's a no code tool that you can use to build any web app. I'll you play with it and then see if you manage to do anything decent within the next 2years.Regards.","Just skimming your list of features, it’s not even feasible for what you quoted imo. You should propose he finds a way to get this functionality by using some off the shelf stuff, hell you can even propose that you’ll help him wire it up for $5k. That should be enough to make something like that worthwhile for you.","I can begin in tomorow","Don’t try to convince him lol. He’s lowballing you, which is just disrespectful. He’s going to be a nightmare of a client","Build it as a service and resell to other customers at 5k or whatever per year. He may not be right about the initial cost to you but you are competing with existing SAAS offerings where 33k could go pretty far for an already established solution. Alternatively charge him the 5k to set up his company in an existing billing system. Unless his billing requirements are really unique there is no real benefit to him in paying the cost for custom development. If it is that unique you need to sell your solution on those merits.","5k shouldn’t even get you out of the planning phase.Honestly, mate, if you don’t have this kind of business sense right now, it might be worth exploring a non-freelance option if possible.How else are you protecting yourself? Do you actually have a registered business? Insurance?","Laugh. Move on.","What can i write back to him to make him understand it would be impossible at 5k? This is hard to explain to him. It's gonna be easier for him to understand after he pays 5k+ and loses a year and half to end up with a worthless app which does nothing that he wants. It's likely after that experience he will be an even more difficult client to deal with.","Tell him to kick rocks and find some chump to do it for $5000 whilst you do work that is worth your time.He'll end up with a website that doesn't work, you'll end up with customers who appreciate your work.","Build him a nice little excel spreadsheet.","It might not really help with such a huge difference, but you can give him a revised proposal for something that fits in his budget, that shows what can be done for 5k, and offer that instead.I do that with my customers (web and non-web businesses). I listen to what they want, give them the estimate, and if it is above budget, start cutting things out, or downgrading some things.I am honest about what I think won't matter if it is cut or downgraded - like \"you said you wanted this feature / or this level quality materials, and that is what I estimated for, but in my experience you don't really need that. You will never miss it, so let's leave it out or downgrade.\" Offer less expensive alternatives trying to show that you are working to bring it down to an acceptable level for both of you, but you cannot simply give them what they initially asked for and pay the difference out of your pocket.","Tell them to hire Devin lol","A freelance friend once told me if you want fast food service than go get fast food but if you want fine dining that is my price","Run","Classic beer money for champagne job, walk away or get an off the shelf solution and customise it rather than build from the ground up, there are a lot of tools that are out there, probably open source, that can be installed set up and a b it of custom code or customisation could get you most of the way there","$110 per hour?Are you a team or a solo dev?How can I make this kind of money 😅","Pretty unsalvageable at this point. In the future, you can avoid this by proving for price expectations up-front.","5k ? wow .Sorry if me also cannot .","I'm sure he can ultimately get it built for $5k, but he's not going to like it.","Create a backlog and prioritise it. Get through 5K’s worth of work.","5k to read the requirements listed as too low","Like most on here I’d say you’re out of his price range. Be cordial and let him know that unfortunately at this time you don’t offer a web app package that is more in his price range.Or, you could have tiers? Basic webapp with no frills and basic features is on price tier, the. You have a second, and then a third with everything he wants.Then, if he chooses tier 1 or 2, you can add it in the contract that any features not included in the original contract can be added with payment up front.","As a developer you need to create your own basic system. Which already has invoices, clients and login and rights.now adding on to that you should be able to do it for 5k. if you start each time from scratch you make your client pay for things that could have been made already.So you totally put your self outside the market.You can also look at existing open source software and add on to that.","I would do it for 5K","ChatGTP: When responding to a client's counteroffer that significantly undervalues the cost and effort required to develop a custom billing tool, it's important to communicate the value of your work, the complexity of the project, and the discrepancy between their budget and the actual cost in a respectful and clear manner. Here is a suggested response you could tailor to your situation:Dear [Client's Name],Thank you for your response and for considering our proposal for the development of your custom billing tool. We understand that budgeting for such projects is a significant consideration for your business, and we appreciate your perspective on the cost.However, after reviewing your counteroffer of $5,000, we feel it is essential to clarify the scope and complexity of the project, along with the resources required to deliver a tool that meets your needs and expectations.Our initial estimate of $33,000, based on 300 hours of development work at $110 per hour, is grounded in a detailed analysis of the following factors:Custom Development: The process involves building a bespoke solution tailored to your specific business requirements, which includes multiple stages such as planning, design, development, testing, and deployment.Quality and Scalability: To ensure the tool is reliable, user-friendly, and scalable, it necessitates the use of modern technologies and frameworks, along with thorough testing.Expertise: The project requires a team of experienced developers, designers, and QA specialists who can guarantee the delivery of a high-quality product.Support and Maintenance: Our estimate also accounts for initial support and maintenance post-launch to address any potential issues and ensure smooth operation.We understand that the difference between our estimate and your budget expectation is significant. However, the investment in a custom billing tool is not merely an expense but a valuable asset to your business that streamlines operations, enhances efficiency, and provides a foundation for future growth.That said, we are more than willing to explore options that could bring the project closer to your budget, without compromising on the essential features and quality. This could include phasing the project, prioritizing key functionalities for initial development, or exploring alternative solutions within your budget range.We are committed to working with you to find a viable path forward and would welcome the opportunity to discuss this further. Your business success is our priority, and we believe that investing in the right technology is a step towards that goal.Thank you for considering our perspective. We look forward to your thoughts and hope to continue this conversation.Sincerely,[Your Name][Your Position][Your Contact Information]"],"points":1273},{"text":["Thinking about moving 2 projects to a VPS, looking for advice, gotchas, etc.","Dude you are getting reamed. Learn Docker and move to DigitalO or Hetzner.","There's a million ways to split up your services.A managed db is always going to cost more.But for your current cost, $115mo, that'd buy a pretty killer cloud setup on something like digital ocean. With plenty of room for your db service.On the frontend, A load balancer and a few small boxes should be all you need for that traffic. Could even just consider lambdas for the frontend.The thing you'll want skill in is containerization with docker/docker compose.The cool thing about your own vps, it can do anything and be as flexible as you want while costing fractions of the managed service.The bad thing, you have to manage it.Honestly, I'm not sure ppl understand just how easy it is to spin up a production ready db with docker on a $5 box. Digital ocean has a backup service.Getting your firewalls and all that setup aside, once you're through the setup phase, it just works.One things for sure, you're going to need to be comfortable with bash, makefile, docker, and/maybe k8s. And it isn't for the faint of heart. Particularly if it's a real app of any size.Managed services offer alot more assurance--for a price.","Https://hostinger.comAffordable, scalable, fully controlled by you and you alone if you want. I have a VPS and upgraded debian to 11 without issues.","Docker seems like the way to go in your case. I run some with simply nginx as reverse proxy/static file host and pass requests to appropriate services but they are single binaries.You might consider separate instance just for db since that's usually the bottleneck."],"points":6},{"text":["If my work laptop isn't monitored (MacBook with no profile or MDM on it) why shouldn't I use it for basic personal use?","I can almost guarantee using company property for anything other than work is against policy. That said will they care or even notice? Probably not. But it's up to you whether it's worth the risk.Personally I can't imagine not having my own machine. But I do personal projects and game. But also if I ever get laid off again I don't want to be suddenly shopping for a PC","Because you'll think about work in your freetime","If you get let go they can take the laptop back immediately. You won't always have a chance to backup or cleanup before turning it in.","My only recommendation is that you create a separate account on the computer.That way if you install a compromised dependency, etc your work account is a bit safer. For example, it won’t have access to any secret environment vars or keys you might have for work.It also helps keeping applications data separate. I definitely wouldn’t mix personal and work use in the same account.","I had the same question and just asked my employer","I would if it’s not MDM’d 🤷‍♂️","I know of a lady at a company who was fired for letting their family member study on their work laptop. If something is against policy, you can be fired for it. Rather ask for permission.","Be aware that anything you do using your laptop, the company could be able to claim ownership of if they find out.So, for example, if they find out you're developing software (unrelated to work, but using your work laptop), they could claim the IP as theirs, as you used company resources to create it.This is dependent on your company's policy, or possibly your location if your company doesn't address this in a policy. You likely signed some sort of document when you started working that outlined this.","Safe bet: assume it's monitored. Be paranoid.Even if it is not, recognize that you are using company property for personal use, which is presumably against company policy. Only you can determine how much you value your job and can weigh the risk of losing it against whatever benefit you gain from using it in this way. Part of the risk is also the knowledge that, whether or not you might get caught, you're doing something wrong.I just want to use it for ObsidianDoes the company you work for employ more than 2 people? The same calculus applies here: whether or not you're caught, you're using Obsidian against the license you're bound by.","What is your web development question?"],"points":44},{"text":["I Made a Documentation Creator That Hosts your Document","Some initial issues:Semantic structure matters, for many reasons.Accessibility, using aria-labels.Form input types missing, useful for browser autocomplete. See MDN.The sidebar content in the documentation page is cutoff and no resizing of the view brings it in view. Likely a CSS issue.Sign-up Password validation is broken. This is the password I tried to use: AV5cQ7!rqpKrGY","Sounds pretty cool man","Note: You can use it on mobile but it’s best used on desktop!"],"points":8},{"text":["I built my very first production site","Throwback to 1999 when loadinh images took patience lol","Use webp for images, and fix your offset issues on the front page. Also add a fake last purchased item.","There is overflow on mobile caused by the images.","How big are those images bro??","OH! Your page transferred 86.5 MB on loading. That is HUUUGE. Never seen such a big website before.Your images are up to nearly 12 MB in size. You do not want to print that images on a billboard here right? Compress them down to about 250 KB.Keep the total size of the page < 5 MB if possible","The about page is a tad wonky. On mobile there needs to be padding as the text is edge to edge and the bottom navs obscure the text","Looks really nice, especially for a first site! Horiz scroll issue on the homepage and image sizes, but apart from that, good job dude!","I think you should consider making the login prompt when you click on add to card appear when you checkout or make it a modal. Just my $.02","takes a very long time to load","mailing_list[email] input contains two class attributes.","For a first site, great work!","This is great! What did you do (or what's your background) to get enough experience to put this together? I'm starting on learning my way to putting together a personal website/ portfolio, but I think I'm a long way away starting out self taught.If UX/UI feedback is helpful: I'm in safari, and if I navigate away from your website, it takes about 4-5 seconds to load back up from blank. Other than that, the website loads pretty snappy! Some images load a split (split) second after the rest of the page, but like ... that's fine? And the names of the artistic pieces are great. Nice job!","Everything looks great. Load time took like 30 seconds for the images though. Gonna have to compress those suckers and resize them.","Aside from image size, as some have mentioned, I don't know how Pheonix and Elixer work but I am guessing just run all the images though something to shrink their file size first, and upload the web optimized ones instead of the originals. If you can control the image that goes in the thumbnail section you can make smaller ones for those too.When I try to add something to the cart, instead of an \"Error!\" message, make a nicer message, not red, that says something more like \"Thank you! You will need to register an account to save items in a cart. [link to register]\"Also, I would put the \"spend a night with my art\" somewhere in the main page as well, not just in the bottom footer. The only reason I looked there was because i was evaluating the site, but as as regular user I might not look.You can say something like \"see how they can look in your home\" (I am not an art marketer, obviously) and that would be good to promote the art and the AirB&B.Also, it is not bad to add some images to the recently sold section. If they are sold even though not from the website, it is not a lie.","The menu expanding and shifting down the content of the page is a little wonky. I assume it’s because you’re using LiveView and it’s simple to change a state to expanded_menu = true or something like that. Using JS in LiveView with JS hooks is fairly easy and simple.","I’m always proud of new devs throwing their work out to the interwebs. Just came to say well done! Happy coding!","What did u use for the e-commerce side of things?","The menu drop-down should close when you click off it."],"points":68},{"text":["Fantasy Author Website - Andrea Cerasoni"],"points":0},{"text":["Looking for feedback","It depends completely on scope and complexity, and you haven't laid that out here.I'm curious why you went with a random freelancer instead of an agency? Especially when you're paying almost the same.And for big projects, I would discuss expected milestones with the developer and come up with a compensation structure based on that. There are way too many scummy freelancers who just walk when they're paid upfront.","Read these Outsourcing Rules. 👇 1. Never give contract to American Agencies (unless you've extra money & you want reliable work on time)👇 2. Never give contract to any 3rd World Agency (unless you're fine with project delays | PRO: they might even deliver quality product but delays will be a constant.)👇 3. Never give contract to 3rd World Freelancers/Contractors (unless you're comfortable with vetting process, everyone is a freelancer back there)👇 4. Never give contract to a European Dev (they're mostly lazy) and very bad in terms of providing support on Products they deliver. Plus time delays is also a factor.👇 5. Never give contract to a European Agency (they are same as Indian Agencies just 4x more expensive)Very simple don't hire Western Agencies. It's guaranteed they'll charge very high. Most of them aren't even better than 3rd World Agencies which might deliver quality work but with heavy delays.Your project isn't even complex it's just a few APIs and I'm pretty sure you ain't expecting 30K+ traffic. But you'd find Western Devs/Agencies over hyping the importance for quality. I understand quality is required but most world runs on average software. You ain't building Netflix, quality stuff is overkill here but Western Devs usually use this excuse to milk money.Everything has its pros and cons. Save it up, it will help you ahead."],"points":1}]