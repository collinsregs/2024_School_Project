[{"text":["Tailwind is actually pretty great to use?","I agree, tailwindcss is awesome. I don't even remember when the last time I wrote raw css. After learning tailwindcss, I used it in all of my web projects."],"points":0},{"text":["Having a hard time getting a new job, please critique my resume/portfolio"],"points":0},{"text":["what are your opinions of this?","Looks like something one of my junior devs would send me, meanwhile I'm just making this face the whole time they're talking about it: üò¨","How about you start coding and just accept the fact that whatever plans you make now are complete guesses at best and flat fucking wrong at worst so you are just gonna have to be ready to rewrite and rebuild when you need to but at least at that point hypothetically you'll actually have something to rewrite instead of an idea and an over-thought tech stack?","ok seems like it finally got posted. So yeah im looking for advice, tips and thoughts on my tech stack im using for my startup. Let me know if its good or bad","I don't immediately see what any of the tech in the stack you mentioned has anything to do with AI. Am I missing something?"],"points":15},{"text":["Sussing out an Experienced UX Designer","Is Behance a place where people look for UX designers? That seems like a place for graphic designers and creative directors. UX is about goals - and isn‚Äôt necessarily visual. I‚Äôd be looking at my network and case studies that show process, research, iteration and outcomes. UX is glorified ‚Äúthinking‚Äù (which seems to be rare these days). RIPP/S do not contact me or you‚Äôll be reported‚Ä¶"],"points":0},{"text":["Rss link for a youtube channel","https://www.youtube.com/feeds/videos.xml?channel_id=<CHANNEL_ID>If you're on Android, you can download Firefox mobile and the \"View Page Source\" extension."],"points":1},{"text":["The New Auth Flow for PPResume"],"points":0},{"text":["Tailwind CSS+UI or Ant Design for an enterprise CMS built from scratch?","I would recommend¬†Material-UI¬†and¬†Ant Design"],"points":0},{"text":["How to host my site?"],"points":0},{"text":["CSS Media Query for Scripting Support","In other words:The blog post discusses the introduction of CSS Media Query for scripting support in Chrome 120, enabling the detection of scripting language availability and adapting page content and styles accordingly. It details three values (none, initial-only, enabled) defining scripting support levels, providing practical examples of how to implement these in HTML and CSS. The feature's availability across different browsers, including Firefox, Safari, and upcoming support in Microsoft Edge and Opera, is also highlighted. The post emphasizes the usefulness of this feature for enhancing user experience, especially for those with JavaScript disabled, and concludes with a note on the <noscript> tag's different purpose compared to the new media query.If you don't like the summary, just downvote and I'll try to delete the comment eventually üëç"],"points":0},{"text":["Verifying Identities while using AWS Simple Email Service","If you're using Namecheap hosting for your website you will need to enter these inside cPanel.If your website is hosted elsewhere then you should either enter these settings inside the domain administration panel (as in your screenshot) or via your website hosting provider (this depends on where your website is hosted and what specific DNS settings were set)."],"points":0},{"text":["Best way to store data in MongoDB"],"points":0},{"text":["OWA‚Äôs Review of Apple‚Äôs DMA Compliance Proposal for the Web - Open Web Advocacy","OWA spent the weekend reviewing Apple‚Äôs Digital Markets Act compliance proposal to work out if Apple will finally let browsers and Web Apps compete fairly?Unfortunately so far it appears that the answer is no!Let's Dig in!","I thought that DMA was direct memory access for a second. We have too many overloaded acronyms."],"points":3},{"text":["Building sites in-place","This is a terrible pipeline procedure in 2024 and it was a bad idea in 2005.I still don‚Äôt quite understand why on earth you‚Äôd want to run a dev version on the production box under a subdirectory. Unless you‚Äôre creating a subdomain on the production box and pointing it at another directory. Seems batshit no matter how you slice it.It sounds to me like you‚Äôre really really out of date and cheap to boot in that you don‚Äôt want a dev server and don‚Äôt know how to use modern deployment processes.I pray for you and your client‚Äôs sites.","i have seen some web agency which is using userdir module. agency forgot to change permission on an unused user home dir. others could access to http://11.111.111.111/\\~example/. this caused lots of traffic and server loadsi recommend using subdomain for old site"],"points":3},{"text":["Any reason not to validate the format of login inputs (email, password) on the front-end?","Front end validates for a better user experience. Back end validates for security. Do both.","I think people are missing your actual question. No, there is no reason to validate the password format for login on the frontend. Do it for registration but pointless to do it for login.People should be using password managers so the password should be correct thus the format will be correct. Even if the user doesn't use a password manager and makes a typo chances are it would still pass the format validation so you are making a request to the server to check password anyway. A registered user isn't going to type their password so poorly that it fails the general format validation.","We do. Our form validation lib is used on the server and client. It does the basic checks you mentioned.It saves a network request.","For front-end, I use the native form validations. My \"real validation\" happen on the server, just because you can't fully trust client-side validation.","Since nobody read your actual question, I offer this opinion:There's no need to validate front end login form aside from anything that would be a security risk. Format constraints are dictated during the sign up process. Either the supplied info matches, or it doesn't.","Never ever trust client-side. Ever. Validate the devil out of it. Your ui/ux person should do designs / flowcharts specifically for login. Failing that, implement strict validation, and great session management.","Servers always validate, front-end validation is just a nice to have UX feature","yes do validation in both places","There is no reason not to."],"points":78},{"text":["My client asked for a protocol for what to do if I die?","‚ÄúIf I‚Äôm dead, you guys have been dead for months‚Äù","A little grim, but unfortunately I get it. The \"hit by bus\" factor can leave a company completely fucked if they don't plan for it.Only thing I'd say you have to do is make sure they own the actual domain name. Beyond that, if they're really concerned then they should be the ones hosting the site as well.","Yes this is absolutely a thing, it's called the bus factor (what happens if this person gets hit by a bus?).It's obviously extremely unlikely that it ever comes into play, but if your client is asking for it, it's probably a good thing to account for.In my opinion, this would be nothing more than all root access passwords, not a migration guide or onboarding document. You could set something up in a will I guess? I have no idea what I'm talking about... Lol","You should have a disaster recovery plan, just make sure it's detailed enough that they can hand it to a different company and recover if necessary.","The folks chiming in with jokes are really highlighting the amateur nature of this sub compared to other software engineering communities on Reddit.Business continuity plans are a real thing. This is actually a great thing for a client to bring up, it shows a level of seriousness to the operations that is so often hard to find. You want to know how to make more money freelancing? Find clients who value things like this and charge them appropriately.Additional terms to look up are ‚Äúdata recovery agent‚Äù and ‚Äúsource code escrow‚Äù - a recovery agent is a person who is authorized, upon verification of your death or inavailability, to decrypt or release things like source code, and other documentation to another party.If the client does not wish to maintain ownership of their own services directly, escrow services can still provide a transition path to mitigate the risk of their operations being interrupted because you cannot support them.","This is why I typically don't host things for clients. I'll setup, manage, and maintain, but I want them to have full access to their hosting account and any other 3rd party vendor sites.Typically what I ask clients to do (or do on their behalf) is setup a new email address, preferably at their domain (even something old school like [webmaster@domain.com](mailto:webmaster@domain.com)), and then use that account as the master account for all hosting or related account.As long as you have access to it as the web developer, and they have access to it, that means it's just one account for them to hand over to someone to have access to everything.Aside from that you can even leave some documentation pinned in that email inbox about the general setup, i.e. Web Hosting with XYZ, WordPress Theme whatever, Accounts for plugins and licences, Cloudflare, DNS, Registrar, whatever.If everything runs through a single account, and the client has access to everything and you have access to everything, then there is minimal risk of you dying and the client not being able to pick up the pieces and hand it over to some one half competent.","‚ÄúUpon my death, all of my belongings shall transfer to the man or animal who has killed me.‚Äù - Ron Swanson","I'd have the repo under their company git - and all domain and hosting stuff under their credit card. I'd just be a contributor and pay for my seats (well - have them pay for my seats). Then the README should say everything a new contributor needs to know to get going. The env file needs to be in the client google drive or somewhere. Any miro/lucid/figma etc should all be in their name with you invited. All of the passwords should be in their 1password or bitwaden or whatever they use. All google docs should be under their company name. You should be able to just fake your own death at any time.","Hey I'm running my own little thing too, and I'm constantly thinking about that. Right now I'm running backups every night, and offer my clients the option to receive a copy of the backup each day. Backup that they could then re-host on any service pretty easily. You know what? NOT ONE customer took the deal. Even if I do it for free! They all want a plan but as soon as they need to do something or understand whatever, they all go like \"not my problem\". And some of them are pretty high traffic like 80% of their revenue at least comes from the website.I keep telling myself I have to document and set up my disaster recovery plan but it's not really motivating when nobody cares. Guess I'm just waiting for at least one serious client to actually ask for one.","I produce a disaster recovery document detailing how a client can access their source code and assets should I get 'hit by a bus'.","‚ÄúFor 10k extra I guarantee this will keep working forever after I die‚Äù.","It doesn't have to be this grim. People leave relationships for all kinds of reasons. It's more like \"If I'm not around for any reason\". It actually pisses me off when companies expect me to be around forever, because I'm not planning on that! I will leave at some point and so I always try to do documentation and make the code readable for the next guy. So I'm not offended by this question at all. If you want to be a jerk and never plan for it then you can leave companies high and dry. Job security is the goal for a lot of people. I feel too much guilt for this kind of thing.","Uhmmm are you hosting ? We need details","It‚Äôs called a business continuity plan‚Ä¶I write for a company who can assist here help you figure that out.Check out prozesstec.com and if you are interested email elisabeth@prozesstec.com. She is the process person in that group and great and what she does.","You can setup dead man switches:You can use the dead man switch in for example a Gmail account or similar to send emails or release control to someone after a month or longer of inaction so you could for example save credentials and instructions in there for them.I setup a vps that if I don't touch a file at least once a month it sends instructions and ssh credentials to the necessary people to relinquish their backups, some files in a shared drive and accesses to their resources if I die. It's like 150 lines of python, a cron job and some conf files. In this case it sends them the URL for their Git repo (they should already have) and a shared control on their vps's (each customer has a vps) so they can transfer out and so on.Important I do not and I never owned their domains. Manage the DNS sure but they must have their account and own the billing.It's basic but I like it and it makes me feel important as I have dead man switches on my head.I also have some similar script to delete all my porn if I don't use my PC for a month.","this is what I dont understand about the space were in.why not create the hosting account for them, and then give them the password and what not?I don't host my clients sites because I could never get around the concept of having to care for it to a T after I get done building it, that's someone else's job and these people dont pay enough for me to worry about it","I have Redmine installed on a hosted server. My clients have access to their project with all relevant documentation. Passwords are stored in a shared password manager. If I croak they have everything they need to keep running without skipping a beat. I also have a kanban board setup so the next dev could slide right in and see the status of work and the backlog.","bruhhh!","There are nicer ways to put it... but as the one in full control of business critical systems... my boss called it the \"hit by a bus report\".The \"Hit By A Bus Report\" included all critical logins and semi-tech descriptions of what the major parts were, how they worked together, and how to login to and/or edit and maintain each. In addition, each major platform, language, framework, plugin and other things were named so a new tech hire would have a chance if I suddenly 100% stopped being available.Anyway, don't take it so literally... they don't WANT you to die... :)","Github repo and full import/export functionality in the API (a way to copy over literally everything).","We are a small company so there is more then one of us who has access to it all which helps.Large companies have their own domains which is the important bit!Our reseller hosting comes with ability to give clients their own logins to manage hosting and domain names, if we had a similar request id give clients the logins to those so their new dev can login and get what they need","Tell them to keep paying your family your wages for the next 20 years","‚ÄúBetter make sure that doesn‚Äôt happen,‚Äù","Absolutely. Any legitimate company should have this for their clients. My clients can move to another provider at any time. I keep great notes and have everything packaged up nicely for them. It's a matter of professionalism.","I require that all of my clients \"own\" their own accounts (domain registration, hosting, et al) to which they grant me access.If something happens to me, they don't lose access to anything."],"points":390},{"text":["Post surface-level CRUD: What are the big challenges?","Release notesFeature flagsAccount EmailsError LoggingCode rot / duplication (linting)Feature deprecationAnalyticsBuild reportsCost reportsDocumentationSecrets ManagementTranslations (the data, not the implementation)Regional conventions, eg. number and date formatting.and my favourite... metric to freedom units and back."],"points":1},{"text":["Need to build a home inspection web app.","This is a pretty straightforward app. I've built one that does auto-insurance adjusters. Same exact workflow. New projects, uploads, markup, annotate and draw on image, generate a PDF and capture a signature.. This is all doable in pretty much any modern stack.Fabric.JS for the annotationPDFlib/Puppeteer for the PDF"],"points":1},{"text":["Differences between a great web-developer and a bad one?","Good engineers write code, great engineers know why. Amazing engineers plan in advance. The best engineers see problems you‚Äôd never have thought about months or years in advance, and take steps ahead of time.None of these things require passion or specific fundamentals ‚Äî experience is very helpful, but it mostly comes down to being the kind of person who always wants to know ‚Äúwhy‚Äù.Also: if you want to go fast, go on your own. If you want to go far, go with company. The best engineers bring people along with them, and make everyone around them more effective.","In short, what separates them is the ability to solve problems and provide value.You don't need someone that has superior grasp of computer science, is passionate about development or spent the last 40 years working on computers.","From a \"boots on the ground individual programmer\" perspective, it's about consistency and discipline. You show up, do the work, and there's minimal \"off\" days (meaning you're consistently putting in a respectable amount of effort). That might sound \"too simple\", and it kind of is, but I guarantee you'd be surprised at the number of people that don't even meet this.From a more \"well rounded team member\" perspective, it's really about confidence and communication. Your ego doesn't stop you from learning from (or teaching) other people, you get what you need from other people quickly because you're easy to work with, you're given a high level of trust that lets you push back on various things that end up being liabilities to you or the team, etc. (a lot of this requires being in a very good work environment, but that's a separate discussion)You check off both of those, you are an absolute unit of a developer. There's also \"academic genius types\", but for the vast majority of business environments, it's a waste of talent.","Good web developers factor in the usability of the website and not just bells & whistles for sake of it","Generally the difference isn't in the actual code quality, it's all the other traits. Good engineers can write really great code and get tasks done effectively. Great engineers can not only do this, but lead and communicate to a team to get more done with this same quality + understand why they're doing what they're doing. I hope this makes sense.","Spidey senses.","The one that just does a job exactly as asked blindly VS the one that checks the request, asks questions, ensures the outcome is the best and asks the question \"What are you trying to achieve\" and then does it in the best scalable way, tests it and deploys it.I can see others basically touching on the same ethos in the thread.Same with something from stackoverflow and like. We all do not know everything so if you go there to find something a bad one will copy and paste. If it works they move on, if it does not work they just grab the next code.A good one has the understanding, even if they are skimming they are checking for the right answers, they understand the guts of the code, process and what they want to achieve and are just looking for the right components. Even if there is a chunk of code that is correct they very well may not use it verbatim but get what they need to fix or improve their solution.","Passion, practice and prioritization are the top 3 traits","bad engineers write a lot of code.good engineers read a lot of code, and know how to write a small amount of code that is easy to readand the rest is how quickly can you spit out code and how many bugs do you make. medium developers are good at this part.","A good web developer is different than a good engineer, especially SWE. The two can be different.I know some good web developers with impressive body of work. Big clients, large projects, and a good portfolio.It does not make them good engineers. Often, we hire them in a traditional SWE engineering team and they can't produce. They can't work with a team (don't know git) and don't fit well under an organizational structure of Agile scrum. They can produce great websites but are very poor engineers.Likewise, there are some good engineers who are poor web developers.Some of the good web developers are self-taught. Pick them up by the bootstraps and can generally work autonomously. They just are not a fit for an engineering team that requires good code conventions, structure, long term maintainability,etc.","How does a solid web-developer stand out, from the bad ones?By being adaptable and predict and prevent problems down the line. They're thinking many steps ahead without sacrificing productivity now.Do great developers have a better grasp in computer science fundamentals ?Usually, but not necessarily from formal education.Is it the passion that makes them x10 developers?It helps.Or is it just simple time investment that perfect their craft?I would argue that it takes some level of passion to put in the time, especially unpaid. It may develop into \"just a job\" later in life but a young developer should have some passion for the work.","Great web developers know their job is to build a product and not write code.","I feel like I'm going to get downvoted for this but...I've lead a lot of large dev teams over the years, though not in one of the big tech firms. Great devs are generally speaking quite a bit smarter than other devs. You can spot it in your first meeting. It shows in soft skills like critical thinking, creative problem solving, confidence, and broad understanding of peer specializations. Pretty much everyone who fits this profile ends up in the valley in two years at one of those big firms. Well... Let's say that was true pre-covid. They're probably laid off as much as not now.A bad one? Everyone else just needs to pay attention, have passion, and a willingness to learn and experiment. Throw a dart in a room, the bad one won't duck.","Conscientiousness. Above all provide business value, get work done, care about what you are doing, care about being good at it, and leave things better than you found them.Leadership. Supports and trains others, constantly offers help and keeps the team on track.KISS. The very best engineers write code so simple you are not sure how it could possibly work. They create projects where it is easy to find anything you are looking for, and making a change only affects the feature you are working on.","Bad web developers do the work. Great web developers solve the problem and set you up to avoid layer ones.For example, I had to work out how to validate payloads for our FHIR server. A very bad dev would have written a server with all of the validations. A proposed solution was to do it all inside a (Camel) workflow engine that non-dev professional service teams could manage later. We found a library and server designed by HL7, which sets the FHIR API standard, just to validate inputs, which could be called in a step in our workflows.I found that the server we use for our data-store implements the new pre-validation of the latest version of the FHIR standard, the license costs $0 extra for more scaling, and its underlying DB uses caching that would kill the load of looking up custom validation requirement. That means no extra service for sysadmins to set up or manage, no duplication of effort for setting up custom requirements, and no delays. I like to think I'm pretty good.","Bad developers rely on external libraries, packages, frameworks, etc, but don't actually have the skills to build something from scratch..Great developers may use those tools, but when it comes down to it, they can build sites from scratch using vanilla languages when needed","Great developers can talk to people that aren't developers and explain difficult technical concepts in terms that the other person can understand.Great developers also use past experience to understand a current client's needs, even if the client doesn't understand themselves. Plus, they won't do stupid shit just because a client told them to in order to save money.Great developers also protect their clients from bad decisions.It isn't always about the code that you write, but as some have already said, it's why you write the code."],"points":68},{"text":["I am so dumb. I just don't understand how I get my web app [that currently works great in Flask + Ngrok] deployed and working in Firebase.","So the idea is basically:Write a Dockerfile that bundles your app's build artifacts along with the necessary base image required to run the app. See here for example. Be sure the docker image does not contain any secrets (Firebase api keys, etc.). These should be configured on the host that runs your app, not inside the docker image.Publish the docker image to a container registry. You can use docker hub if you have an account. Github has a container registry (not sure if free vs. paid), and many other providers offer one as well, typically intended for use with their hosting services.Pick a host that offers a reasonable configuration (CPU, MEM, etc.) and supports running docker containers. Google has an offering here but I'm not sure what it's called. Microsoft has Azure container apps, and AWS has a similar offering (App Runner, I think?).Configure the app on your host to pull the image published in step 2 and add any environment variables for things like API keys, etc. Typically a docker compose .yml file is used for this.Update your domain DNS to point to the public IP/CNAME info provided by your app host.Think of your docker image as a prepackaged server/app environment with a fixed set of dependencies. Container images can usually run on any container host, regardless of platform (except for Arm vs. x64, and similar platform constraints).Also, do NOT use ngrok as a front end proxy for your real app in production. I understand it fits the use case now, but once you've moved to a proper host, eliminate the ngrok proxy step from the equation."],"points":0},{"text":["CSS trick: transition from height 0 to auto!","TL;DR: Use Grid to set the rows from 0fr to 1fr..accordion-body {    display: grid;     grid-template-rows: 0fr;    transition: 250ms grid-template-rows ease;}.accordion:hover .accordion-body {    grid-template-rows: 1fr;}.accordion-body > div {    overflow: hidden;}","Nice! I found another fun side-effect of grid the other day. You know when you're making something like tabs and all the tab panes need to stack in the same position? Chuck all those tabs in the same grid-template area. The area grows to be the height of the largest child.","Finally, a solution to this that doesn't feel like a complete hack","Beautiful. Elegant.","This is a surprisingly significant QOL improvement for me. Thank you!","Clever!","OP is doing God's work..","...this is actually pretty damn cool","I'm a bit in shock that I haven't encountered this trick in 8 years. Thank you for this.","Nice!"],"points":68},{"text":["Any libraries to convert from a grayscale depth image to an image colored with a colormap?","You can do this in canvas, its super straightforward. (thats probably why no libraries) So you want to go from greyscale to a predefined colourmap... this could be fun...¬†post a few more greyscale depth maps please. or make them available via share... Also what size are you looking to work at?"],"points":0},{"text":["I personally feel that vanilla CSS unique in how overly complicated it is. Failing as a language in simple proyects and advanced ones.","CSS is ridiculously simple. Not sure what you're having trouble with, but you probably need to review the basics.","what did i just read","Centering a div is just a meme","Skill issue","Thats coz html and css are not designed to be generated by js during runtime. JS is meant to augment the dom. It‚Äôs a completely different paradigmBefore the js avalanche, we could design completely different designs with the same html format but different css filesJust because something is OOP doesn‚Äôt mean it‚Äôs bad. It a perfectly valid paradigm that we just need to use properly.Besides, we now have @layers, nesting, animation apis and so much more","Okay, lets say css is trash, light a dumpster and 3 pointer CSSOM straight in. Flames.Now what? How do you convey styling information? Text? Objects? Arrays?","You probably have not yet had your ‚ÄòAha!‚Äô moment where it all clicks with your worldview. CSS has had a slow but steady path to bring the features that we now take for granted. Years of discussion. Probably a good million manhours or more. Maybe someone can research that further. I dunno.The fact is, with Flex, Grid, psuedo operators and variables, CSS is now relatively easy to use. Way better than 10 years ago.","It is indeed a skill issue. CSS is so much simpler than learning a programming language. If you can learn JavaScript (or any other language) how can you not learn css? No offense, genuine question. I don‚Äôt think I‚Äôve had to google anything about css in a long time, but I still google the most basic syntax and behavior refreshers for JavaScript","Judging by the presented English language skills, I'm guessing languages aren't really your thing."],"points":47},{"text":["LAMP Stack Dictionary Application","it will depend on the dictionary data format, it is good for u to try to convert dictionary data to sql insert querymake sure the data type is json, txt, or another type"],"points":1},{"text":["How to Easily Migrate Website Hosts? Switching from Google Sites","Yes it is possible. Just the new hosting than simply export your content setup the new site and recreate the pages and content after that recognizing the new SEO setting and than update the domain setting. If you need any help you can feel free to contact."],"points":0},{"text":["How do you politely tell a client that their DIY approach is hurting them?","Pull up websites of her competitors and show them to her side by side.Or spend a couple bucks on some cheap 5 second user tests where you simple ask users to rate the trustworthiness of the brand based on the visual look of the site, and then compare it with results from her competitors as well.If data doesn't change her mind, she's too attached to her own work and no amount of reasoning with her will change that.","I‚Äôm not the best person to answer this question, but curiosity is killing me. What did she hire you for if not to do her business website?","I'm going to flip this around. Why do you think it's hurting her? OK, you don't like it. I'll remind you this site exists and is highly successful.It's important for us, as professionals, to know the difference between \"I don't like this\" and \"this is bad and costing you money\". The former is a snap judgement, the latter is a conclusion you come to after reviewing analytics and sales data.Besides, most normies do not care about the same stuff we do. And, depending on the product, being too polished is a detriment.My dad worked for an economic development corp. Basically, his job was to help people start and grow a business, be it a small business or a massive corporation who was thinking of moving into a region. When he would go talk to guys on a manufacturing line or agriculture facility he'd bring his work boots and wear those instead. I asked him why since they looked all beat up and he said, \"That's the point. I've seen farmers look me up and down in a suit and then look at my boots and their entire attitude softens. My boots have seen real work and they know that. If I showed up in shiny shoes I'm just a suit, how could I possibly understand them?\"You have to know your audience, and knowing your audience takes experience and data. Unless you've built for her audience before and have seen the data you probably don't know them as well as you think you do.","So, honestly, I use to have the same opinion/viewpoint as you.But, what I have come to find out, is that 99% of the non-tech general population people out there don't really give a F what a website looks like.As long as the general public can ultimately do what they need to do (get info, buy product, book appointment, etc). They honestly don't give a F and it doesn't seem to really effect the person/company.Sure, there will be exceptions to this.But, it is going to be a hard sell to someone when they are content with whatever revenue stream their current \"crappy\" website is providing. It is hard to explain to people that they can be \"happier\" when they are already perfectly \"happy.\"I wish I were wrong. But, this is what I have ultimately realized.YMMV","Use that analogy but instead of a beat up station wagon, use a common car driven by everyone (in Australia it's a Toyota camry).¬†Also use the socratic method : do you think this website represents your brand accurately? Can we improve it? Etc¬†I doubt the website is really hurting their business. You're seeing all the flaws but she's probably right, it's good enough. But it could be better and that's a awesome for you because that's work.","Generally, you don't. But that needs some context.First, do you actually know that their website is hurting them? You personally not feeling trust or professionalism doesn't mean its tangibly hurting their business.Consider your average local restaurant. When people are looking for a place to eat, they're looking at proximity, price range, and perhaps most importantly, sentiment from previous patrons.A restaurant with stellar Yelp review and even a popular Instagram presence doesn't even technically need a website. If they have one, it could just load a PDF with a menu and hours and that would be sufficient. After establishing a likely-hood of a good meal, customers are not backing down because the website \"looks DIY.\"If your client's website is actually responsible for delivering conversions, then that's trackable. You can setup user tracking and demonstrate the behavior and start mapping out ways you're able to change user response.Given the nonchalant approach to her website, I suspect its not responsible for converting. Most of her customers might be regulars already and converting new customers is just not a priority.In other words, the website may, in fact, be \"good enough.\" You don't sell a car to someone who only needs a bike.If you still want to sell them on a new website, you have to understand their business, first. Why is the website an investment and not an expense? How is it going to make her life easier, or deliver more customers? And are you going to deliver those promises on a budget and timeline that makes sense?In short, if you want to sell to a business, think like a business and approach it like their business, not yours. When you're focused on instilling feelings of trust or professionalism, you're just telling them what's important to you.","Let me make sure I understand‚Ä¶client has website A, which you are already bidding on and/or working on. And she has a second site you‚Äôd like to bid on? If I‚Äôm understanding that correct, let work on site A speak for itself.","She understands the site is not perfect but considers it good enough.How do you know that it is not good enough? Do you know what \"enough\" is for her business? Would you be comfortable guaranteeing X% increase in sales after you redesign the site? I'm assuming the answer is no, but my point in asking is that you really do not have enough information about the market and business to know if this is worth it or not or even to quantify what it's worth. Maybe her customers don't care as much as you think. Maybe there are other areas of the business that they'd care more about if she invested in them. Maybe she's breaking even and spending money on a website would put her out of business. You really just cannot in good faith say that you know it's a good decision for her. So, instead, just offer to help and leave it to her if she wants to follow up... \"Hey, if you do want me to help out with your main site and making sure that it gets across the right branding and a good impression with customers, I'd be happy to chat about it.\"","They‚Äôre most likely attached to it and the design. It‚Äôs comfortable to them. Familiar. Probably tied to to their company identity and are afraid of leaving what they built and know for something unknown. You need to instead point out the technicals, not the aesthetics. Here‚Äôs things you can look for and mention1) page speed. Always page speed. Low page speed scores come with old outdated sites and builders. In order to improve load times, you often times need yo get off the old ecosystem the old site is on and get on something more modern and performant. This is important because not only does google rank your website based on these scores, if your site takes more than 3 seconds to load you are losing 20-30% of your traffic because the site didn‚Äôt load fast enough. That‚Äôs potential customers who didn‚Äôt have the chance to become a sale or a lead all because your site is too slow. Improve page speed scores, improve conversions.2) content strategy. If there‚Äôs not alot of content on the site, that‚Äôs a huge problem. Content is king. Content is how you rank on google. If their site is bare and empty, they need to have new sections added to create content and arrange it in an easy to read manner. That would involve ditching weebly so you can work with a blank slate and have a cohesive website in which each section leads logically into the next. The proper order goesHero Services About Featured service Gallery Extra service cards Featured service 2 Why choose us Reviews Call to action FooterThat‚Äôs the basic flow for a good website. People generally only remember the first and last part of a website. So I put the main services they do at the top and the reviews at the bottom so when someone leaves the site they remember what they do and the nice things people said about them. Positive experience. Higher likelihood they return. I put the content he subsections in the middle for ranking on google. Since they won‚Äôt remember the middle of the site anyway, I fill it with content rich sections to rank on google for those keywords. Turn a weakness into a strength. So in order to do that, we need to redo the whole website so the site flows more logically and has enough content and calls to action.3) mobile first. If their site isn‚Äôt mobile optimized or responsive, that‚Äôs a HUGE problem and is costing them ranking because google indexes their site based on the mobile site. Called mobile first indexing. If they don‚Äôt even have s mobile site, they might as well not even have one to begin with because it won‚Äôt do much for them. Almost 60% of all internet traffic is on a mobile device. So to make the website mobile responsive we need to remake the website from the ground up and build it mobile first so it loads instantly on phones and makes google happy. Can‚Äôt do that on a weekly site. It‚Äôs not built to be used that way.4) accessibility. If your site is not accessible by s screen reader you‚Äôre liable for a lawsuit thanks to the dominoes Supreme Court case. Many sites are not compliant. Especially outdated page builder sites. To truely be accessible it‚Äôs easiest to be done at the code level using aria attributes and proper code structure and semantic tags for screen readers to parse and understand and hide things from them that they don‚Äôt need to see. A weekly site doesn‚Äôt give you that kind of control and customization to properly Cater to screen readers and those accessibility widgets don‚Äôt actually protect you from lawsuits either. They have their own legal troubles because of them.That‚Äôs just off the top of my head. That should be enough to get the cogs moving in their head. I have these conversations all the time with sentimental business owners.","She is not running a web design company, she is working on her business. Unless you have tried doing her job you have absolutely no idea what her priorities are and, I guarantee you, they are not the same as yours.Learn some humility and understand that you don‚Äôt know everything and not everyone wants to win awards or spend significant sums for marginal benefit. Put yourself in her shoes and get over yourself.","TBH, why would you want to work with this client? Unless you are super strapped for money, it might be best to just let this client go.","\"not my pig, not my farm.\" You can't be responsible for every bad decision other people make.","Until I needed to make a website for my business, I took any thrash as a solid website. But when I was looking for a development company, I looked through at least 1.5 thousand websites. After this experience, I have already learned to distinguish where a really good site, and it's not even so much about the appearance (it's certainly very important), but in the convenience, like, you can get to the section of interest in two clicks, there are no cringe drop-down lists, the site does not load for a thousand years (shitty optimization). So, what I'm getting at is, if a person doesn't look at the site from a technical point of view, he'll be satisfied with any garbage.  Sometimes there is no point in arguing with customers, they are hard-headed and even if you make everything cool, but not the way they want ... Well, you'll be considered a bad performer."],"points":203},{"text":["I'm an inexperienced programmer with a website idea and I just need a rough outline of what I'll need to do","My first question is ‚Äúwhere do you get public domain or licensed images of the pages you want to display?‚Äù The text will be public domain, but the photographs will have a copyright.","Great idea. I‚Äôll have my site up in a few hours."],"points":0},{"text":["How to represent a session or state through hashed string","JSON is a single string. That‚Äôs why it exists. It‚Äôs a serialization format.Plop it into local storage.","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringifyI second localStorage or sessionStorage. Much more room than a cookie.(then to de-stringify aka parse https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)"],"points":7},{"text":["Experiences with InnerSource and design-sharing in organisations"],"points":0},{"text":["FE server characteristics for a React APP","1500 concurrent users is a donut run. Its impossible to give you hardware specs accurately... cause you might be dealing with monster queries.No i dont need more details.whomever is in charge of your server infra needs to run some benchmarks.There are many many moving parts to this. Mainly in software land.Run benchmarks. Anyone here giving you the... yeah go ahead... is kicking tyres."],"points":1},{"text":["The \"Mom Test\" in software development: asking good questions when everyone is lying to you","I thought the ‚ÄúMom Test‚Äù was whether or not my mom could use a piece of software, and every piece of software fails that test","I think you‚Äôre better off reading the book than this article if you want to learn to ask good questions (it‚Äôs only a hundred pages or so). The article is more about their product journey. No offense to the author","That is not the mom test....","Highly recommend the audio book - the author reads it himself, and he reads it like he‚Äôs talking to you, it‚Äôs really really great.","I couldn't get past the first paragraph of the article, nevermind reading the book. This is what software devs who don't actually do any meaningful dev do with their time."],"points":168},{"text":["Can't login to a website and this error happens. I added the error codes prompted on console in comments section.","Is this your project? If this is the case we'll need to see some code. preferably using a pastebin or sandbox, that reproduces the issue. The screenshot provided does not provide enough information to help debug the issue.If this is a site you visit, we cannot help. This is almost certainly a problem the site developers need to fix. Contact site support.","Subscribe to google, or find a dev."],"points":1},{"text":["random trailing semicolon only in production?","Do you have a link to the site?","I found what it was with some super sleuth deduction. Ended up being the apollo.io chrome extension"],"points":1},{"text":["How-to: Handle unsaved page changes with NextJS app router"],"points":0},{"text":["How can I make it so the pizzas are displayed as a 2x2 and the description container is on the right? Been trying to fix it for an hour (flexbox)","On the container that wraps both the pizzas and the description you put a display: flex;.To get the pizzas in a 2x2 you can put a display: grid; with grid-template-column: repeat(2, 1fr);.","I would put two pizzas each in a different div, and put them in a container div, that container div would be a flexbox with flex-direction being a column, I don't know how exactly you want the description placed but thats how i'd start.","Do it with css grid and just do two template columns. Then you wont have to add extra divs.","It's a grid layout, so... Use a grid. Three columns, two rows","html{-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;}*, *:before, *:after{-webkit-box-sizing: inherit;-moz-box-sizing: inherit;box-sizing: inherit;}@font-face {font-family: Li;src: url(\"fonts/LilitaOne-Regular.ttf\");font-weight: normal;font-style: normal;}body{margin: 0;}header{border-bottom: 5px rgb(0, 128, 0) solid;box-shadow: -1px 5px 5px rgba(0, 0, 0, 0.386);margin: 0;}nav{display: flex;justify-content: space-between;max-width: 1650px;width: 99%;margin: auto;align-items: center;}ul{list-style-type: none;}ul button{background-color: rgb(255, 255, 255);border: solid rgb(0, 128, 0) 2px;border-radius: 2px;margin-right: 3px;color: rgb(0, 128, 0);height: 30px;width: 100px;font-family: Li;}ul button:hover{background-color: rgb(0, 128, 0);color: white;cursor: pointer;}h1{text-align: center;font-family: Li;color: rgb(0, 128, 0);font-size: 70px;}span{text-decoration: underline;text-decoration-thickness: 10px;}.Ad{display: flex;flex-wrap: wrap;margin-top: 20px;margin: auto;margin-bottom: 10px;max-width: 1000px;border: solid 4px rgb(0, 128, 0);border-radius: 4px;}.pizzas{display: flex;flex-wrap: wrap;}.pizza:hover{background-color: rgb(0, 128, 0);color: rgb(255, 255, 255);cursor: pointer;}.pizza{display: flex;flex-wrap: wrap;border: solid 4px rgb(0, 128, 0);border-radius: 4px;padding: 5px;color: rgb(0, 128, 0);font-family: Li;font-size: 30px;margin: 10px;max-width: 250px;justify-content: center;}.desc{display: flex;font-family: Li;color: rgb(255, 255, 255);background-color: rgb(0, 128, 0);padding-left: 10px;padding-right: 10px;flex-direction: column;max-width: 552px;width: 100%;}.desc h2{font-size: 50px;}.desc p{font-size: 30px;}","Switch to grid for 2d layouts, your life will be better"],"points":10},{"text":["best domain sites now?","cloudflare.com (they dont make any money from their domain business) or namecheap.com","Depends on your skill level. Are you skilled enough to run a server? Do you just want a ‚Äúprofessional‚Äù Wordpress site?You don‚Äôt need to host your domain at your domain registrar, and it all depends on you.","ovh.com I can recommend. :)","Moved from godaddy to namecheap and havent looked back ever since - I highly recommend namecheap.com. They have really great customer support. I've also heard great things about cloudflare thought Ive never used it.Avoid godaddy at all costs.","Is netlify good?","hover","GoDaddy is bad. Namecheap is good.","I usually buy domain at namecheap for $6.18 and then migrate to cloudfare after 10 months. Cloudflare is cheaper than other. Make sure to have 2fa enabled on both. Saves some bucks lol."],"points":3},{"text":["Celebrate a more interoperable web with Interop 2023"],"points":0},{"text":["My Button is not appearing above my background image","The button has \"position: absolute\" which means it's removed from the document flow and positioned relative to its closest positioned ancestor (if any) or to the initial containing block. So in the html move the button to be a child of the background image div and it will be relative to that. https://jsfiddle.net/scaeo2rz/"],"points":1},{"text":["I need to refresh the localhost twice for changes to occur using Next.js App Router, anyone else having this as well?"],"points":0},{"text":["How to find out the cause of a (massive) paint in chrome dev tools?","Er, a canvas of 30720 x 30720 pixels equals 943,718,400 pixels. So that source image alone can't even render in Safari (supports a max of 16,777,217 pixels) and likely other browsers when on mobile devices. I suggest creating smaller slices for that purpose.Having said that, the draw call for 16.7 M x 16.7 M pixels is another order of magnitude too large. You should check the input variables you provide to your draw methods and sanitize these, you want to clip the destination rectangle to not exceed the visible canvas size."],"points":1},{"text":["Sales Manager here with a question about overseeing the development our website","You will have to pay someone else to verify the work. It's hard to save money through outsourcing if you can't verify what's going on","In my world, \"few weeks overdue\" is the same as no longer being involved with the project. Cut your losses and move to a self-serve platform like squarespace, wix, webflow or carrd.","Digital ocean is providing you with a virtual server that will run your websites code. Virtual in this context means you get a shared part of a physical computer. At least within the time the development is happening, I wouldn‚Äôt worry about cpu, memory usage etc. All of this will start to matter once you have real world users.On the topic of checking his code, I would firstly suggest that you try EVERY function of your site. Once you have verified that ‚Äûhappy path‚Äú is working. You could start to have a more experienced person to look through this. It very much depends on what kind of site that is. Is this a static content website, is this a server rendered website with a database (Wordpress, drupal, the likes) or is this something completely custom or is this maybe even something more like a saas applikation?All of these require different levels of checking.Honestly, what you should probably look into, is somebody to do maintenance and keep your site uptodate (especially if it is Wordpress!!)","I would kinda doubt somebody is hosting a WordPress site on digital ocean. You're better off using a WordPress specific host, imo. WP engine, Kinsta, Pagely, etc.","Depending on what your website has to do and your requirements, there could have been much better options to use for hosting instead of digitalocean (most options being free). However, it‚Äôs hard to judge with this amount of info. Anyhow being a few weeks overdue is a big red flag.","I would not recommend letting someone you have never met handle important services like online payments, hosting, etc. These are things that you can be liable for. Even though you sent them a contract, how are you going to enforce it? Are going to go Asia and sue the guy ?How are you going to check if your \"guy\" in Asia doesn't still have access to your server, app and payment gateway after the project is done? What if you he hosts some illegal files on your server? Who's responsible then?Be careful what data and access you provide to payment APIs, hosting, etc. You save some money now but you can lose a lot more later.","Hire a western developer you can trust. You get what you pay for, if you piss this guy off or ask to much what's stopping him from pulling the plug?¬†Also do you own your code base or does your dev?"],"points":2},{"text":["Don't use NameCheap for the .fr TLD","Besides, Namecheap isn't cheap anymore. I've been using it for years but recently moved to Cloudflare as the renewal of my .com domain was 50% more expensive on Namecheap.","Out of curiosity, did you have auto-renewal enabled on this domain?‚ÄãP.S. OVH isn't technically renewing it for free. All registrars extend the registration by 1 year when you transfer in a domain.","I switched to cloudflare domains.. best decision","This is called user error.","Don‚Äôt ever use namecheap for any kind of domains. It is the second worse domain registrar exists","I lost a .pe address under the exact same conditions.I had been warned of the policy when I first bought it, and again in plenty of time before renewal. It was my fault.I fail to see why you are blaming NameCheap for this. It's not their policy, and they even tried to get it back for you.","You didn‚Äôt follow the TOS and it‚Äôs their problem?","Or just don't buy your domains from companies whose only USP is being cheap.","Unrelated but .fr sounds like a novel domain for zoomer speech, like nocap.fr.","Thanks for the tip. Scary. Almost reminds me of registerfly days when I was blackmailed with $500k to release a domain"],"points":127},{"text":["Making a website","Don't worry if you're new to web development! Dive into coding your website‚Äîit's a valuable skill for the future. üöÄüíª","I would recommend no-code development as it makes it cheap and fast. If you are looking for more further customization and very specific functionality, however, custom code is the way to go. However, would be much more expensive and would take longer to build. Plus, you would have to maintain the website after building it.I've been using Wix and I love it. Has everything you need. It also has a good balance between ease of use and customization. You can drag and drop everything which makes building incredibly easy and create what's on your mind.Plus, it is nice to have all the tools required to run your business right there in one website. Wordpress is a great option too, and Shopify if you are planning to build an ecommerce business."],"points":0},{"text":["accidentally firewall‚Äòd out of my own vps","Usually you'll have access to the actual console terminal of the vps as an out of band-connections for exactly those situations.","Sounds like you should get a vps from another company.","I did the same. My service provider must see this all the time and provided a free VNC connection which you can access anytime on the account dashboard. Hoping you get your VPS back soon.","I did this before when setting up Apache on an ec2 instance. I chucked and somehow I was able to get in by rebooting the instance and sshing in asap","Oh, been there before.Did some routing/IP-table stuff for a VPN and locked me out. Had to reinstall the whole server.Happens to the best.It won't happen again next time, I'm¬†sure!","To chime in with what others are saying, a good provider has an alternate access method for this very reason. Could be web based. Or VNC. Or a different SSH port. Etc. consider checking out Hostinger.com.","What hosting provider are you using so I know not to use them?"],"points":41},{"text":["Is it possible to check a Facebook user's groups?"],"points":0},{"text":["Platform for user management / billing?"],"points":0},{"text":["How can I code this design","how about providing a link","The ‚Äúnav areas‚Äù look like divs with rounded corners w/ some padding on the main container.May need to use the transform property or some border tricks to make it work. Looks like fun challenge.","I think a mask. SVG clipping mask. But if you inspect the code in the dev tool, you‚Äôll be able to see exactly how they did it.","I figured you could do it with CSS mask, and I didn't know how to use that property so I took it as a learning opportunity.Here is an example that at least includes the header notches. The design itself (like many dribble designs) falls apart on mobile, doesn't scroll well, and doesn't scale well to more content, but do with it what you will.You can use the inspector to investigate it.","You‚Äôre asking about React, but this has nothing to do with React. I would look up CSS, and get comfortable with positioning. From there, you‚Äôll have the building blocks to create pretty much any layout, including this one.","Again? this is like the 4th time you've asked this?","Creating that navbar using CSS is totally doable! Utilize the display property with relative or absolute. Just set up a div containing your navigation links and align it using these display properties. Piece of cake! üç∞üé®","image is deleted :(","How many more subreddits are you going to spam with this question, /u/byteNinja10?You need to learn the basics. Not just think React is a tool to solve every problem.","Add css rounded corner .border-radius"],"points":14},{"text":["Web agency in 2024?","From my perspective, as long as there is traffic on the Internet, agencies will be needed, although from the experience of working in several, I will tell you right away that it is best for you to specialize right away and build the image of your agency as a specialist in a given niche, for example, it may be creating stores websites, or websites only for the real estate industry with various add-ons, such as forms for apartment management, etc.Try it, you can always give up, you will regret more that you didn't try than that it didn't work out.","Profitable yes, but prepare to be an expert on wordpress and shopify.","My team is available for conctracting if anyone's bloated with work. Feel free to send a PM","Only way to find out - Actually running a web agency. By the way, best of luck.","Yes. It‚Äôs incredibly profitable if you know how to niche down and get your workflow down. I‚Äôve been at it for 5 years now and consistently make 6 figures a year doing it part time. The hardest part is know how to sell yourself and your services against Cheap overseas labor and page builders. I wrote this guide telling you everything you should do to start and grow a freelance web agency based on everything i did to grow minehttps://codestitch.app/complete-guide-to-freelancingThat should answer a lot of questions!"],"points":21},{"text":["What is your your preferred tech stack?","There isn't an industry standard in terms of tech stacks, there are just a few more popular than other, i would advice however to start learning about some frameworks, both front-end and back-end if you wish to become a full-stack dev.Often for these complex projects you would start working with microservices that could tendentially be built with different technologies and have an API allowing to communicate with each other.","This isn‚Äôt cutting edge but it‚Äôs what I have used professionally and I like it ¬† ¬† ¬† ¬† ¬† ¬†¬†-Angular ¬† ¬†-GraphQL ¬† ¬†-Java spring ¬† ¬†¬†-MS SQL Server","PHP + Laravel, MySQL, React/Vue and TailwindCSS.","Started webdev from scratch in April 2023.I really love the techstack for my little website here :Sveltekit (Frontend)FastAPI (Backend)Tailwindcss (CSS)Pocketbase (Database)","I like Phoenix (even though I don't really like elixir üòê I like my types) with psql and tailwind. Easy stack and development is super fast.Just use it for \"normal\" stuff not heavy loads or specialized problems","MERNIt‚Äôs what I know","Remix (it's a fullstack React framework), Prisma, PostgreSQL. Express for websockets.No frameworks for css.Prefer SSG over SPA.Websockets for real time notifications.","frontend: vuejs (option api) backend: laravel/rails/django (i cant decide)","Vue, Node, PostgresAWS with everything severless (Lambda, S3, Aurora)","A fully scalable stack for me would be React with NextJS, .NET8 backend, SQL database (Postgres or MSSQL), Tailwind or StyleX for styling. Honestly you don't need much else.dotnet is insanely fast and efficient, even if you are a noviceNextJS gives you the ability to pick tbetween ISR, SSR and CSR however you like it. Thus you can optimize as you go along - going from CSR to SSR / ISR. It also handles codesplitting out of the box for you so that you only serve the JS / CSS that is needed on a per page basisTailwind / StyleX with removing all unused styles and duplication","What load do you expect? Are there any other fun requirements?Unless we are talking about something huge, Rails 7 with HotWire + React for the FE and a Postgres DB with assets in S3 should be fine.Auth / Auth would be Devise. Rendering and routing are backend.Keep it simple.","React / Angular (frontends)Laravel / Symfony (backends)DDEV (local dev environment)cypress (e2e tests)phpstan & eslint (helping hands)postgres (database)PhpStorm (ide)Windows 11 + Debian in WSL (os)DBeaver (sql client)Postman (api platform)","Browser Extensions: - Svelte v5 + TypeScript + TailwindCSS - Adobe Photoshop + Illustrator - Vite v5 - Firebase Auth - Firebase Storage if needed - My own custom build step extensions and websocketsBasic Website with server components: - NextJs App router + server components - Namecheap - GitHub Pages for free hosting","I build my own side projects with pure CSS,JavsScript and PHP.","Aws elastic beanstalk for¬†deploy, next for ssr, astro for SSG, css modules + sass for css. Kysely for \"ORM\", express for the api ( looking into next or Adonis next ), react hook form for forms, shadcn UI for component library, zustand + react query for state management stuff and data fetching, AG grid for datagrids. Docker for obvious reasons.This is my go to for most projects. I kinda wanna explore with a monorepo like turborepo next as well."],"points":21},{"text":["AWS SES is pissing me off","We use Mandril at work, ¬†not insane volume but it works well and support is surprising good.","Have you tried setting up SNS? It's often recommended to show that you have a plan in place to track and handle bounces and complaints as part of the application process. Also worth being explicit that you are planning on using it for transactional emails only if you didn't include that already.Regarding other transactional email services, we might be able to help you on Waypoint. Here's a bit on how we compare to SES. I'm one of the co-founders ‚Äì happy to help if you need it.","We use Sendgrid without issues. Support when you're on the paid plans is pretty acceptable.","I use Mad Mimi for transactional emails. They have an easy to use API and their plans are very reasonable. You pay for the number of email addresses stored, not the number of emails. So you can literally send each user an email 10 times a day and still pay the same price as if you sent 1 email a month.","Yep it‚Äôs really annoying, after getting denied multiple times I found Brevo, works right away and can send like 300 free a day I think"],"points":5},{"text":["Thinking Forth: A Language and Philosophy for Solving Problems","At a Glance:This document is an in-depth exploration of the Forth programming language, detailing its unique approach to problem-solving and programming. It not only covers the technical aspects of Forth but also delves into its philosophical underpinnings, making it an essential read for those interested in both the practical and theoretical aspects of this distinctive language.If you don't like the summary, just downvote and I'll try to delete the comment eventually üëç"],"points":1},{"text":["Creating a Website as a beginner for a friend who has a client","Oof, sounds like quite the responsibility. You‚Äôll also have to think about security stuff. If it‚Äôs going to be a webshop, go for something like shopify so you don‚Äôt really have to focus on the ‚Äòshop‚Äô part and deploying part.","In your situation I would probably suggest knocking up a Shopify (or similar) website.If you really are looking to develop it yourself then you'll have to decide on what language stack you will use. For example, I am currently in a job that uses a LAMP stack (Linux, Apache, MySQL, PHP). It is heavily PHP oriented as our core system is built on the Slim Framework. HTML, CSS and JS are fundamental skills, but you will most likely need a lot more than just those in order to built a great site nowadays, especially if the site is commerce (you mentioned payment gateways).You could use a headless CMS to start off with which will make life a fair bit easier, but again, it also depends on budget, what languages you choose to use and also how many products/categories you'll be selling","I'd recommend either squarespace or wix. They come with a WYSIWYG editor and unlocked editor for more advanced users. What is included however is domain name handling, email, product management, payments and transactions and even delivery (if required).https://www.squarespace.com/https://www.wix.com/Both are free to start designing and experimenting and even if you don't use them they will be great tools for mock ups and working out what you DO want and what you don't.","I think don‚Äôt do it, you aren‚Äôt ready yet. Or just do it but expect it to go wrong and use it as a learning experience"],"points":1},{"text":["Mediocre programmers dilemma","You'll always feel more in a \"assembly line\" environment at work compared to a bootcamp or if you're learning solo.It takes time to get a work life balance to also allow to other projects to pop back up and you'll eventually get there.But yes, a very popular option would be to make an open source side project to also use as a portfolio one day.","Think about what you're expected to do at work vs what you want to do outside of your work codebase.The reason it feels mediocre its cause its same shirt different day.No matter how much the project changes, its still the same project with new features.When you sit down outside of work, its a different ecosystem, and thats exciting.Build mini ecosystems for you to play in. and for the love of programming jesus, not every piece of code you write has to make money on the internet.Sit and break things, sit and mess around, sit and read code, f*** sit and review your own code.May the compiler be with you.","This is a complicated question. From a code perspective, I get the most out of exploring new tech on weekends for projects I almost never finish; but I learn a ton.There are other areas in which you could develop your role though; you could expand horizontally rather than vertically. How are your soft skills? Could you ask for more responsibility at work? Maybe dip into dev ops or product?","Stop copying from codebase, stack overflow, or ChatGPT.Start using the languages' documentation: https://www.php.net https://developer.mozilla.org/en-US/docs/Web https://nodejs.org/docs/latest/api/You're not growing because you're not challenging yourself. Next task you need to complete, try to solve it by yourself.","You're doing fine don't worryAs a junior, you're expected get done what's asked of youAs a medior, you're expected to do what is needed (including figuring out what that is)As a senior, you're expected to shape what is needed (including telling juniors what to do)Most of the growth is not on getting better at doing, but at knowing what needs to be done. Handling a few hundred simple tickets is part of that","> I want to be a good dev, a senior dev one day. Is my only option to put in extra hours with a side project, or extracurricular classes?Basically yes, but you do not have to do it *now*, nor all at once. It's a marathon, not a sprint. If you read a couple of books and play with one new language or framework each year, over 10 years you have 20 books and 10 languages.","First off, I'll say that you're only a year in, you really don't know anything yet. I felt I knew a lot of things after a year. And then the year after that I learned a ton more. And the year after that as well. And now it's been many years, and I remember how my first year felt. I could barely do complicated things without googling it. Now that I've been doing it for years, repetition is literally what learning is. You learn how to do it, you do it 10 times, your 11th time you can now just do it off the top of your head without looking things up.I'm at a point in my career where I know more than most other devs I'm in contact with. I still learn new things all the time because I'm lucky enough to work with devs that have even more experience than I do. Which brings me to my next point. Everyone really needs at least one mentor. Someone that has been doing it for long enough that they have solid experience, and more importantly, opinions. I had such a great mentor, I learned more from him in the first 6 months I worked with him than I did the previous 3 years of working on my own.So that's really it. If you feel you're stuck you need to find a mentor, and also realize that while you feel like you know a lot right now, I can assure you that after working for only a year, you know barely anything, and to be open to new things. Look through the code. You say you're using stack overflow and chatgpt. So you don't know certain things. Explore that. What are those things that you need to look up? How do they work? Look at parts of the codebase that you might not have 100% understanding of. Figure out how they work. Figure out why certain decisions were made. Talk to other people and ask questions about code. Sometimes the answer is \"because that's the only way it works\", and sometimes the answer is \"we're doing it this way because of [learning experience]\".","This is pretty common. It‚Äôs why devs can be working for 15 years and not get much better and never learn the basics of CSS and the normal things you might expect. It‚Äôs also why a lot of people are having trouble finding work right now. They don‚Äôt have much to show in comparison to people who aren‚Äôt in maintenance mode.There aren‚Äôt areas of the codebase that interest you? That you might read or refactor? There are tickets that are a bit more out of your comfort zone that internet you? You‚Äôre exhausted? Are you using your time wisely? Are you using chat to do your work for you - or using it to learn? Do you have people on your team to pair up with? Are you using hours at work to read documentation and try what you learn out in the codebase? Maybe your bootcamp didn‚Äôt teach you to problem solve. Maybe your specific company is just boring and doesn‚Äôt have anything to learn. So, you gotta treat this like a problem and solve it. Why are you too exhausted to spend 1 hour a day working on a project? How could you organize your time differently? Can you change your approach so that you‚Äôre learning new things with each ticket? Or are you at the wrong job? I‚Äôd suggest talking to a mentor or coach of some sort with the real code in front of you.","You are me.Bootcamp. Little over a year in.I work in 4 repos. I finally understand how they all connect and how to navigate the code to find where I need to work. This was a huge breakthrough for me. But now because I am a year in I feel like I am not where I ‚Äúshould‚Äù be. I recently started using chatGPT and while it‚Äôs been a game changer as far as gaining traction/momentum on starting tickets, I feel like I am not really growing as a developer. If I get stuck for too long I start consulting with chatGPT. My efficiency has improved significantly (tickets that would have taken days now take hours) but I feel like I am doing myself a disservice. My biggest fear is that if I get laid off and need to start applying for a new position I won‚Äôt have what it takes. I work my 9-5. But I don‚Äôt have much time outside of work. I have a wife and kids which is the reason I switched careers in the first place.I really try to be a team player. Help with reviews, swarm on QAs, run stand ups, present at show and tells with stake holders, and ask for help from my team when I am royally stuck and chat doesn‚Äôt help. I want to be better, and I want to be valuable so that if/when layoffs come around I am seen as indispensable.I was also recently reassured by some friends that are senior level that using AI is the future of development and that it‚Äôs okay that I use it to get started. They said as long as you understand what it generates and you can morph it to your specifications then I shouldn‚Äôt worry‚Ä¶ and I digressTL;DR. Echo basically everything you have said with a couple revisions to your story.","I‚Äôve been there. At some point at my job I was doing financial recon systems that needed to be configurable, and handle excel files of 16GBs with more than 30 Million Rows while juggling having to make a whitelabel website that has configurable forms and validations all while being a Junior. Fast forward two years at the same job, I‚Äôm making 60 Email Templates. The next month, I‚Äôm trying to deliver a 3 Month Estimated App in 3 Weeks and my Team of 3 that I led exploded to 24. Sometimes difficult problems need to be done, other times the boring stuff needs to be done.Jobs fluctuate, problem difficulties change, that‚Äôs why a lot of good engineers hop around; to get bigger and bigger challenges. Some others, like me, like to challenge internal problems and try to solve those. I got bored once and built a scraping tool so I could keep a database of most recent car models for our company ul to date. I got even more bored once and built a configurable web builder. Was it shitty? Yes, but I learned a lot. How did I balance it? I either didn‚Äôt or explicitly asked my manager for time to complete a project.And some days I felt like a master, others I felt like a complete idiot. I find that it‚Äôs a common experience as a dev especially as you tend to have to learn and unlearn things much much more frequently than other professions.Also, writing more code =\\= getting better. Some engineers only memorize, but don‚Äôt think. If you start to feel the problem is just repetitive and has no other way to be solved, find a more compelling problem either on your own or by moving jobs. That I feel, is the fastest way to ‚Äúlearn‚Äù.I‚Äôm really sorry for the shitty write up but I hope it helps.","being at a job for a year after a boot camp is not much time at all. what‚Äôs tough as a junior is to set boundaries. who‚Äôs the genius that told you your grace period is over? it takes a few years to pick up the craft seriously and you are not in the position to judge yourself as not such good programmer.Keep. Going.","Your employer should provide you with some time and resources to learn more in order to improve the company's codebase.","New programmers often have the misconception that knowing the programming language is the most important and, by extension, that writing code is the job. The best devs get their value largely from engineering...From deciding which code to write and which not to write, from carefully maintaining dependencies, from keeping a project consistent with good standards, from collecting the right requirements from stakeholders, etc. What takes you from a junior to senior dev is largely not knowing programming languages or writing code, it's all that other stuff.So, I'd say if you hit a plateau because you're not writing as much code, maybe pick up a book on software engineering, software design, algorithms, computer security, database design, etc. Focus less on the language and the code and more about the knowledge of process and system design.","Read those books on fundamentals already mentioned, and thoroughly read language and framework documentation so you can start to grok what is actually happening under the hood.Start to identify what in your tickets is repetitive, and what you could do to make your work easier (refactoring, writing or adding tools and scripts). Nibble away at them over time.By year 2 you'll have deeper knowledge of writing good code, understand the tools you're working with, and have some bullet points for your resume if you want to look for a new job for lack of a mentor or advancement.","I think there are multiple approaches to improving as a dev. Some do it in free time, but it's most effective if you can do it on company time. Once you get past the grace period of \"learning on the job\" / not getting anything done, the next step is to figure out how to learn while still getting shit done. Nicer places to work build in some extra time, shitty places you have to add a buffer to your work so you get that time.Is the copy pasted crap actually the best way to build things? Often copy pasted crap is just cargo culted legacy garbage that no one bothers to fix or understand. Learning the ins and outs of your stack is probably the next best way to advance (unless you want a specific job with a different stack). Do you understand all the best practices of docker, graphql, sql, vue(vite)? How about your ORM or interface/bridge layers? Is there a particular area that can be better? Are there things your org does funny? Do you understand why? How resilient is a particular choice to changes in requirements in the future?You gotta choose do you want general knowledge or domain knowledge. The 1st is better for getting new jobs. The 2nd is better for succeeding at your current job. Being good at both is what makes you valuable.","Is this your first job? If so, give it time. You'll feel more comfortable when you have more experience.The \"greenfield\" project is always more exciting, and always will be.But if you don't have the energy to do learning / side projects after work (and you're definitely not alone in that), then my suggestion would be to see if you can get some paid training time at work. A lot of companies do this now. It's even better if you can tie the training to something that would benefit your project at work.It's not: \"hey boss, I'd like to learn some random new shit, can I do that on the clock?\" (although some companies are fine with this, it's not a great way to sell it)It's more: \"hey boss, I think that if I learned a bit more about [insert subject matter], it could really help us with [insert relevant technical issue / planned feature / maintenance etc]. Is it okay if I carve out some time on Friday afternoons to study this? I've been doing a good job getting my tickets done so far and I think this could really help the team.\"Good luck!","Horizontal investment: learn ruby on rails, django, react, or svelte.Vertical investment: learn nosql dbs, cap theorem, infrastructure, architecture.When i felt like i was plateauing out my knowledge with django, i tried to go deeper and go wider with web development. Nothing is ever the best thing but when you get exposure to a lot of different things, you slowly understand an even bigger picture of webdev. It's beautiful.","What you're experiencing is normal. Keep going, find new things to improve each day, and you'll feel another wave of progress soon!Personally I picked up analysis once the implementation, integration, deployment, and validation stuff got easy. Systems analysis, use cases, data flows and interfaces. So that was about applying power/influence stakeholder analysis, writing user stories in first principles, designing cucumber test cases, diagrammatic data flows, defining applicable security controls/standards, and UML. I perform the analysis as part of my investigation of a ticket, and implement it as I've analysed it.It improved my software development immensely, almost like a breathing technique for martial artists.","I have a suggestion on how to improve while continuing to use chat.Receive a ticket, plan how you think/ would solve it by identifying the concepts involved and documentation. Then throw it to chat, reverse engineer chat's response, was it close to what you were thinking? As a challenge try to prove why chat's code is conceptually wrong. If it isn't wrong and you fully understand how to get there via reverse engineering, attempt refactoring -if plausible- implement. If chat's code is wrong, give yours a try. Refine using chat and docs if needed.Reasoning for this approach: You save time in this process by attempting two paths at once. You have your plan, chat has a plan, you can collaborate on those plans. You also get an opportunity to practice code review, and through studying of documentation/ refactoring attempts you gain practice and knowledge.This has been my approach to using chat and I feel less like I'm \"spinning my wheels in the mud\" and more like I'm improving.","Use ChatGPT for learning. Ask it to explain the code; use why and how when asking. I've been coding for a long time and I find it extremely useful","Welcome to work. It's not like school.Hope this helps","Golden rule: You will never reach senior level only doing things at work. You have to constantly improve outside working hours, learn things, read etc.","Are you literally complaining that you are copying and pasting from ChatGPT and StackOverflow and you feel like you hit a plateau? I mean you're just copying and pasting shit, not creating something new, what's to learn? Don't do that.","This is something that many people don't get, regardless if they're coming from a bootcamp or not: You're there to make money to the company. The daily work will feel like a chore, at times you'll be fighting legacy code written by others who only did the bare minimum to make things work because deadlines are running, etc.You HAVE to invest in yourself in your free time, especially when you're new. You cannot expect to work with exciting things in your day job, and the rate the technologies/frameworks change affect the job market out there, not the company in there.For instance, most of our projects are .NET Framework with jQuery, and we have ZERO Angular/React/Vue projects. The job market moves towards .NET Core/.NET and separate frontend frameworks. It makes no corporate sense to rewrite everything in modern technologies, but it makes sense for you as a developer to learn what's currently popular.","Focus on the quality of your code rather than the quantity. There are lots of ways to level up while solely focusing on assigned tasks.Would it have been better to centralize code rather than copy/paste it? Do you truly understand the code you are pasting/generating? Are you following common standards and conventions for the languages/frameworks you are using? Do you have a linter installed, and if so have you made all the red and yellow squiggly lines go away? Does your code get reviewed? Does your code get tested?","how long was the grace period?","Having an invested interest in the problem and solution is huge in starting to grasp the how and why instead of just chasing the what that will work.If you have any passion or personal projects you can work on with your spare time, those can serve to spring you ahead faster than developing for someone else","I have masters in CS, a lot of year of experience and I work in big tech. It's exactly the same thing. In addition to that, for any problem that you stuck with, there's ALWAYS another person who will do it in half an hour.One thing is true though, it's very hard to grow professionally if you stuck with OE work. Fixing tickets is a skill but other skills must not be neglected.Is my only option to put in extra hours with a side project, or extracurricular classesIt's true for overwhelming majority of good devs that I know. You play around with things in your spare time, you learn them and then if you're lucky, you may use them at work.","Is your project more a \"maintenance\" project, or a \"build\" one ? ( sorry, I'm not sure about the english terms )What I mean to say is that I find it interesting to work on projects that are just starting out ( build type ), as well as evolving existing projects that already have a large written code base ( maintenance ). Both allow us to gain different skills and help us to improve in different ways.Maybe you'd like to switch to a different type of project, or maybe you need to move on to more ambitious and complex projects (e.g. e-commerce, or simply high-traffic sites? ) that are different and would let you see more things.But if you're working at a place that only handles one project, it's not necessarily going to be possible sadly.When there's a bug on the live version on your project, do you help with the debugging? Or is it just the leads developpers who take care of it ? Because looking for and finding solutions during emergencies is a nice skill to grow.Would you be able to manage this project on your own if everyone was suddenly absent for a while? Would you be able to handle any tickets ? Do you know and understand the deployment process for your project?If not, maybe it can help you figure out which topics to delve into, at least ones related to your project, to broaden your knowledge.","this is a common feeling in a lot of advanced learning, the feeling of hitting a wall. only thing you can do is keep pushing, i guess you could quit but i wouldnt recommend that.","ChatGPT is kind of cool cause you can ask it to explain stuff or post it large parts of the project and ask it to explain it or recommend improvements.I am sometimes doing assembly line boring code work like you and the way I make it interesting is trying to innovate or refactor in the space and ChatGPT is pretty good at helping give me ideas and stuff. Sometimes it doesn't really turn into anything but it's still fun to explore.Other than that, and most people don't like to hear this, but job hopping. Switch jobs around every two years and you'll get a pay bump greater than ever staying at one place and you'll keep getting learning periods and getting exposed to new systems.","Is my only option to put in extra hours with a side project, or extracurricular classes?When I was a junior I was basically constantly coding, in and out of work. I had personal / side projects that I would do when not at work, and sometimes I would bring work home to work on it. I was also getting challenging problems that I found interesting, at work, though.Your skill will grow as high as you need it to, so if it's not being challenged at work, you'll want to impose challenge on yourself externally.‚Äãmost of what I do now is reworked copy/paste code from elsewhere in the codebase, stack overflow, or ChatGPT.Stop doing copypasta, esp from ChatGPT, and start writing it from scratch, even if it takes a little longer. You're denying yourself learning opportunities.‚ÄãI want to be a good dev, a senior dev one day.Does your company have a path for improvement / career development? If you don't have room to grow, then you'll have to move on elsewhere. 2-3 years is pretty standard for this industry, and it's not unreasonable to move onwards if you feel you've stopped growing.","Not wanting to program after work is pretty normal. Especially if your current work is sometimes exhausting or your personal life is busy.Also, code camps are more like prototypes where you will build 90% of the code in 10% of the time and if you'd continue you would write 10% of the code in 90% of the time. Its always nice to not have to bother with unit tests and code quality but you need it for regular work to make guarantees on the quality of your work and specifications you need to implement.Prototypes are kind of \"trust me bro\" whereas your work creates professional work that you should feel proud of (or at least accomplished). But also if you don't feel like that (perhaps because your boss doesn't let you, you don't get enough time to finish it or they have too many deadlines) then it might be time to look elsewhere to a position that does make you feel accomplished and gives you a good feeling about what you've created.Also, at some point the hackathon stuff or side projects offer less fulfillment or make you learn less and less since your knowledge grows and at some point you don't need to do side projects to stay in the game because you have enough knowledge that any project or new tech that gets thrown at you, you will be able to work with in a matter of days/hours/minutes. Like, if you'd give me a different framework to work with for the next 6 months, then yeah I need a bit of practice but at some point I will be familiar and thus have no real reason to do it in my own time. At that point you get paid for the knowledge you have. At some point you don't need a portfolio site anymore because people will know you have the knowledge and can talk a lot about what you've done and how it went. Its kind of like that joke where a mechanic arrives to fix an issue, presses 1 button and the thing is fixed. After which he gives a bill that is 300 bucks. 1 buck to fix the issue and 299 for knowing what button to press.","You need to find more challenges. Full stop.Don't be one of those guys who have 20 years of 1 YOE repeated 20 times over. Meaning,they do the same ole CRUD work over and over.I've seen it to many times. Friends who did classic ASP. Then Cold Fusion. Then PHP. Then express. Doing the same thing with just a different stack. Creating pages that talk to a database. Nothing more, nothing less. They may get the occasional thing like form generates a PDF or excel. Or the form calls an API to populate some view on a page... Basically 1 YOE.It is good to recognize it now.","have you ever heard the expression, \"inspiration is for beginners\"? it means pros just do the work. they aren't searching for motivation. becoming a dev is what you do on your own time.","Learn Python.","Welcome to real jobs.","Some people are happier switching jobs every few years to learn new things.","You did a boot camp and immediately jumped into a reliable programming job? What‚Äôs the problem? Enjoy it.","I did something similar. Stop copy pasting lol. It‚Äôs really that easy, you‚Äôre letting your tools become crutches. Set some boundaries with what types of thing you‚Äôll ask chat gpt and if you do go to chat gpt stick around and get a detailed explanation so next time you won‚Äôt need to go back. As you grow as a dev, what it takes to grow changes.","given the short amount of time you've been in the job...sounds like you're doing OK to me! where do you feel you are lacking?there are many other areas to improve as a developer other than programming, which can be learnt on the job (soft skills!)","I can 100% relate. This is one of the classic signs of burnout. Learn to recognise it early! It might be time to move on to a different company. I realise you said you don't have the experience - so for a start do some research to see what companies/ tech interest you and work towards that goal üòä"],"points":259},{"text":["If you built a social media platform alone, how would you monetize it?","Gamification.Unlockable cosmetics (icons, avatars, fancy profile, etc), paid QoL features, achievements, badges, experience bar and/or leveling, etc. Make it cool and fun to visit. Have something special/different every day. Let the users \"progress\" in some way, so they can unlock avatars, animations, special effects, whatever. People love cosmetics. That's where \"free\" games make money.","Build a p2p platform and/or a federated platform, and let people host their own profiles and stuff.Building a centralised platform is only viable for companies that have the capital to lose money year over year until some idiot buys them for 44 billion.","You gotta have to have great number of active users first. Then huge trafic on your platforms. If both are already done, monetization is not hard. Without first two stop your platform is just a compiled app not a money making machine.","I'd sell very expensive premium accounts to allow people power over others and then let them loose","4th option: Raise funding based on your plans to grow the network.","Charge $5 for every post that is negative karma after 10 days.","LEAN, Add ultra basic version for each and see what sticks. You don't even need to implement it, just put the buttons on and track engagement.","I‚Äôd sell it to Google","A few years ago a friend was in kind of a similar position except it wasn‚Äôt a social media platform. He was contemplating creating a premium type of system to get some revenue cause the bills were piling up.I and his other friends told him the same thing: get investors involved, build up the platform, grow the product, and then think about how to create money with it.He took our advice and eventually got acquired for $30M.","id accept donations from my users and if the server costs werent covered by month end id pull the plug","From a purely monetary standpoint, just sell your users data.","without facilitating some kind of way to exchange goods within this new social network, I don't see a way to monetize the network itself...","Most social media sites don‚Äôt make money","Completely depends on the content. In the three examples you gave, each are best for their content type. There is no absolute winner or everyone would be doing it.","It's important during growth to decide between prioritizing current users vs potential/future users. And you kinda have to figure out that balance, as well as how that affects monetization.Are your users people or businesses? How would ads work? If you're aiming at a subscription model, which way would that go (creator or consumer pays)? Do you think your app would survive charging for what others do for free (maybe, if you don't sell accounts their own audience and giving them full reach is valuable enough)? What about taking a Twitter (no, I will not call it X) route and offering creators a cut of ad revenue for their content?","This may not be the best place to ask, as developers are not typically the best at knowing what to do with what they've built, from a business standpoint.Do you have a business development person?I think the line up investors idea is a good one, especially if you don't mind submitting to those pressures and eventual loss of control of your product. But it's probably in some ways the safest way to go.Otherwise, among your three ideas, I would say test all three and see what fits your product the best. People generally expect not to pay for social media though. Twitter is currently trying out a limited \"subscribe to follow certain users\" feature, and I'm not sure how that's going for them - maybe research that a bit.So far, ads haven't really hurt facebook, twitter, reddit, etc. Facebook started as \"no ads ever\" and now they run their own ad service. But ads only really work if you have a lot of users. The margins can be low.Good luck.","I think I'd go with ads, getting a subscription is hard. I'll subscribe to Spotify, Audible, Netflix, but there is no social network I'd pay a cent a month for.Ads aren't expensive to implement, it's free for most providers isn't it?","Depends on what kind of social media. You already have the three points listed, so you seem to know which ones are best for which."],"points":101},{"text":["Help needed regarding high level architecture for a compute intensive backend","What the hell is taking a minute to process? That's billions of operations. What are you doing that needs that? Can you split it up into much smaller chunks that can run in parallel?We'd need a lot more information to be able to answer your question. Architecture is a whole speciality in itself.","#2 is for highly distributed scalable systems at a cost. It requires expertise to maintain that Kafka and create the proper plumbing. For many, it can lead to a lot of over-engineering with little gains. Where I work, 80% of the outages are usually Kafka clusters and nodes. In production.We need to know a bit more. But I've had to make this decision and ended up using redis as a cache and worker nodes just pick up jobs from redis queue. Scaled it to 40 or so nodes and increased TPS (Transactions per second) up to hundreds of TPS, without having to resort to Kafka.","If a process takes a minute, you do not want to \"await,\" you just want event driven architecture.There's not enough information to know if you need Kafka or not. That's rather heavy machinery. It's the type of service that, if you're wondering if you need it, you probably don't. You could likely get away with a simple queue; think Redis, RabbitMQ or a managed solution like SQS if you're on a cloud provider.Then figure out a notification system for your front end user. Unless the real time nature of the alert is critical, it probably doesn't need to be websocket based. An email, push notification, text or even just a status update in their profile may work.I'd also love to hear what'd be the difference when it is a separate service of its ownThat depends completely on your implementation. Services are decoupled for any number of reasons. The most popular are limited blast radius should the service fail, scaling simplicity and corresponding cost optimization, as well as smaller code components for simpler maintenance.None of those things are a given, though, you have to implement them.","No. 2, you can use a simpler solution though.For example simply run a serverless function, we use Cloud Run to execute very heavy jobs (importing gigabytes worth of data each run), had no issues scaling so far."],"points":1},{"text":["How can I run the backend and frontend on the same port correctly?","The issue you're facing is due to the way single-page applications (SPAs) like those built with Svelte handle routing on the client side, combined with how the Rocket server handles requests.In an SPA, the routing is handled by JavaScript on the client side, not by the server. When you enter a URL directly into the address bar, the request goes to the server, which doesn't know about the client-side routes defined in your Svelte app.To resolve this, you need to configure your Rocket server to serve the index.html file from your Svelte build for all routes that are supposed to be handled by the client-side router. This way, when you access a route directly via the address bar, Rocket will serve the index.html file, and then Svelte's client-side router can take over and render the correct component.You can do this by adding a catch-all route in your Rocket application that serves the index.html file. Here's an example of how you can modify your main.rs:use rocket::{    catch, get,     fs::{relative, FileServer, NamedFile},    launch, routes, Rocket,};use std::path::{Path, PathBuf};#[launch]fn rocket() -> Rocket<rocket::Build> {    rocket::build()        .mount(\"/\", FileServer::from(relative!(\"../frontend/dist\")))        .mount(\"/api\", all_api_routes)        .mount(\"/\", routes![index])}#[get(\"/<_..>\", rank = 10)]async fn index(path: PathBuf) -> Option<NamedFile> {    NamedFile::open(Path::new(relative!(\"../frontend/dist/index.html\"))).await.ok()}This index function is a catch-all route (/_..) with a lower priority (rank = 10) that serves the index.html file. It's important to give it a lower rank so that it doesn't interfere with other routes, especially your API routes.Regarding running the frontend and backend on separate ports, it's a matter of preference and the specifics of your project.Separate Ports: This is common during development because it allows you to leverage the development server provided by Svelte (like hot module replacement). You would run Svelte on one port (like 3000) and Rocket on another (like 8000). You would then need to set up a proxy in your Svelte dev server to forward API requests to the Rocket server to avoid CORS issues.Single Port: For production, it's common to serve both the frontend and backend from the same port. This simplifies deployment and avoids CORS issues, as both your API and frontend are served from the same origin. Your current approach is aligned with this method.Remember, when deploying, you need to build your Svelte app and ensure the dist folder contains the correct built files. The Rocket server will then serve these files as your frontend."],"points":4},{"text":["HELP ME CHOOSE A TECH STACK PLEASE?","I‚Äôll try to say this gently.Don‚Äôt fuck around with things connected to money and financials if you don‚Äôt have solid opinions about and experience with the tech you‚Äôre going to use to build it."],"points":3},{"text":["The Current State and Future of Web Development","Honestly, nothing has changed.Our purpose is still to solve user's problems.There are some new tools, and some new snake-oil salesman; and a alot of people who don't know how to run a profitable business so hire/fire as their VC tells them to.","AI is thoroughly unproven as a replacement for developers in my opinion. The amount of tuning, effort and oversight it would take to get a model to the point where it can deliver enterprise grade solutions, with all the QA and CI/CD that is industry standard would be gargantuan.","It's already good enough.I hope SSG gets more popular than SPA, and maybe some cool stuff for websockets."],"points":12},{"text":["Largest Contentful Paint 7.9 s - WP ROCKET","Identify and solve your blockers first. Defer any JS that is not required for initial rendering of the page. Ideally, you want 0ms blocking time and there are very few reasons you should have any blocking JS at all. Then make sure you're adding preloads to your HTML head for any above the fold images and check that they're not being lazily loaded.Additionally, make sure you're using either memcached or redis to serve cached DB responses from WP to cut down your response/TTFB.","I have the exact same issue, and I've already optimized all my images, but to no avail. I'm really not sure what's up.","The only way to really diagnose would be to see a live url. I'm happy to take a look if you want to share.","Hard to diagnose without a URL but 3.2s spent on script evaluation. My money is on too much JS.","A WordPress theme with bloated JavaScript?!Well I guess now I have seen everything!","installing wprocket has NOTHING to do with having an optimized websitethe problems can run very deep like the way you load scripts etc... you need an expert to figure that stuff outfor reference it took me from knowing almost nothing about this to rebuilding my entire company website structure in like 6 months or so of trial and error.‚Äãwhoever says you just need to do \"this and that\" and its going to be fine has no understanding of CWV and fundamental stuff like this."],"points":7},{"text":["SEO Keyword/Existing Website Audit Question"],"points":0},{"text":["List of cool UI Dashboards for inspiration","thanks for sharing","The subreddit continues to colonize my saved section at a rate that would make the British Empire blush."],"points":0},{"text":["Freelance developers, how are you building e-commerce websites for your clients?","Shopify with custom frontend using Storefront API","However they want. Usually Shopify or WooCommerce. If they don't have an existing site usually Shopify. If they've an existing WP then WooCommerce. I don't see a reason to reinvent the wheel here or try to use some new kid on the block eCommerce platform that hasn't been tried and true for years. Building from scratch would only be an option if I were working for a larger company and had a team as eCommerce is an absolute nightmare and even then I'd probably just reach for Laravel and some packages.","Shopify keeps clients happy.","I‚Äôd go for a shopify shop if design isn‚Äôt too custom. If you need as much as developers freedom as possible; I‚Äôd go for a good old Woocommerce. I recently set one up with Bedrock and Sage.","I build e-commerce by hand and the cms. Have my own template for these. Sometimes I use Medusajs if the use case fits. Generally it‚Äôs unadvised to build your own ecomm, I just prefer to have my own.","Craft Commerce.","BigCommerce, osCommerce/ZenCart, WooCommerce, and Magento back in the day. I haven't contracted in several years.Of all the things to build from scratch, an e-commerce site is one of the absolute worst things to do yourself. PCI-DSS requirements change with some regularity. That's your best possible outcome -- you're just worried about keeping the site up to date with PCI-DSS requirements so payment processors will continue to work with the business. That can be a lot of work by itself. Not including surfacing/patching CVEs, keeping the e-commerce database synced with accounting software, ensuring ongoing API compatibility with payment processors, etc. That maintenance burden is either hurting your bottom line or the client's bottom line.","I've been dabbling in Odoo Community recently.","We made this kit to build static e-commerce sites connecting a Shopify account to the static site generator and loading the contents of the store into the sitehttps://github.com/CodeStitchOfficial/Advanced-Website-KitHere‚Äôs what it looks like out the boxhttps://theadvancedkit.com/collection/automated-collection/Literally just add the Shopify api credentials to the kit and it will just work. The rest of the site is html and css built with 11ty static site generator. There‚Äôs also a blog you can add using decap cms. Merge the blog branch to get a Working static markdown based blog system that the client can edit and add posts to via a dashboard provided by decap cms. Lots of neat stuff in this kit. I use it for all my e-commerce clients. Allows us to make truly custom Shopify stores without needing to touch the liquid code in Shopify. I just edit my site as I normally would and save and publish. When the client makes edits on the Shopify side and changes products and pricing, the kit rebuilds the site with those new changes."],"points":15},{"text":["Why is the text going off the screen?","Is your max width in pixels, or percent?","You'll need to show us something we can see in the browser. We can speculate and guess all day long, but we need to see it to be able to properly diagnose.","Is your breadcrumbs one unbroken line of text without spaces?","Is p inside some container where title isn't?","Without seeing some code it could be anything, but if it‚Äôs only happening on mobile screen sizes, I‚Äôd say check your media queries first and foremost.","I miss the \"Tilt\" feature in old Firefox. It was perfect for this kind of stuff.I see in the comments that you say that the max-width is set using vw units, but what about margin/padding/positioning, etc? If something has a max-width: 90vw, for example, but has other styles on it and its parents the cause its left-most edge to be > 10vw, you'll get this kind of results. Widths of auto or percentages are typically better for that reason.And, by \"a break word\", are you talking about the white-space or <wbr> or what?So, my guess would be basically that the URL/breadcrumbs is too long and causes issues with whitespace/text wrapping, likely due to lack of opportunity to break. So it overflows. That increases the width of the parent element and the title is also widened as a result.","I recommend to use devtools in chrome or firefox and make changes to fix stuff like this quickly."],"points":12},{"text":["Scaleway web hosting versus AWS Lightsail: A quick comparison"],"points":0},{"text":["Hoppscotch","What it does: ‚ÄúOpen source API development ecosystem.‚ÄùWhat problems it claims to solve: noneWhat advantages it claims it gives: noneY‚Äôall need to work on your marketing."],"points":1},{"text":["Tools to find Website Design Ideas/Themes/Inspiration","Use Flexbox for simple and responsive forms. It offers a straightforward and flexible layout model, ideal for basic form structures. Grid, while powerful, might be overkill for simpler forms. Flexbox provides a concise and effective solution, easily aligning items in a single direction for an efficient form layout."],"points":0},{"text":["Does this style of querying make sense in a REST-ish API or should I just move to (g)RPC?","Maybe I'm weird but this just looks like URL query params with extra steps","Why is this better than GraphQL?"],"points":16},{"text":["Digital Ocean Spaces","DO spaces is fine. It's an s3-compatible storage layer. I think strapi has a DO-spaces upload provider, but we use the standard s3 provider for DO spaces with no issues.In terms of pricing, it's really cheap, cheaper than s3. In fact most of the non-aws s3-compatible storage platforms will be competing with s3 on price not features, so they are all going to be cheaper than s3.The one I like the best is R2 (cloudflare). 0 egress costs. Super nice."],"points":0},{"text":["Yesterday I did a coding task for a new job that I thought went very well, and the feedback was terrible","If this was your first time using React and you spent a few hours on it I'd say it's reasonable to expect it to look beginner-ish. React is one of those things that changes fast, has a lot of best practice and pitfalls for those new to it.","If you only have two years experience and it‚Äôs from two years ago‚Ä¶. You ARE a beginner regardless of language or technology.That‚Äôs not a bad thing but you need to probably adjust your expectations and perspective.","Do you have a repo for it? It‚Äôs hard to tell without seeing the code","It depends what the company expected from you.I would be surprised if the company in question was searching a junior candidate, it would make sense though if they were searching for a mid/senior developer.Anyway let's put it in a way where they were searching for a junior developer, the only thing a healthy company would really check is your attitude to solve a problem, they expect little to no knowledge from you, just the basics of programming."],"points":27},{"text":["Web Push on iOS - 1 year anniversary - Webventures"],"points":0},{"text":["After few adventures with UI libraries, I decided to go back to the roots with next open-source project. Which of those three tools/libraries would you choose for styling?","Tailwind again, fact is most css contains bloat and tailwind comes with premade documentation + is optimized for speed.‚ÄãI switched from css -> tailwind, only regret was not doing it earlier.","tailwind","Tailwind if you don't need pixel-perfect customization. Styled-components if you need."],"points":7},{"text":["Sole proprietor or limited?","Used to contract, don't anymore.I hired a lawyer and an accountant who both suggested LLC given the jurisdictions I was subject to. Same lawyer worked on my standard contracts for project work and ongoing support. Any time a client wanted to adjust the language in the standard contract, I'd typically just say \"no thanks\" and walk away. If it's a client I really really want to work with, I have my lawyer review the adjustments, advise me, and bill me. I'm now in the red on this work and it hasn't started yet. That only happened once in the 5 years I was active, and lucky me, they were a great client to work with. Generally the SOW, with deliverables and timelines, is where we would spend the most time going back and forth. I don't have my lawyer review SOWs because the contract lays out some ground rules around what the SOW is, and what it's used for, and what it's not used for.My only insight is to consult with a lawyer and send them a nice gift basket around the holidays every year.https://youtu.be/jVkLVRt6c1U"],"points":0},{"text":["I want a smooth in-feed ad-viewing experience on a social media website I've made. Is a custom ad interface my only option?","Native ads. Most platforms offer them and you can often choose the colours, fonts, sizings and spacings. If you tell us more about your platform I can recommend some ad providers."],"points":0},{"text":["Flex or Grid or both to make simple form for a backend dev ?","I personally tend to use Grid to style the overall page in terms of web vs mobile/responsive. Then I use flexbox inside individual divs to manage the flow of boxes/panels/divs, etc.If you're trying to make a simple form, there isn't anything wrong with bootstrap.","Probably both, depends on your fields. I would use grid for the initial structure then flex to fill in any oddities in the form. If it was a contact form with an address i would want to use a two column grid and use the grid items for most fields, but for the state and postal code i might want to use a flex in there to account for the state field if it's only the abbreviation.","Almost certainly just flex. I hardly use grid for anything since pages are often laid out and then just iterated on for all of eternity.","If your items are identical then using a grid makes more sense but if ur items are of varying sizes then maybe flex wud b a good option imo","Grid is slightly more code but more intuitive.For simple things I just use default display:block, where most people would've used flex (know it because I make custom stylish for sites; I even sometimes change to block to make it easier for me)Grid is also cool for responsive design if you want to change layout and that wouldn't be possible without chaning html in flex or block (there's not many sites that need to change layout like that though)For simple forms where you need both vertical and horizontal align flex will work.","Lol this is the big question? Flex or Grid, I struggle myself, read somewhere that grid is best if two dimensions, i.e flex is more like a list display, you can not reference the flex row above.","Completely depends on your form. Most likely, either will work fine though","Flex if things are mainly in one dimension. Vertical or horizontal. Which is mainly just nav bars and lists. Things that just need quick simple flexiness. Grid for anything else.Grid is much more powerful and easy to use when you are familiar with it.Centering the last row can be hard in grid if it does not fit the pattern exactly so take that into consideration. If your layout has that use flex sparringly where you need it","For simple and responsive forms, use Flexbox. It offers a straightforward and flexible layout model, making it well-suited for forms. Grid is powerful for complex layouts but may be overkill for basic forms. Flexbox provides a concise and effective solution, aligning items easily in a single direction.","If it‚Äôs a simple form, why do you need either? If you have ~6 or less fields they can be stacked and shouldn‚Äôt need much/any responsiveness.That being said, if you have designs to follow or just want to do it a certain way, I‚Äôd personally go with flexbox.","If you want to position elements across a single axis and deal with how they are spaced apart and how they align - flex.If you want to have a fixed grid and position elements to occupy individual cells (they can span multiple cells), then grid.I usually use flex the most and grid only occasionally, as the content naturally flows from top to bottom and I only need to deal with how it's positioned within each \"row\".","This is dumb question.What's simple to me isn't simple for you.Flex and Grid have nothing inherently to do with forms.There is no right answer and \"a form\" isn't enough of a reference for anyone to give you and answer that isn't subjective and meaningless.","Depending on the form layout, you may not need either."],"points":29},{"text":["Easiest way to distort audio to give some kind of \"voice anonymization\""],"points":0},{"text":["Good services for photography site"],"points":0}]