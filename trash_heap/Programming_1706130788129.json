[{"text":["flaskpy in vercel"],"points":0},{"text":["Those Who Can't Be Named","Here's a hint to decide on reading the post or not:The post discusses a unique group of professionals he calls \"technologists.\" These individuals possess a hybrid skill set encompassing technology, policy, and user understanding, enabling them to develop solutions that consider the complex interplay of engineered systems, people, and institutions. Berjon notes that these technologists are not necessarily the best engineers or policy experts but have a keen understanding of how various domains interact. This perspective allows them to see beyond traditional methods and envision change in the technology ecosystem. The post emphasizes the importance of this role in navigating the digital world and shaping technology and policy for positive societal outcomes. Berjon invites readers who identify with this description to connect and help define this emerging profession.If you don't like the summary, just downvote and I'll try to delete the comment eventually üëç"],"points":1},{"text":["Gmail style querying in the browser"],"points":0},{"text":["Zed editor went Open Source!","See also https://www.reddit.com/r/programming/comments/19enm8m/the_zed_text_editor_is_now_open_source/ and https://www.reddit.com/r/programming/comments/19emfsn/the_zed_multiplayer_text_editor_is_now_open_source/"],"points":0},{"text":["Greenmask database obfuscation tool release"],"points":0},{"text":["üöÄ The Transition from Developer to Manager: Navigating New Challenges"],"points":0},{"text":["SQLite3 Browser Fiddle"],"points":0},{"text":["Ontology-Oriented Software Development"],"points":0},{"text":["The Zed Text Editor is now Open Source","58ms \"insert latency\" doesn't seem fast. I have no problem with it but using the word 'fast' I'd except 60fps on a 4K screenI'd like to know what happens if I open a 100MB json file or if I jump to a line in the middle of a large java file","MacOS only, it's dead on arrival IMO.","from the creators of AtomI tried to like Atom, but it was just so slow. Software needs good implementation, not just good ideas.I‚Äôll pass for now, until I hear about this again.","Do we know how much this different from VSCode? Extension and feature wise."],"points":55},{"text":["Hypothesis Driven Development"],"points":0},{"text":["found very nice article where collected best GPTs for developers"],"points":0},{"text":["Twoslash: Markup for generating rich type information in documentation"],"points":0},{"text":["Visual workflow automation for developers. Integration with PostgreSQL, MySQL, RestAPI, or other popular sources."],"points":0},{"text":["Fun with ‚Äúdeducing this‚Äù lambdas"],"points":0},{"text":["Optimizing NetBSD/amd64 Kernel Boot Time: A Performance Breakthrough"],"points":0},{"text":["Sensenmann: Code Deletion at Scale","Yep, deleting code sometimes feels strange but I agree that it usually pays off."],"points":0},{"text":["MySQL's random number generator"],"points":0},{"text":["The 286's internal registers"],"points":0},{"text":["Kind of annoyed at React"],"points":0},{"text":["Parallel stream processing with zero-copy fan-out and sharding"],"points":0},{"text":["The Zed multiplayer text editor is now open source"],"points":0},{"text":["Why SQL hang for exactly 940s? TCP and Async Rust"],"points":0},{"text":["You (probably) don't need to learn C","Counterpoint: you probably should, anyway.","You know, I never understood this.Am I the only one reading library code? A lot of libraries, even in high level languages eventually become C.Heck, even yesterday I wanted to understand something in the go runtime, so I opened the code and guess what? it was written in C...Also, I feel like when I'm doing performance stuff, I always end up reading a bit of kernel code, which is yet again... written in C.EDIT: forgot to add, IDA decompiler, for when you don't have documentation for a library, like cocoa (curse apple).","you can write lots of great software without knowing CYes - but there is a limit. There is a reason why C and C++ are used for core stuff and many libraries. They are fast. How should python compete there?Despite all the counter-claims made, it's a no-contest.C is far removed from modern computer architectures: there have been 50 years of innovation since it was created in the 1970‚Äôs.Well ... Linux is C ... Microsoft is C++ or C#? So ... it's all about C really.A question I asked a number of people: what mistakes are JavaScript/Ruby/Python developers making if they don‚Äôt know these things (C, syscalls, pointers)?‚Äù. I didn‚Äôt get strong answers.You can easily program without C. But, speed-wise, can you compete? An operating system in Python? Show me the code?You (probably) don‚Äôt need to learn C.I highly recommend people actually master C first before using ruby or python. That is not realistic, of course, but it is MUCH harder to go from ruby to C. Ruby is a lot more fun and easy on the brain. C is not easy on the brain at all. Yet after learning Ruby, seriously learning C and using it is like hitting yourself on the head, when something is sooooooo super-trivial in Ruby, but god-damn awful in C. I absolutely hate printf() for instance; even C++ is nicer with the <<. C in many ways is awful, but there is also not really a way around it for many, many things.Even TIOBE, our GOLDEN STANDARD (everyone hates it), agrees with it:https://www.tiobe.com/tiobe-index/C ranks a bit below Python. Despite being such a horrible language. And there are good reasons why C is ranked so high.","I would argue that \"learning C\" doesn't teach you a lot of those things; developing projects in C gives you experience dealing with the system at a level that allows you to learn a lot of lessons you wouldn't get elsewhere. It's not that knowing C is valuable; it's that the experience you have working in C is valuable.For example: anyone can read a book on malloc() and free() and get the idea that you should allocate memory and free memory; but that doesn't teach you about ownership of memory and how you design software around knowing who owns memory and being clear about that. The result of not knowing that lesson is that you get into C++ and suddenly you're throwing shared_ptr around everywhere because you're not thinking clearly about ownership. Sure it works, but it doesn't work well and some day you run into performance issues with shared pointers being thrown around everywhere causing lock contention.Working in C gives you experience that informs the rest of your practice.","If you're just using more abstract languages that don't run into the common problems caused by C's design, those languages still mostly use C to write things like extensions.Even if you write them in Rust or C++, you still need to write the extension interface parts in extern \"C\" and understand what that means.I also think you should have a rough idea of how much work the computer has to do to provide the abstractions that allow you to ignore things like pointers and memory management in the first place. Sure, there are languages like LLVM IR that are even closer to the metal, but does anyone really program in those?","No one is saying you have to get started with learning C as a beginner, but learning how to read C code has to do more good than harm, no? It‚Äôs not a particularly verbose language ‚Äî for instance, it has a very small number of reserved keywords relative to something like Java or JavaScript. Writing C code forces you to think at the system level and make important decisions that can more directly impact performance.","For most people, learning C would be a waste of time that could be better spent on modern languages. Learn Go, or Haskell, or Elixir, or Rust. I was an early adopter of C, and it was a great advance in its time, but that time is long gone for most people. If you need it, great, have a ball. But most will never need it.","why learn math if you can just use a calculator, right? /sseriously, the lengths people go to in trying to justify why they can keep being ignorant and lazy is astonishing. Just put half that effort into learning C and (reading) ASM and you‚Äòll actually benefit from it. It‚Äòs not as hard as the mental gymnastics you‚Äòre pulling off right now.","That's a very not unpopular take, since a large portion of devs are web/android devs, and most of them don't know anything outside there little environment of framework. Yet it's a terrible take. Learning more languages, libraries, paradigm... is rarely a need but it will definitely make you a better dev."],"points":147},{"text":["Making Rust binaries smaller by default"],"points":0},{"text":["An introduction to temporal logic and how it can be used to analyze concurrency"],"points":0},{"text":["The case of the jump into the middle of an instruction from nowhere"],"points":0},{"text":["scrapscript.py"],"points":0},{"text":["The rise and fall of the standard user interface ‚Äî IBM's SAA and CUA brought harmony to software design‚Ä¶ until everyone forgot","(By me on El Reg.)"],"points":4},{"text":["openSUSE Tumbleweed integrates Wasm: run Wasm workloads with Podman & crun"],"points":0},{"text":["A Web-Transport client and server written in Rust"],"points":0},{"text":["lilvm - small virtual machine written in JS for fun!","Online playground to play with it: https://sandrorybarik.github.io/lilvm/Implementing parser for such thing was fun. Code itself is very easy to understand and extend. Adding new instruction is matter of picking name and operands."],"points":0},{"text":["12 Modern CSS One-Line Upgrades","Add the direct link to the article https://moderncss.dev/12-modern-css-one-line-upgrades/?ref=dailydev","why is this a link to a link"],"points":4},{"text":["üé• Dive into our Stunning HTML & CSS Card Animation Tutorial ‚Äì perfect for both pros and learners!"],"points":0},{"text":["Taxi Location simulator with Kafka, MQTT, Zilla, and Open Street Maps","I built this demo for a conference last year. It simulates taxis sending their location via MQTT to the Zilla MQTT broker, which proxies them onto Kafka topics. The map UI talks to Kafka with Zilla's REST and gRPC endpoints. Check out my blog post or the repo to see how it works."],"points":1},{"text":["Google Docs HTML Cleaner Project! | Jacob Padilla"],"points":0},{"text":["Python vs C++ Speed Comparison","yeah, you accidentally proved that C++ is magnitudes faster.But this is complete bullshit code: with any kind of optimizations enabled, the C++ compiler would turn this into a single return instruction and completely optimize out the whole loop and it would take fractions of a millisecond. whole code boils down to an implicit constant expression after all. you can see that on godbolt by inspecting the ASM generated.https://godbolt.org/z/h3PrP6Enjoh, and with proper initialization:https://godbolt.org/z/je6GzK4hbstill 1 mov","Like comparing a prop plane with a jet plane. One is interpreted, one is compiled. no comparison.","Loops are in the faster parts of the cpython. Python uses bignums as default, a better analogue would be using GMP on Cpp side.On some realworld examples, the speed difference can be in multiple orders of magnitude. C++ compilers do so much magic.But, on Python people likely to use optimized native libraries for bottlenecks; only use python as conveyor belts to move data in and out.","I‚Äôm gonna guess c++ wins","\"Simple yet impactful\". Uh huh. This is some real-world code, for sure.","Okay but now compare the speed of making a change to some obscure business logic in an ancient unmaintained application for which you have no build documentation, no standard build environment, and all the variables are named single letters.Interpreted languages definitely have speed advantages, just not in execution.","Now show me undefined behavior in python...","Fun fact: Python integers are bignums, so C++ will win all benchmarks like this until you reach INT_MAX - 1, after which Python will win by default.","When all you have to offer is speed that means the rest of the language sucks"],"points":38},{"text":["Why Does Chrome Use a Lot of Memory?","I saw the medium link and thought ‚Äúoh god, another medium article.‚Äù Then I took a step back and realized that I was making assumptions.The article is essentially ‚Äúchrome uses the V8 engine, it wants to go fast, it doesn‚Äôt limit memory. Try closing tabs or use another browser.‚Äù","Chrome‚Äôs high resource consumption, such as RAM, is mainly due to V8‚Äôs rapid execution.If this really is the main cause, why isn't \"disable JavaScript\" one of the solutions? The two that are given ‚Äî close tabs & use a different browser ‚Äî are very common advice and pretty obvious, but the cause being JS is much more original and useful info.","Because it does a lot of things","The problem with \"consume a lot of memory\" does not means much, how much is high consumption, how other browser are doing, how do you quantify memory usage etc ...Having 20 tabs open with YouTube and Spotify open and using 2GB, is it a lot, is it not much?Plus there is all the complexity on how you see memory usage vs what the OS is really using, pages in cache etc ..."],"points":43},{"text":["Understanding the Differences Between Web Packages"],"points":0},{"text":["Visual workflow automation for developers. Integration with PostgreSQL, MySQL, RestAPI, or other popular sources."],"points":0},{"text":["Which Programming Language is Ideal for Data Science: Python or R?","There's some weirdness going on, in R it lists \"open source\" and \"platform independence\" as pros (they are for sure), but these also apply to Python, do they not?Also Python has \"database access\" as a con, I'm not actually sure it is, but does R really do it better?I agree that R is better at doing statistics, but I think on the whole the whole juxtaposition of these languages this way is not really useful.I'd put it this way: if you have maths, stats, or theoretical science background, start with R. If you're coming from a computer background (dev, sysadmin, DBA), or perhaps applied science or engineering then start with Python.Both will get you there, and if you really run into any bottlenecks, switching with that amount of knowledge isn't that big of a problem.","It will be will rewritten it in C++ anyway, data scientist just need to provide that sweet weights and a brief algorithm if any not standard features used . So does not matter at all )You did not thought code written by data scientist will be used in production, don't you? )","Html","Would choose python out of the 2","R Is only a letter."],"points":4},{"text":["A new release of zlib emerges","Is there a non-twitter link?","Here's the link to and description of the CVE with a 9.8 base score:https://nvd.nist.gov/vuln/detail/CVE-2023-45853MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API."],"points":19},{"text":["Developing Intelligence ‚Äî A Roadmap to Thriving in the AI Era ‚Äî Part 1"],"points":0},{"text":["Making Rust binaries smaller by default","neat! this is something people have told me turns them away from rust dozens of times, so it's cool to see it fixed","Thanks, that‚Äôs a great addition.","This is a great example of what I think will continue pushing Rust to be a better language, it attracts devs who worry about the little optimization issues, and as a result creates a culture around trying to be as optimal as possible by default."],"points":25},{"text":["Generate knowledge with Semantic Graphs and RAG"],"points":0},{"text":["How To Find The Minimum Path From Top To Bottom Of A Triangle"],"points":0},{"text":["Cloud-Computing in the Post-Serverless Era: Current Trends and Beyond","We've run out of wanted features. Now we're just playing the game of taking market share from each other by redeveloping features they already have but cutting the price and the quality."],"points":1},{"text":["Random Graph Generation Algorithm"],"points":0},{"text":["Why Choose React Native for Healthcare Apps?","There is basically no article here other than ‚Äúchoose React Native if you want cross-platform; otherwise don‚Äôt‚Äù and ‚Äúobviously, that‚Äôs true for health care as well‚Äù.HealthKit isn‚Äôt even mentioned once, so presumably, the author hasn‚Äôt actually looked into integrating this health app with the OS. Or they don‚Äôt care and want something purely in its own ecosystem, which, eww.","Why not flutter?"],"points":3},{"text":["Decoding HTTP: Networking Fundamentals for System Designers"],"points":0},{"text":["When does Postgres stop being good enough for full text search?","Would be cool if they could finally make a postgresql integration like it was proposed here https://github.com/meilisearch/integration-guides/issues/71","Last time I‚Äôve heard of meilisearch, it didn‚Äôt support horizontal scaling. Did this change ?","For point 5, isn‚Äôt access to the search databases usually proxied via an API first? Isn‚Äôt it dangerous to just have your database exposed to the public? Even if you added some authentication on top of the publicly facing search database isn‚Äôt it simpler to route requests through the API first that already handles authentication? Im also assuming a monolithic architecture here"],"points":38},{"text":["Method Chaining in Python: A Technique for Elegant Coding"],"points":0},{"text":["The Weirdest Bug I‚Äôve Seen Yet (it's a GIF image)","Disappointment with the conclusion. The bug isn't even discovered. Yes, they solve the problem and stop the web page crash, but it's unknown whether this is Chrome, Grammarly, or the specific GIF. *Why* does that specific GIF cause the crash? Is it something inherent in the GIF? Was it actually a security attack with a specially formed GIF? You won't find answers in the article.","I was once brought in to help fix a bug that made some javascript stuff on a page act strangely, cause I was known to be able to problem solve sticky issues. I sat down with the dev and we tried to solve it together.This was years ago, I can't remember the specific problem. This was probably jquery era. We quadruple checked every possible input, traced every line, checked every variable along the way, understood every bit of logic... and could not figure out why it would be happening. It made zero sense.A couple of days into this exercise in frustration, I opened a fresh browser and suddenly the stuff all worked perfectly. Holy shit. So I opened the browser debug tools. It was broken again. Closed them, fixed.We had been sitting testing without ever having the debug closed. We never figured out why, but we could never replicate the error with the tools closed, so we took no action and closed the task.","Had a similar issue with Grammarly a decade ago. Our marketing team could not send out emails using one of their tools. Turns out grammarly was injecting their html into the wysiwyg to load their recommendations and it was exceeding message limits. Uninstall the plugin and it worked. I wouldn‚Äôt be surprised if something similar wasn‚Äôt happening here with a malformed gif.","The fact that a navigation bar needs a bunch of additional code is the kind of issue I have with web dev.Why are websites so damn heavy now just to show some images and links? As an non-web dev it just baffles me. Webpages should be loading in microseconds nowadays.","This is examplery of computer problems today. The reality is: no one knows wtf is going on. Unless you're Raymond Chen, you will never figure out all of those weird issues with your computer.Hell, while writing this comment, my keyboard froze for about 3 seconds. Why... how the fuck would I know?","I got a bug before with Microsoft Edge in Mac because Silverlight was installed (I forgot to uninstall it even no application is using it)https://techcommunity.microsoft.com/t5/discussions/solved-microsoft-edge-freezes-for-few-minutes-after-start-up-on/m-p/3373960","Executive Summary:The post describes a challenging debugging scenario encountered by Gusto's internal tools team, where Google Chrome was unexpectedly crashing when accessing certain internal software pages, disrupting customer service operations. Not all users or pages were affected, and the issue didn't occur with other browsers. Initial suspicions, such as a specific Chrome version or extensions, were ruled out. The breakthrough came when an engineer's Chrome crashed after installing the Grammarly desktop app. Further investigation revealed that the crash was triggered by a specific gif file used as a placeholder in a dropdown menu. When this gif was removed or replaced, Chrome stopped crashing. This unusual bug showcased the complexity of software interactions and the importance of collaboration and persistence in problem-solving.If you don't like the summary, just downvote and I'll try to delete the comment eventually üëç","Best job advert I've read for a while.","Using GIFs like it's 1999","What is the evolutive advantage of having such colors? Being seen from 10 km so that you are eaten faster?","yikes.","I really hate blog posts.","Do you have a copy of the gif? I'd like to see if it crashes my image decoding library and/or what is wrong with it.","First, how is grammarly not banned in this org? Grammarly is notorious for being crashy and slow, and is a security nightmare as it sends your keystrokes to the cloud. In my org the domain is blocked and installing it would result in an instant armed escort out the front door.Second, why no analysis of the crash itself? Where is the crash happening? What function/library? What type of crash? How is grammarly involved?This seemed like a pretty cursory analysis‚Ä¶ you‚Äôve isolated and reproduced the problem yes but made no effort to investigate or debug."],"points":380},{"text":["Self-contained Linux applications with lone lisp","I posted that not because the idea to compile a Lisp program to a standalone executable is anything new (for example, Common Lisp / SBCL or Racket can do that since a long time), but because it give an interesting description and insights how it can be done.","This is pretty cool. And using an ELF segment is an excellent idea, even if it did require a change in the linker.I think Clojure with GraalVM does pretty much the same but it sounds much heavier.","I expected \"application\" to be something GUI, not an \"env\" clone. But interesting nontheless"],"points":1},{"text":["Cloud, APIs, Wasm, Security, & More ‚Ä¢ Daniel Bryant & Matt Turner"],"points":0},{"text":["Code is run more than read","Sure let's make a bunch of unmaintainable monoliths. Fuck it, let's just write everything in assembly.","There‚Äôs a lot of software being produced that just doesn‚Äôt care about its users, or that manipulates them, or that turns them into the product. And this isn‚Äôt limited to social media: as a user, I can‚Äôt even book a room, order food, or click on the Windows start button without popups trying to grab my attention; I can‚Äôt make a Google search without getting back a pile of garbage.There is not Cancel button, it is renamed to \"remind me later\", because companies make money showing ads, not providing serviceToday software is badly made in UI/UX terms that even IT people are complaining about the usability.In the 80s only IT people were using the PC and those that needed to do a job.Just imagine IT people reading DOS manual, memorizing all DOS commands and still complaining that using the PC was hard.There won't be PC industry today if that was the case in the 80s , but somehow UI/UX designers of today think they know better then a average IT person","The statement may be true, that code is executed more than read. However, in the long term, it doesn't benefit the user if the code is not well structured and readable, as the software is then hardly adaptable or expandable. In the worst case, there are numerous bugs that limit the productivity of the end user.","Condensed version:The post discusses the evolution of perspectives in software development, emphasizing the shift from writing code for ease of reading and maintenance to focusing on its functionality and user experience. It argues that while maintainable code is important, the primary purpose of software is to serve the user effectively. The post introduces a model prioritizing users over developers and operations, acknowledging the importance of running code in real-world scenarios. Additionally, it considers the business aspect, highlighting the need to balance user needs with organizational goals and constraints. The post critiques common software development dysfunctions and urges developers to consider the broader implications of their work, especially in terms of ethical responsibilities towards users.If you don't like the summary, just downvote and I'll try to delete the comment eventually üëç","Sure, but the cost of running it is way lower than the cost of maintaining it","I thought I was going to hate this article based on the title / preview image, but honestly it's a good article for explaining more \"real world\" software development.It's somewhat simplistic and generalising but still good overall.","Ah, the usual DX vs UX dilemma..."],"points":61},{"text":["Basic Financial Modeling With Python"],"points":0},{"text":["The Programmer's Brain - How it works and how to make it work","Very very interesting! I struggle with cognitive load due to bad habits, this might be the breakthrough in looking for."],"points":2},{"text":["strict structs"],"points":0},{"text":["How not to use aws Athena and lessons learned from real-world data processing..."],"points":0},{"text":["Optimizing Filtered Vector Search Based on ClickHouse"],"points":0},{"text":["Socket for GitHub v2 Introduces Diff Reports, Speeds Up Scan Times"],"points":0},{"text":["DoorDash Uses Service Mesh and Cell-Based Architecture to Significantly Reduce Cross-AZ Data Transfer Costs","Does this approach consider potential congestion in certain zones? And, reminiscent of the Titanic, while their Cell-Based Architecture is inspired by ship bulkheads for fault isolation, what happens if a 'cell' goes down? Does it affect the entire 'ship' or just one compartment? It's great they're saving on costs, but I'm curious about the resilience and performance trade-offs in this architecture."],"points":10},{"text":["XFaaS: Hyperscale and Low Cost Serverless Functions at Meta"],"points":0},{"text":["Choosing Tauri over Electron","I kinda think Electron and Tauri serve two distinct purposes.Electron is a bundled webview that you control and update yourself, with support for npm packages. (which may prove attractive for devs who specialize in front end development)Tauri is a shim on top of the OS's webviews, with support for cargo packages and rust based plugins.I assume Tauri will have an easier time existing in Android and IOS, but you're still tied to Apple/Microsoft/GTK for rendering engine updates.","The problem with Tauri is the webview, and how inconsistent the experience is across platforms. MS uses Edge, Apple I believe Safari (based on Webkit), Linux Webkitgtk2 (based on Webkit). Linux and Apple (with its various OS's), both use a different release of Webkit, with apple products being more up to date. The result is that the availability of specified web API's and the implementation of newer web standards are not consistent across the board. Not too long ago WebGL 2.0 webview support was lacking on Linux, I think it is available now on newer distros. In addition I believe it to be the case that Webviews are updated few and far between if they are updated at all (with the exception Windows 10 and 11). So if someone is running an older version of Linux or MacOS the app may not function on older platforms. Tauri developers need to take this into consideration, query the navigator to see it is compatible and flag the user if the app features are not supported.On the other hand the one good thing about electron is that it often supports the bleeding edge Web API's... but with that being said these newer API's may not run well on aging hardware. So whether to favour one or other is dependant on the application being made. A bookkeeping app then Tauri. An augmented reality online game, Electron.","[deleted]"],"points":9},{"text":["Visual workflow automation for developers. Integration with PostgreSQL, MySQL, RestAPI, or other popular sources."],"points":0},{"text":["Are developers really ready to start managing data assets too?","The more job duties you give developers the harder it will be to find developers for your precious little stack and the longer it will take for any one user facing thing to be done.Not looking forward to the days of full stack + DevOps + cloud + big data (+ AI?) developers","wtf is a data asset and why do i need to manage it?","Holy shit this is needlessly wordy. What is it actually trying to say? It feels like they're trying to invent new buzzwords like \"data mesh\".","No","Editorialised title, as the post is titled \"Data Mesh Architecture\" and reads like a white paper. That is, stiff, full of jargon, and not very readable."],"points":34}]