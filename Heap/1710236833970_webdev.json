[
  {
    "id": "t3_1bct8vv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bct8vv/google_pagespeed_error/",
    "title": "Google Pagespeed Error",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bct5i5",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bct5i5/best_approach_to_customize_tailwind_theme/",
    "title": "Best approach to customize Tailwind theme?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bct3ze",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bct3ze/null_body_in_express_put_request/",
    "title": "null body in express PUT request",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcspc2",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://joshcollinsworth.com/blog/devaluing-frontend",
    "title": "The quiet, pervasive devaluation of frontend",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcsm4p",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcsm4p/website_startup_wisdom_needed/",
    "title": "Website startup wisdom needed",
    "points": null,
    "comments": [
      {
        "comment": "If it's just a static site then you can store it in a private Github repo and host on a static hosting provider such as Netlify or even just in an S3 bucket.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcsimq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcsimq/stack_evaluation_for_website_digital_learning/",
    "title": "Stack evaluation for Website + Digital Learning Platform",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcs2lz",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcs2lz/device_emulator_for_testingpresenting/",
    "title": "Device Emulator for Testing/Presenting?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcs06c",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcs06c/how_to_wrap_long_text_inside_text_in_chakra_ui/",
    "title": "How to wrap long text inside, <Text> in Chakra UI?",
    "points": null,
    "comments": [
      {
        "comment": "I'm pretty sure this is just default html (<p>) behaviour when you don't have any spaces in the string... if it's really a url like the sample suggests then just stick it inside a Link tag\n\nactually just googled and this might help: stackoverflow answer",
        "points": "1 point",
        "children": [
          {
            "comment": "Actually, thats a great idea. Would eliminate the problem entirely. Thnx.",
            "points": "0 points",
            "children": [
              {
                "comment": "no problem. also edited my answer for a solution link if you really wanted to keep the long ass text on screen",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Appreciated.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "CSS?",
        "points": "0 points",
        "children": [
          {
            "comment": "No css currently just working on the backend.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcrzl8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://newbeelearn.com/blog/how-to-add-search-to-static-site/",
    "title": "How to add search to a website using flexsearch",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcrus0",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcrus0/any_tips_about_own_portfolio_website/",
    "title": "Any tips about own portfolio website?",
    "points": null,
    "comments": [
      {
        "comment": "Yes, definitely get your own domain for your website and email. Especially as a developer in the web-realm.\n\nAs for the showcase, personally I prefer the portfolio-page to be minimal, and let the work take the stage. It's weird if you have the most fancy 3D-Superman-Website, and there's only a ToDo-App and two old Github links.\n\nBut that's just my opinion on the matter, the most important thing is that the page represents YOU, and you're happy with it.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Focus on displaying your best work, not just aesthetics. Overcomplicating with too much styling can overshadow your capabilities. Consider a custom domain for professionalism—it's worth the investment.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcrn8f",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcrn8f/how_common_are_remote_dev_environments/",
    "title": "How common are remote dev environments?",
    "points": null,
    "comments": [
      {
        "comment": "It is common when the software relies on a lot of other servies that are hard to replicate locally and keep updated and keep access rights manageable.\n\nWith remote development you only need access to your remote instance from your pc wherever it is and not to all the services it depends upon.\n\nIt is usually the cto who has a preference who makes the decision. I worked with both and remote is easier to manage with a large number of users in crying locations and a lot of dependencies. Local is more flexible and better supported by dev tools.",
        "points": "7 points",
        "children": [
          {
            "comment": "Is it possible to have a truly smooth dev experience in a such a setup?",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Meta does this.\n\nIt really depends on how complicated the team is, what technologies your team uses. There is no right approach to it.\n\nThe commits in a feature PR can be squashed on merge, as is the case for trunk-based git workflows.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We have moved from local to the cloud with development environments. We use virtual machines with dockers and containers.\n\nAll devs can participate in development as they see fit, testing is done in the same environment without having to move code anywhere.\n\nFor us, the cloud has brought cost efficiency and especially speed in development. On top of all this, customers have direct access via Ngrok tunnel to test/see what the work looks like.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We're using a hybrid setup where parts of the app that aren't running on localhost get proxied to the remote services. Best of both worlds imo, but comes with its own set of issues.\n\nI can't imagine working with your setup without losing my last bit of sanity.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We support remote environments at work, but I prefer a local setup for more control and faster speed. If an org has good devops and fast servers, it could be as good as better. It is nice to work on a project and have everything preconfigured. For fast changes, a remote dev environment is quick and easy with no troubleshooting local issues. If unsupported, it can mean spending all day trying to find out why something isn't working.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The money people always try to make devs use VMs and remote into an environment because its way cheaper than buying decent laptops for everyone.\n\nIt's also a pretty terrible dev experience compared to running everything locally and should be resisted at all costs.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yeah, it prevents \"but it works on my machine\" nonsense in projects that have a high amount of dependencies.\n\nDoesn't apply to every kind of project, but it's certainly something I've encountered. It's especially common in Big Data projects.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcr9i3",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/8x83idg4uunc1.jpeg",
    "title": "How bad is this",
    "points": null,
    "comments": [
      {
        "comment": "The multiple hellos have me more nervous than the line count.",
        "points": "15 points",
        "children": [
          {
            "comment": "console.log fixing at its best",
            "points": "8 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Well, I would cry if i needed to work on that.",
        "points": "5 points",
        "children": [
          {
            "comment": "Believe me I'm doing this right now",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "How bad is what?",
        "points": "2 points",
        "children": [
          {
            "comment": "Look at the line numbers…",
            "points": "2 points",
            "children": [
              {
                "comment": "Lol is your whole app in one file?",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Seems like it",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "No, it's just one file of my project",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "No, it's just one file of my project",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "It is not just bad, it is terrifying at this point.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "I know I'm looking for another solution",
                            "points": "-1 points",
                            "children": [
                              {
                                "comment": "The solution is easy. Break it into many components/widgets. However, unless you are making a EXTREMELY BIG AND COMPLEX APP, it shouldn’t take this many lines. Are you unnecessarily overcoding?",
                                "points": "0 points",
                                "children": [
                                  {
                                    "comment": "It will take a lot and I'm a bit lazy 🫠",
                                    "points": "-1 points",
                                    "children": [
                                      {
                                        "comment": "Chatgpt time",
                                        "points": "0 points",
                                        "children": [
                                          {
                                            "comment": "This may be a good idea sometimes I'm really stupid 🫠",
                                            "points": "0 points",
                                            "children": [],
                                            "isDeleted": false
                                          }
                                        ],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hot take: It's probably fine if you're the only person working on this (and will never have to be concerned about handing it over) and it's generating the revenue you want...",
        "points": "1 point",
        "children": [
          {
            "comment": "Yeah I'm only person doing this and believe in my app is very massive",
            "points": "-7 points",
            "children": [
              {
                "comment": "According to downvotes no One believes me 🤣🤣",
                "points": "-4 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Are you putting all your widgets in a single file? You know you could just split them into their own files ;)",
        "points": "0 points",
        "children": [
          {
            "comment": "No not at all I have 12 more files",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "If you have to ask then you know the answer xD",
        "points": "0 points",
        "children": [
          {
            "comment": "Can't agree more",
            "points": "-2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "🤣🤣🤣 I just finished the work I posted this because I'm tired and really bored",
            "points": "-4 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm working on a Node/Express project like this at the moment, and it certainly makes things harder than they need to be.\n\nIn a language that's so capable of modularity, it does make you wonder how things got to this sort of stage.",
        "points": "0 points",
        "children": [
          {
            "comment": "And I'm wondering how it even working I mean how it able to run this amount of code",
            "points": "0 points",
            "children": [
              {
                "comment": "I mean how it able to run this amount of code\n\nSlowly? If it's not slow, that's probably why it hasn't been split out yet.",
                "points": "",
                "children": [
                  {
                    "comment": "Yeah I will split it but it was fun to know how it will look like when you get them all together 😁",
                    "points": "",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": ".",
                "points": "",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "That looks like Flutter, and I can't decide if Flutter or React is the worst. Those line numbers are horrendous though. Also, switch to English, comrade.",
        "points": "0 points",
        "children": [
          {
            "comment": "Yeah it's Flutter",
            "points": "0 points",
            "children": [
              {
                "comment": "Try enabling Dart: Preview Flutter Ui Guides and Dart: Preview Flutter Ui Guides Custom Tracking in VS Code settings, under the \"Experimental\", really helped me with Flutter development.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "And wat it will give to me",
                    "points": "-1 points",
                    "children": [
                      {
                        "comment": "Helped me read heavily nested Flutter source code easier with the help of dash lines",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcqku0",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcqku0/react_js_how_do_i_create_a_dynamic_navbar/",
    "title": "React js - how do I create a dynamic navbar",
    "points": null,
    "comments": [
      {
        "comment": "Use third party Library such as antD or daisyui. They provide pre built dynamic navbars",
        "points": "-1 points",
        "children": [
          {
            "comment": "thanks brother",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcqiv9",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcqiv9/headless_cms_with_multilanguage_commerce_included/",
    "title": "Headless CMS with multilanguage + commerce included?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcp98e",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcp98e/how_can_i_improve_my_css/",
    "title": "How can I improve my CSS?",
    "points": null,
    "comments": [
      {
        "comment": "CSS battle is not good for practice. You learn stuff you should not use on production.\n\nWC3 has a good guide. Best for learning CSS is to make little projects and make them work on every browser/devices.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "icodethis has small daily challenges where you build components with html and css. Doing those regularly will help.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Kevin Powell channel on YouTube is a great place to learn css",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Kevin Powell on YouTube",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Seconding tailwind.\n\nI kinda hate tailwind, but it's actually a decent way to get better at regular CSS",
        "points": "-1 points",
        "children": [
          {
            "comment": "Okay, will try",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Just use tailwind",
        "points": "-2 points",
        "children": [
          {
            "comment": "can you please share some resources?",
            "points": "0 points",
            "children": [
              {
                "comment": "Just google tailwind 🤦🏼‍♂️",
                "points": "1 point",
                "children": [
                  {
                    "comment": "okay",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "If you need help with it we are here to help, but there’s only one tailwind, do some YouTubeing for general tutorials on setting it up and whatnots.\n\nDon’t be discouraged by everyone making it sound super obvious lol.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcp3ki",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcp3ki/how_do_users_make_their_own_stylesheets/",
    "title": "How do users make their own stylesheets?",
    "points": null,
    "comments": [
      {
        "comment": "Safari on desktop has a custom stylesheet. I use it to hide all the nonsense on websites I visit regularly like reddit.",
        "points": "6 points",
        "children": [
          {
            "comment": "I use it to hide all the nonsense\n\nMust not be working too good if you can see my post.",
            "points": "7 points",
            "children": [
              {
                "comment": "insert self burn those are rare gif here",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I use an add-on called Stylus. There’s probably browser-native ways to do it, but I didn’t bother looking.\n\nhttps://add0n.com/stylus.html",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I always thought this was how things like darkreader worked",
        "points": "3 points",
        "children": [
          {
            "comment": "How does it work?",
            "points": "0 points",
            "children": [
              {
                "comment": "The same as inspecting element on a website and editing the CSS. The extension/plugin API in browsers give extensions like Dark Reader access to the DOM of the pages the user has up. The plugin overwrites the CSS on those pages.\n\nThe users themselves won’t apply custom stylesheets manually and these plugins do that automatically, based on some preferences. There is very few cases where this matters for the developement",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Thanks.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcp2bc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcp2bc/please_help_wix_project_pages_question/",
    "title": "PLEASE HELP!!!!!! Wix Project pages question",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcoaf9",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcoaf9/vue_vs_svelte_which_is_better/",
    "title": "Vue vs Svelte: Which is better?",
    "points": null,
    "comments": [
      {
        "comment": "I like Svelte but the two are very similar. This is an entirely subjective question.\n\nI would look at Nuxt and Sveltekit as the ecosystem is probably more important than the component library syntax",
        "points": "12 points",
        "children": [
          {
            "comment": "Thank you for your suggestion. Also let me know is there any differences in performance.",
            "points": "-1 points",
            "children": [
              {
                "comment": "Svelte is theoretically faster, the compiler does a lot of heavy lifting for optimization. But I gotta say at this point if you're having performance problems it isn't the framework's fault. They all do a pretty good job.",
                "points": "3 points",
                "children": [
                  {
                    "comment": "Totally agree. Also from what i understand svelte also produces smaller bundle sizes for a low amount of components. However as the amount of components increases vue does better.",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Thanks for the insight!",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "You're absolutely right about Svelte being optimized at compile time.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Both are very capable, can’t go wrong either way.\n\nThat being said, Svelte’s syntax is more concise, scores better in performance benchmarks and because it doesn’t use virtual dom by default you can just use the whole JS ecosystem. Using frameworks like Vue (without Vapor) and React means having to use specific Vue/React libraries, with Svelte you can just tap into the vast JS ecosystem.\n\nVue’s biggest upside is that there’s a bigger chance you may use it someplace because they’re already using it.",
        "points": "5 points",
        "children": [
          {
            "comment": "Thank you for valuable insights.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Just to be a bit of a voice of reason rather than bias here... There's a reason multiple frameworks exist (I know... This is JS and \"multiple frameworks\" is an understatement). It's because each is a better choice compared to others given certain requirements. No one framework is the \"best\" overall.",
        "points": "2 points",
        "children": [
          {
            "comment": "Thank you for sharing your expertise.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Having used both, I think Svelte is a better version of Vue. I prefer the templating syntax (although I prefer JSX other both) and also don't like how Vue uses strings for everything (@click=\"someFunction\") vs (onclick={someFunction}).\n\nCheckout Svelte 5 vs Vue 3 in Component party",
        "points": "6 points",
        "children": [
          {
            "comment": "Thank you for sharing your thoughts.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Amount of libraries and jobs in Svelte are much less. It's hard when you have to waste your time building your own package for a small thing because you can't find one already built.",
        "points": "1 point",
        "children": [
          {
            "comment": "Okay, you mean I have to build different packages for different purchases. While VueJs offers a large numbers of libraries.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Vue because its compiler does not override javascript built in keywords/logic",
        "points": "1 point",
        "children": [
          {
            "comment": "Great!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "jQuery",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Consider team expertise, project scope, and performance requirements before deciding.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "svelte because no virtual dom",
        "points": "-1 points",
        "children": [
          {
            "comment": "Vue does have vapor mode in development which will eliminate vdom on an app wide or component basis",
            "points": "1 point",
            "children": [
              {
                "comment": "Have any references?",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "we'll see",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bco37i",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bco37i/sending_video_frames_from_client_to_server/",
    "title": "Sending video frames from client to server",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcn31j",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://mailman.nginx.org/pipermail/nginx-devel/2024-February/K5IC6VYO2PB7N4HRP2FUQIBIBCGP4WAU.html",
    "title": "announcing freenginx.org",
    "points": null,
    "comments": [
      {
        "comment": "Quick rundown:\n\nMaxim Dounin announced the start of freenginx.org, a project aimed at continuing nginx development free from corporate interference, in response to F5's new management decisions that conflict with the open source project's long-standing security policies and developer autonomy. Dounin's decision comes after F5's actions contradicted an agreement allowing him to maintain his role in nginx development voluntarily, leading to concerns about the project's direction under F5's control.\n\nIf you don't like the summary, just downvote and I'll try to delete the comment eventually 👍\n\nClick here for more info, I read all comments",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I would need a far more compelling reason to switch to Freenginx than just this incident, which I do agree with their stance at face value",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcl4gi",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcl4gi/how_to_send_email_from_pern_apps_contact_page/",
    "title": "How to Send Email from PERN App's Contact Page?",
    "points": null,
    "comments": [
      {
        "comment": "Check out Formspree.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bckv6k",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bckv6k/capacitorcommunitystripe_vs/",
    "title": "capacitor-community/stripe vs @revenuecat/purchases-capacitor vs glassfy",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bckfjq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bckfjq/use_the_same_domaindnsemail_for_all_projects/",
    "title": "Use the same domain/DNS/Email for all projects?",
    "points": null,
    "comments": [
      {
        "comment": "For side projects, a huge monorepo managed by Nx. So I can easily share stuff across different projects. Also I always start with TypeScript for everything, because I can share common code across API and FE.\n\nInside the monorepo I have another directory for code managed by Bazel. For things like Golang/C++ servers. But these are rarely needed.",
        "points": "2 points",
        "children": [
          {
            "comment": "Ah I like the monorepo approach - never really tried it but may here soon.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I use porkbun as my registrar.\n\nI have a terraform template I use for all my side projects which sets up a project in GCP with a DNS entry, Google Cloud Run and MySQL or FireStore. Then I just point porkbun to GCP nameservers. I use SendGrid for sending emails and Google Workspace for receiving.\n\nThese days I can set up a full experimental project complete with a domain and production ready GCP structure within minutes and I'm pretty happy with everything.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bckbl5",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bckbl5/wsl2_is_slow_working_with_stripe_api_pushing_to/",
    "title": "WSL2 is slow working with Stripe API + Pushing to git.",
    "points": null,
    "comments": [
      {
        "comment": "Could be related https://github.com/microsoft/WSL/issues/8171",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I use WSL daily and never had these issues. I’ll flip through the settings tomorrow morning and see if I see anything you can mess with. Just commenting so I can come back if I find something.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds like your files are on the windows filesystem instead of inside of WSL. To be super efficient everything should be inside of WSL. You should launch your VSCode instance from WSL as well. That way your dev environment is entirely inside of WSL. Sure Windows offers a layer to work between the two but it's not exactly fast as you are seeing.",
        "points": "-5 points",
        "children": [
          {
            "comment": "I have everything inside WSL. I’ve just ran a speed test out of curiosity and it seems I’m getting 2mb down. So I’m now trying to figure out how to get my normal speeds. I think this is my issue",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "This is already ruled out in the OP.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Which directory are you in, in Ubuntu? Tell me the path.",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds like your files are on the windows filesystem instead of inside of WSL. To be super efficient everything should be inside of WSL. You should launch your VSCode instance from WSL as well. That way your dev environment is entirely inside of WSL. Sure Windows offers a layer to work between the two but it's not exactly fast as you are seeing.",
        "points": "-8 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bciyhq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/6xqj2d9xosnc1.jpeg",
    "title": "how to do a website like this?",
    "points": null,
    "comments": [
      {
        "comment": "CSS grid",
        "points": "13 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "By creating it one by one. One stop at a time.",
        "points": "12 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds like a job for a web developer.",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "search for masonry that may help",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The real thing you should do is, if this is for work, suggest edits because the UX is so bad. As a person looking at this design, I have so many widgets and squares that I feel lost and I have no idea what I'm supposed to be doing here.\n\nNow, if you really must do it, CSS grid along with some grid template areas should do the trick.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "By coding it? What kind of question is that. If you want more specific answers ask more specific questions.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Electron or react native, whatever backend. Lawyers. Account managers. Content isn’t free.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Can you be more specific?\n\nIs the question: How to make a website page that looks like a bunch of rectangular tiles? Or is the question: How to make an entire website that features pages like the examples in the frames?",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcimge",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcimge/i_need_career_advice/",
    "title": "I need career advice",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcijro",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcijro/is_it_worth_messing_with_the_url_structure_of/",
    "title": "Is it worth messing with the url structure of Shopify?",
    "points": null,
    "comments": [
      {
        "comment": "Honestly, messing with the URL structure of Shopify can be a bit of a pain. While it may irk you that you have limited control, sometimes it's best to work within the system rather than fight it. People have definitely found ways to customize it, but it could end up being a headache. Consider the trade-off between aesthetics and functionality before diving in. Good luck!",
        "points": "2 points",
        "children": [
          {
            "comment": "I guess I’ll play around with it on a test store before implementing it on a clients site. I can’t believe Shopify has this limitation though. Crazy",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Thank you",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcidun",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcidun/free_hosting_with_google_firebase/",
    "title": "Free hosting with Google Firebase?",
    "points": null,
    "comments": [
      {
        "comment": "GitHub Pages also works. Probably better for your use case if you have no backend whatsoever.",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yes, whilst there are limits many services have generous free tiers like Firebase, Oracle Cloud, Cloudflare pages, etc. The whole idea is that they take the loss now so you stick with them when you start spending money.",
        "points": "2 points",
        "children": [
          {
            "comment": "That's amazing, I had no idea... do they have tech support too? Companies like Google seem like they are totally unreachable in that sense",
            "points": "0 points",
            "children": [
              {
                "comment": "Yes, Google Cloud, AWS, Cloudflare and Oracle will all appoint you an account manager when you spend enough money with them which gives you direct customer service. Otherwise, not really, don't expect to get far without being a paid customer.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Many services offer a free bottom tier. You might also want to check GitHub pages and Netlify.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Many services offer a free bottom tier. You might also want to check GitHub pages and Netlify.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bchhzm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bchhzm/how_and_where_to_store_spotify_api_access_token/",
    "title": "How and where to store Spotify API access token?",
    "points": null,
    "comments": [
      {
        "comment": "Store it on the server. The client shouldn’t even be aware of the token.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When working with API access tokens, it's crucial to prioritize security. Storing tokens on the client-side is risky due to potential exposure and manipulation. Therefore, it's recommended to store tokens on the server-side. You can use server-side sessions, databases, or environment variables to securely store and manage access tokens. Using environment variables is a common approach, ensuring sensitive information like tokens are kept separate from the codebase and inaccessible to unauthorized users. Additionally, consider token expiration and implement mechanisms to refresh tokens when needed.",
        "points": "1 point",
        "children": [
          {
            "comment": "There's nothing wrong with storing tokens client-side in some situations. OP is a bit vague on what they're doing, but this is potentially one of them if visitors need to provide their own token in order to use OP's app (though in that case OP should just be using oauth if possible)",
            "points": "-1 points",
            "children": [
              {
                "comment": "It's still a bit risky in most cases when it comes to exposure and manipulation, it's better to be safe than sorry, but I do definitely hear you.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Gosh I been learning oauth and i was just mortified the way ppl say to store it in session history. the thing with oauth is it isnt rlly complicated, but idk why the videos always use horribly insecure examples. Now tbh this rlly depends on the site too. If you’re usin openid to get the user to log in and u set a rlly limited scope then it might not be that big of a deal. If not then u need to use the BFF pattern to either save the token or keep it in a http only cookie. doubt you’d want to store state, and if the token is too big just just split across cookies. much luck.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcgy8a",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcgy8a/how_do_you_explain_to_nontechs_about_necessary/",
    "title": "How do you explain to non-techs about necessary code cleanup?",
    "points": null,
    "comments": [
      {
        "comment": "Are you doing this because it's the best thing for the client? Or because you don't like the codebase? It's often better to let crappy code just sit there and not hurt anything.",
        "points": "104 points",
        "children": [
          {
            "comment": "Both. The current codebase is just not maintainable. If the client was smaller, I'd say maybe bandaids are appropriate, but considering the size of the company and the importance this site is to their workflow, they really aren't.\n\nIt's often better to let crappy code just sit there and not hurt anything.\n\nI tend to agree, which is why I've only been refactoring when I've had to make major changes to a section, rather than wanting to go through and redo it all.",
            "points": "8 points",
            "children": [
              {
                "comment": "It honestly sounds to me like that's not your decision, that they hired you to \"add a button\" and you're like \"Okay, let me re-write this in React first\" (That's overly dramatic I'm sure, but you get the gist).\n\nIf I were in your shoes, I'd sit down and explain to them that the codebase is a complete mess. That any changes to it are just going to slowly lead to instability and more bugs as it's been written without any best practices, testing, etc etc in mind. Then they need to either make the decision to put aside a budget to re-write the whole thing, or that they don't care if it gets buggier and just want you to add buttons here and there.",
                "points": "36 points",
                "children": [
                  {
                    "comment": "They hired me for my expertise, including recommendations on how to proceed with the site. They understand the need for it, and are ok with it, I'm just having a hard time explaining the approach to how I'd like to proceed.",
                    "points": "11 points",
                    "children": [
                      {
                        "comment": "Just go really non Techinical. \n\ntell them it's a massive mess , reinforcy they hired you for your experience\n\nGive them three options: \n\nWe keep adding plaster We fix as we go We do a complete rebuild.\n\nThen tell them your recommendation in simple terms.  Or over estimate every task and just clean it.",
                        "points": "18 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "What about putting it in terms of a house or a car?\n\nIf your heating is poor, it might not cause immediate problems but down the road a pipe could burst.\n\nIf your roof leaks you might get mold\n\nIf you don’t change your oil your engine could seize down the line, etc",
                        "points": "13 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "Bring it into the physical world.\n\n\"Imagine you visit a factory, and instead of a continuous motion assembly line it's a giant pile of parts. Nothing is labelled, nothing is in drawers. To get anything done, workers go to the pile, rummage through until they find they part they need, take it to their workstation, mess around with it, then bring the half-finished thing back to the pile and start over. When you ask the factory owner why they don't put some organization in place, he says, \"Bruh we just don't have time! Can't you see how busy everyone is looking for parts?\"",
                        "points": "13 points",
                        "children": [
                          {
                            "comment": "This guy analogies",
                            "points": "2 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "Excellent analogy. Never thought of that one before",
                            "points": "",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "Speak to them in numbers. Refactor takes about X amount of time but will save X amount of time when adding new features or making updates. It can save you upwards of X amount of dollars if you spend X amount currently. If there are vulnerabilities then start pointing them to potential fines they could receive and give them real world examples. I was at a company where an art site was sued because the alt text on the images coming from the CMS was left blank and thus people just got generic alt text (image_desc_placeholder) when using a screen reader… cost them a bit of money for something really simple. Non tech people understand money. If you can translate the tech issues to money then there shouldn’t be an issue.",
                        "points": "2 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "They hired me for my expertise\n\nThey why are you asking a question nobody on Reddit can possibly answer?\n\n​\n\nI'm just having a hard time explaining the approach to how I'd like to proceed.\n\nMaybe that's a reflection on it being a bad idea",
                        "points": "2 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "Make the recommendations before making the changes. Don't go ahead with them until they've agreed to pay you for them.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "A lot of what I've been doing they really 100% don't understand. For example, as I've worked on a particular page for a request they made, I basically remade that page in an oop manner and got it from a 5s+ (yes, you read that right) page to a 0.2s page (and this isn't an obscure page on the site, it's one of the main ones that gets used a bunch!). I told them I ended up redoing most of the core logic, but beyond that they really aren't going to understand anything I explain.",
                            "points": "",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "As a fellow dev and business owner: as a dev I understand your concern. As a business owner, if things are working and generating sales, there's absolute no need to change.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "I strongly disagree. That's a bit like telling someone you only change your oil when your car breaks down. Security vulnerabilities are the prime example where things can be working great and generating sales one minute, and a potentially business ending catastrophic disaster the next.",
                    "points": "",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Oh! I’ve got a really good read. It’s a post from Martin Fowler EXACTLY about this subject. It’s called Is High Quality Software Worth the Cost?\n\nIt’s excellent. He makes a business case for how there isn’t a trade off between quality and speed. But the best part is that it teaches you how to frame it for non technical leaders to understand.\n\nHere it is: https://martinfowler.com/articles/is-quality-worth-cost.html",
        "points": "11 points",
        "children": [
          {
            "comment": "On that note, Kent Beck's recent book, \"Tidy First?\" touches on many of those questions, too.",
            "points": "5 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "That’s the fun part. You don’t. In my experience they never give a shit.",
        "points": "33 points",
        "children": [
          {
            "comment": "They give a shit that small changes lead to bugs. When there is really a lot spaghetti, my brain runs out of capacity to track dependency and goes blank.\n\nClient fires me, but devs with the capacity go for better jobs. So they hire the next mediocre dev. Rinse repeat.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I compare it to living in a house and never cleaning. You can get away with it for a short amount of time, but eventually it becomes a horrible, disgusting place to live, and the longer its left the longer it takes to tidy\n\nCode is no different. If no resource is allocated to paying off tech debt, the entropy of the code base increases. Any change takes longer, regressions become more likely, and you increase the risk of losing good devs",
        "points": "9 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "In most of my experiences, like another commenter said, you don't. They don't listen. But if you want a list, here; When explaining the necessity of code cleanup to non-techs, it's essential to frame it in terms of business benefits rather than technical jargon. Here's how you could approach it:\n\nEmphasize how cleaner, more organized code can lead to faster development times for new features and bug fixes. This efficiency ultimately saves time and resources for the company. Explain that maintaining messy code requires more time and effort, leading to higher costs in the long run. By investing in cleanup now, they can reduce ongoing maintenance expenses. Highlight the importance of addressing security vulnerabilities in the codebase. Emphasize the potential risks and liabilities associated with leaving these vulnerabilities unresolved. Point out that a clean, modular codebase is more adaptable to future changes and enhancements. This scalability ensures that the website can grow with the company's needs without significant rework. Remind them that a well-maintained website reflects positively on the company's brand and enhances the user experience. In contrast, a clunky, error-prone site can frustrate customers and damage the company's reputation. Position code cleanup as a strategic investment that sets the company apart from competitors. A modern, efficient website can attract and retain customers, giving the company a competitive edge in the market... Blah blah blah. But there's pretty much no way they will care to listen to it all. They'll figure it out eventually on their own time.\n\nBut, when discussing specific projects like scrapping the mobile site and making the desktop site responsive, break down the benefits into manageable chunks. Emphasize the iterative approach as a way to minimize disruption while steadily improving the site's quality. Emphasize your expertise and experience in handling these matters, reassuring them that you have the best interests of the company in mind. Offer to provide regular updates and progress reports to keep them informed and engaged throughout the cleanup process as well.",
        "points": "8 points",
        "children": [
          {
            "comment": "Thanks. Good thoughts. Yeah, I often get too techy in my explanations. Need to keep it business focused.\n\nGood ideas about the mobile approach.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You just put it in terms they measure by. “If we don’t cleanup xyz, then feature “abc” and “def” are going to take # of sprints longer to complete and we will be delivering new features x% slower.”\n\nOnly do this if it’s true otherwise who gives a shit",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don't come up with your own argument. Here are some articles about studies you can cite.\n\nYou can document a few of the issues and estimate the percentage of their code base that is affected.\n\nThe Cost of Bad Code\n\nThe Cod Quality Advantage: How Empirical Data Shatters The Speed vs Quality Myth\n\nBottom line: crappy code requires 3x as many hours to implement a new feature. Makes sense, right? You have to untangle the garbage, rewrite the garbage to make sense, and then add a new feature.\n\nGood luck. I'm fortunate to work with management that understands there aren't any corners to cut in software that are worth it.",
        "points": "1 point",
        "children": [
          {
            "comment": "Thanks! Great ideas!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Amazon had a tenet for its principal engineers Respect What Came Before that summarizes this situation nicely https://www.linkedin.com/pulse/i-once-had-someone-tell-me-talk-down-them-mohammad-quraishi/\n\n​\n\nBut sure that might not answer your question directly, so let me try to tackle the root of your problem\n\nHow do you explain to non-techs about necessary code cleanup?\n\nThe answer is your dont explain. You need to make a case (using real data) for why the cleanup is necessary from a business perspective.\n\nExamples,\n\nWe had 30 customer facing bugs over the past year\nOur engineer team spends X Hours each week on manual work that could be eliminated.\nWe are unable to update to a stable version of software because we are dependency on a legacy library.\n\nFrom their illustrate how long it would take (or how much it would cost to fix this), and provide the equivalent cost estimate if you avoid fixing it.\n\nOnce this information is available your business will be in a good position to make a call about whether or not changing this cod is worth the investment.\n\nFinally, this makes sure there is actually a problem with the code, and that its not just a personal preference that you are trying to impose",
        "points": "1 point",
        "children": [
          {
            "comment": "Bingo, its all about costs. Staying course projected cost is x, changing course projected cost is y, breakeven is z time.\n\nNow THEY can make an informed decision.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "\"This is the worst kept code base ive seen in my entire career. It's a time bomb and a time sink. Hire a consultant to verify my claim. It takes me twice as long to do something for you as it normally would.\n\nFor now, I'm happy to keep going. I'll do my best to keep overages reined in. But I want to put an offer on the table to eventually fix this for y'all. Including the security vulnerabilities. If that sounds like something you would be interested in, please let me know and I'll put together a proposal and roadmap for how to structure the clean up and rebuild. Again, I invite you to utilize a consultant to check my roadmap, it could inform our plan even further so it would be a value add.\"",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I do not do it, I just put that time in my feat crunching time.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Dunno if this analogy fits your situation exactly but I've often thought about how to beat describe tech debt.\n\nThink of building an app as building a town.\n\nYou start with a road and hobble together a couple houses and you have a town. You keep adding houses but eventually your little road is too busy and causing problems. It needs some extra lanes but there are houses in the way. At some point you need to demolish a row of houses so you can add extra lanes.\n\nYou can add the lanes and replace the houses and keep going OR you can build a super highway in preparation for even more houses at the cost of spending more resources now but saving them in the future.\n\nCan use the town analogy in a lot of ways, like we built a town and we can keep expanding and it turning into a chaotic mess, or we can bulldoze the town and rebuild it with everything it needs to become an organised city.\n\nOr something..",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'm a senior dev with 20+ years of experience\n\nThis. Tell them this. If they don't listen to you then it's best to walk away because I guarantee you they will start blaming you when things eventually implode.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You’re just gonna have to accept that it’s not perfect and that you got hired to make small changes and not the rewrite their entire code base, it’s a tough pill to swallow. I feel ya man, i just changed jobs and now i’m suddenly responsible for 70+ individual websites who are all complete piles of garbage but unless they’re paying for a rebuild than my job is to maintain, if a client is paying next to nothing then they get next to nothing, you gotta put your pride aside and adjust your expectations and adjust your perspective on what you’ve been hired to do.",
        "points": "1 point",
        "children": [
          {
            "comment": "This is the correct answer. I really dislike the people just looking from the business side, which is really bad at the later run and even causes you problems (aka feature delay) when the project becomes bigger and unmaintainable.\n\nIf I was OP, I would run and look for something with a higher standard.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You are definitely a really competent person, and probably the only suggestion I feel to give you (from a person who has less experience then you) is to keep the discussion completely oriented toward what's best for the business, and not purely for the dev work.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When you’re talking about projects this size and a business this size, they break everything down to costs and what their return going to be.\n\nThere’s too much to break down here but if there are as many bugs as you say there are, they are likely spending a good chunk on customer support or if they are using it to sell/operate then their agents or staff are probably hindered by the system and not making as much as they could. These are two good angles to tackle but it requires an in depth analysis of costs, problems, internal operations and a lot more.\n\nBut if they are making billions it likely the system is already working quite well and you are going to be pushing shit up hill to people who don’t care about spending $100k+ rebuilding the system to save a few hours of development a month, that is not a good business decision. If you can get them to save money that impacts their bottom line then you may have a case but otherwise it’s not worth the headache.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You just put it in terms they measure by. “If we don’t cleanup xyz, then feature “abc” and “def” are going to take # of sprints longer to complete and we will be delivering new features x% slower.”\n\nOnly do this if it’s true otherwise who gives a shit",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Infrastructure. They're the government and at some point they'll need to build new roads and bridges or chip manufacturing can't function.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Just make a line chart with an exponential curve showing that the longer a codebase stays without refactoring while new features are added, the longer it takes to add newer features and fix potential bugs. Source: reddit.com",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You don't, just chip away at it piece by piece as you touch the different parts of the code.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Emphasize about security risk. Non tech often freaks out when it comes to security.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Let it break.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I think the most important thing they would like to know is how a messy codebase will affect their project and business, so tell them about that.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Show them this\n\nhttps://www.reddit.com/r/cableporn/s/9mBvbsponI",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Tell them you'll get someone to pain their house but won't tidy up after they finish.",
        "points": "0 points",
        "children": [
          {
            "comment": "Lol. Yeah, one of the examples I was thinking of was using someone's shop in their garage, but you can't get to any of the tools because there's so much mess in the way.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "What is the industry category? Are they selling complex products through that website or something simple? With complex products their customers will expect best practice website, on simple things not so much and you can leave it as is.",
        "points": "0 points",
        "children": [
          {
            "comment": "It's entirely internal which I think they've been able to get by as long as they have -- the only users are employees. It is part of their order processing process, though, so for a business doing $4m/day, even internal downtime can add up. When I first came on board, some of the main pages took 5-10s to load, which really adds up if you use the site all day.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I think it's best not to mention it at all. Just every time you touch something, try to improve the changed code and its surroundings. If you need to make estimates for new features or bug fixes ALWAYS say 3 times or more the time you actually think it will take. Write lots of tests.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hope they at least have a good test suite setup. Otherwise this would be my first step to do. It would not only help finding existing bugs but also give you a safety net when refactoring the system. Additionally you would get a deeper insight into the current system and learn more of its intricacies.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "In my experience, the \"easiest\" way is to give them numbers. Let them know exactly how much time you need for tasks of various complexities before and after such a refactoring. Then it's a simple break even calculation. If you take x amount of time refactoring and save y amount of time per task afterwards, how long until you are net positive. It becomes a simple business decision that way.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You need to work as a team with everyone involved. Having greater autonomy/silo'ing yourself disconnects you from the business, and what the business and/or your supervisor needs.\n\nInvolve yourself with the business processes, and offer insight, as an expert in your domain and from your perspective as a dev, as to where a process can improve and how you would do it...and leave it at that. Yes - you were hired for your experience, but also you were hired to address their immediate concerns.\n\nIt's not about pointing fingers, blaming luddites, and etc...it's about making sure the company stays successful in doing what it does best. Your piece of the pie is only but a part of the mission, and throwing a hissy fit and wanting to burn the whole codebase down to the ground because of xyz...will not help you retain that job for the long term (if that is your goal). You have to see problems from their perspective, and frame your concerns/problems within that perspective.\n\nWork with people, compromise, prioritize.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Zero OOP practices. I don't think there are even any classes that aren't third party libraries.\n\nI read this and literally thought \"oh good, at least they didn't make the old mistakes of using OOP or classes\".\n\nI'd definitely go with your idea of just making it responsive to any size screens but I wouldn't replace mobile version until that's ready.",
        "points": "0 points",
        "children": [
          {
            "comment": "Yeah, my thought was to replace the pages one at a time as I make the desktop responsive. Luckily, the site has a reasonable front-end router, so it should be pretty easy to flip them one at a time. I think the previous dev was slightly better at front-end than back end.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It will cost more money if you don’t do it ?",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcffnf",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcffnf/error_handling_question/",
    "title": "Error Handling Question",
    "points": null,
    "comments": [
      {
        "comment": "An issue came up that the entire carousel failed to load because item 2 in the carousel requires some data from vendor which failed to respond and so the api gave a 500 with an error message indicating that the data couldn’t be retrieved from the vendor.\n\nSo, in short, if a single item in request for a list fails, what should be done about it?\n\nThis is largely about user expectations. How critical is the data for UI function?\n\nIf the missing item can simply be excluded, then do that. An example would be a news carousel where the user would not even know if the story exists if it's simply removed.\nIf the user is expecting that item to load because they want it, but it isn't critical for UI function, then a message should display notifying the user, ideally with some kind of potential resolution such as \"try again.\" An example would be a weather widget as a slide in the carousel. In this case, the slide would exist, but with a nicely styled message.\nIf the missing data is required for a crucial part of the app, then a message should be returned instead of a carousel, along with an appropriate status code that describes the state of the request. An example here is more difficult to describe, because you shouldn't be putting globally crucial data in a carousel.\n\nAs for the 500 vs 200 return, in this case return a 200. The reason is, you still want to render what's available, and any non-200 code is telling the browser not to render the payload as expected.\n\nThat said, in other cases its a common bad practice to return a 200 even when there's an error. Don't return a 200 with an error of access denied, for instance. But if you want to render the data returned, even partially, a 200 is the best option.\n\nAs for the notification that the vendor is failing, this should happen on the backend. If there is info that is relevant for the user, sure display a message there that helps them. But your notifications and problem detection should happen on the backend.",
        "points": "4 points",
        "children": [
          {
            "comment": "I would question the statement that in other cases it’s a bad practice to return 200 even when there’s an error but not in this case. Isn’t it still a bad practice here?\n\nThe entire carousel is non critical and in fact probably annoying to the user so no user is going to be upset about either the entire carousel or the item in the carousel being missing.\n\nThat being said I think you are saying to choose the best user experience over any technical reason to return the error so that is a valid point.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "As an alternative, could you do some validation/error handling on the front end to just move on to the next file if an error occurs? I'm no expert, but that seems easier that modifying the API return codes to give 200 even when the file is missing.",
        "points": "2 points",
        "children": [
          {
            "comment": "So a major part of the problem is that the front end calls one single api which returns all of the carousel items. It couldn’t move on to the next item because the backend didn’t return any items, it returned 500 and an error message. We did briefly discuss that maybe we should split the apis so that’s one possible alternative but this would be really tough because the api is ordering all items and there may be certain items we don’t want to show if others are displaying.",
            "points": "0 points",
            "children": [
              {
                "comment": "Gotcha, so there's only one single return code for all of the items returned at once, and no opportunity to test that on the front end. Then yeah, you don't want it to fail and just return nothing. I would say option one. Maybe put the collection in an array and then just iterate over it. That should leave no gaps from anything missing in the API return.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Just curious on why 1 over 2, I feel like 2 is more in line with your first answer? There was a concern with 1 that we may never identify that the item is missing from the carousel because it’s just one of many and while we’d definitely log the error it’s not likely to be looked at unless an issue is reported and the proposed mitigation for that was basically option 2 where at least you can see in the response that the api was unsuccessful, even if you ignore items with a certain status on the front end.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "I see your point. So, this would be a non-standard additional return code for each missing item, that you could then log? Yeah, that makes sense to me. I was mostly just saying that you don't want it it to fail, but you make a good point about wanting to know about it as well.",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "If you're getting a list back, the request itself was a 200, but perhaps each item in the list should also include a status. This assumes that the API knows if an image will fail to load though. For example, maybe the data the API is reading is/was correct, but something happened on the CDN's side, like someone moving the image for whatever reason.\n\nThe UI should be validating the API response in any case, especially if you're dealing with a request from a third party. Even then, the browser has to make an additional request for the image itself, which would return a response agnostic of the API, so the carousel could have recovered gracefully in either case.",
        "points": "1 point",
        "children": [
          {
            "comment": "Curious what you mean by the UI should be validating the API response? What kind of validation would you expect here?",
            "points": "1 point",
            "children": [
              {
                "comment": "The UI calls one api to retrieve these items to display.\n\nMaybe I misinterpreted, is that a fetch request that gets a JSON response?",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Yes, fetch request with json response.",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "Ok, yeah, so when the request is received, there should be some JS on the client side that ensures the response is structured as expected. AJV is a really great library for this.\n\nThat way, if the API changes or you get an unexpected result for an item, you can handle it accordingly. In this case, the faulty item could have been removed from the list and the carousel could have simply initialized with one less item in the rotation.\n\nedit: Some orgs don't bother with this when they control both the API and the client because they can guard against it with integration tests. When you're dealing with a third party though, client side validation can really save your sanity.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Gotcha, so this is option 2 but suppressing the item instead of showing the error visually. It makes sense to me but it led to questions about catching all exceptions on the backend, in order for this to work you have to catch any exception that might happen while determining item 1 and 3 and so on and it’s usually said to be bad practice to catch exceptions you can’t handle. Is this a special case because the 2 items are logically unrelated? It made me think what if you have one prop of a response you are successfully able to generate and another you aren’t. Should you catch any exceptions setting prop 1 so that you can continue on to set prop 2? Seems like we all accept that if an api errors setting prop 2 we aren’t going to get prop 3 or 4 so why’s it different in a list?",
                            "points": "1 point",
                            "children": [
                              {
                                "comment": "It heavily depends on the feature.\n\nIf you're validating a shopping cart for example, where an invalid item could influence how a user is billed, it might make sense for the feature to fail so that the user can't complete the use flow under false pretenses.\n\nOn the other hand, lets say your company gets revenue by showing a list of ads. If one ad fails, it makes sense for the feature to recover so that your company still gains revenue from the remaining ads.",
                                "points": "1 point",
                                "children": [
                                  {
                                    "comment": "Yeah, I see what you are saying but I also feel like it’s a whole lot more important that the shopping cart works than it is that the carousel shows, the user is going to be more upset about the transaction not going through than not seeing an ad so from that perspective aren’t I going to want to preserve as much functionality as I can for the shopping cart and not mind so much if the whole carousel gets suppressed?",
                                    "points": "1 point",
                                    "children": [
                                      {
                                        "comment": "What if the transaction goes through for the wrong amount though? Or, if your company gets significant revenue from ads, a failing carousel could cost a lot of money.\n\nSemi off topic: I once worked for a coupon company that saved like 10 million dollars a year on printer ink by reorienting a barcode. It kind of makes you question how much money flows through what we build.",
                                        "points": "1 point",
                                        "children": [
                                          {
                                            "comment": "That’s really interesting, you’re right I don’t think that much about the final dollar amount, wish more of it was coming to me haha\n\nI think there is value in good technical decisions too though. If displaying the rest of the items means swallowing the exception so we never find that item 2 is broken that could lead to more losses than suppressing the entire carousel for a short period of time, it’s hard to say what would cost more overall, it’s kind of the same question still.",
                                            "points": "1 point",
                                            "children": [],
                                            "isDeleted": false
                                          }
                                        ],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcfam4",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcfam4/how_to_deal_with_initial_data_needed_for_a_new/",
    "title": "How to deal with initial data needed for a new feature in my app?",
    "points": null,
    "comments": [
      {
        "comment": "Here's my recommended approach. Create a database migration script to add the initial data to the required tables. This script should be part of your codebase and executed automatically during the deployment process. This ensures that the necessary data is added consistently across all environments. If the initial data is static and not expected to change frequently, you can include it as seed data in your Django project. Django provides mechanisms for managing initial data through fixtures or custom management commands (which i'm sure you're aware of). This data can be easily loaded into the database during deployment. Before deploying to production, test the migration script and the new feature thoroughly in your testing environment. This ensures that the data is added correctly and the feature functions as expected. As you've already done, use a feature flag to control access to the new feature until the initial data is in place. This allows you to deploy the update without impacting users until you're ready. If you decide to manually add the data in your development environment and then export/import tables, ensure that you have a reliable backup of your production database before making any changes. This minimizes the risk of data loss or corruption. Always have a rollback plan in place in case something goes wrong during deployment. This includes reverting the database schema and data changes if necessary. Overall, the key is to automate the process of adding initial data as much as possible and thoroughly test it in a controlled environment before deploying to production. This ensures a smooth rollout of the new feature without disrupting the user experience. If you found this helpful and need help with anything else, feel free to shoot me a DM. :) Hope it helps.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcewum",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://github.com/antonmedv/fx/releases/tag/32.0.0",
    "title": "Fx JSON viewer now supports YAML",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bce7sf",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/an83yrcarrnc1.jpeg",
    "title": "How bad is this",
    "points": null,
    "comments": [
      {
        "comment": "You mean taking a photo instead of a screenshot?\n\nVery bad.",
        "points": "1007 points",
        "children": [
          {
            "comment": "couldn't agree more xD\n\nI always get triggered when I see something like this... if a Dev can't even take screenshots, I don't want to see anything else from them, no offence",
            "points": "110 points",
            "children": [
              {
                "comment": "Probably a work computer with social media and email providers blocked. You know, attempts at keeping company secrets/code off the internet.",
                "points": "35 points",
                "children": [
                  {
                    "comment": "I see the policy is working fine :))",
                    "points": "33 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "To be fair my organisation has very strict security policies about sharing things. So on occasion I will just take a picture of my screen of my phone if I want to share something.",
                    "points": "3 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "But the picture is clear",
                "points": "0 points",
                "children": [
                  {
                    "comment": "They could have at least taken the picture straight on and then used a scanner app to make it look like a screenshot!",
                    "points": "3 points",
                    "children": [
                      {
                        "comment": "Or just use snipping tool xD",
                        "points": "2 points",
                        "children": [
                          {
                            "comment": "And some AI to flatten, rotate, and normalize the image. And maybe enhance those colors...",
                            "points": "2 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "I still hate it :'((",
                    "points": "7 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "That white mark on the photo is actually Tipp-Ex smeared over the monitor.",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Yeah that’s pretty bad",
            "points": "6 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It’s a code smell to me. Not invalid, not against the rules, but an indicator that the design is flawed.",
        "points": "153 points",
        "children": [
          {
            "comment": "I've seen tons of projects like this. I even question myself about whether that is the norm.\n\nI know it's js and not ts, but when using ts, to keep the argument line as short as possible, I define a single argument, and it looks like this `function Foo(props: IFoo)`, and immediately before (or sometimes in a types file), the content of the props.\n\nI think they do it because when they use js, it's the \"best way\" to put everything in the same context, so the IDE can be more helpful with autocompletes.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "pass the whole props object and divide up the relevant pieces to sub components. Stuff like this only happens when you're forcing a bunch of stuff to operate in a single file",
        "points": "56 points",
        "children": [
          {
            "comment": "Sure, this is fat, I'm up to splitting",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It's fine if it works. You can paste stupid stuff like this into an LLM and it will give you better data structures to use. Get it working before you get it perfect, and then once it's working don't bother with making it perfect.",
        "points": "153 points",
        "children": [
          {
            "comment": "once it's working don't bother with making it perfect.\n\nThe reality of the permanent MVP",
            "points": "106 points",
            "children": [
              {
                "comment": "\"We'll change it later\"\nA few years later\n\"Why is the code such a mess?\"",
                "points": "29 points",
                "children": [
                  {
                    "comment": "Todo: fix\n\nLast modified: 8 years ago by some guy who doesn’t work there anymore",
                    "points": "13 points",
                    "children": [
                      {
                        "comment": "Alternatively: “who tf did this?” Git blame: you, 2 years ago.",
                        "points": "6 points",
                        "children": [
                          {
                            "comment": "I had that happen to me, where someone knew I was doing some work on a repo. Bashed me for breaking something I didn't touch and then the git blame showed that he broke it a couple of years back. 🤷‍♂️",
                            "points": "1 point",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "\"Get it working before you get it perfect, and then once it's working don't bother with making it perfect. \"\n\nI'm going to frame this in my office, absolutely legendary.",
            "points": "50 points",
            "children": [
              {
                "comment": "Next to a 50 000$ monthly cloud bill :D",
                "points": "8 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "It's fine if it works.\n\nThat's one way to look at it.\n\nAnother is that quality matters. If the code is hard to read or hard to maintain, if it's hard to test, if it's fragile and easy to break, especially if it's easy to break in subtle ways that you won't notice at first because you don't have automated tests because it's hard to test... That means you'll be spending a lot more time firefighting errors in prod instead of delivering things that have value.\n\nWriting high quality code makes your life as a dev easier. Less time on PRs, less time bug fixing, more time to write code (so plenty to write good code), less time onboarding new members of the team because the code is easy to pick up.. all this means you have a nicer time working on the code. You're less stressed. You're less likely to burnout. Your days are more fun!\n\nStopping at \"it works\" means your life will eventually suck because you'll be spending all your time fixing the bits that didn't actually work.",
            "points": "15 points",
            "children": [
              {
                "comment": "You're not wrong. You can overdo it or underdo it. The problem: Most people are overdoing it, and not for technical reasons.\n\nThe reason they do it (what I would call overengineering) is because the personal cost of failure is incredibly high. Individually this looks like perfectionism. Institutionally it looks like someone taking the blame and getting crucified every time there's an incident.\n\nTeams full of blame culture perfectionists are WAY worse to work on than teams full of too-scrappy firefighters.",
                "points": "4 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Bore-off",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "All a matter of lifetime in my opinion. If it's code that's going to be used for a few weeks, fuck it. Who cares? It works and that's all that matters.\n\nIf you want to build your business on top of it that's supposed to be around for years to come, you better be very careful how you write it now, because tech debt isn't easy to pay off.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Love this😂",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "The reason it is not fine, is it is too unstable to maintain. This is a bit of the problem with React. Technically “clean code” should have 1 to 3 parameters. But React is not that developer friendly as the alternative is worse.",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Reality bytes",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "It's fine if it works.\n\nThis is very bad advice, just because something works doesn't mean its fine. You can write obfuscated anti-pattern spaghetti code that works but that doesn't mean it's acceptable.\n\nGet it working before you get it perfect, and then once it's working don't bother with making it perfect.\n\nSo just get it working? What are you even trying to say here?",
            "points": "-2 points",
            "children": [
              {
                "comment": "Codebases should have standards, not developers. Developers with standards turn into snobs who can't ship.\n\nAnd yes, good job reading. You are very good at reading.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Codebases should have standards, not developers. Developers with standards turn into snobs who can't ship.\n\nI see, so what do developers work on?\n\nAnd yes, good job reading. You are very good at reading.\n\nThank you, I am not used to reading nonsense",
                    "points": "-1 points",
                    "children": [
                      {
                        "comment": "The developers I'm talking about don't work on anything. They just criticize other peoples' work and try to impose their personal standards on the codebase.\n\nYou call it nonsense but you understood it perfectly.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "You call it nonsense but you understood it perfectly.\n\nJust because I was able to parse meaning out of what you said doesn't mean your statement makes sense. What you were effectively saying was:\n\n\"get it working then make it perfect then don't bother making it perfect.\"\n\nUsing more words than is necessary to convey a message also does not make any sense",
                            "points": "",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Ahh well dont be like that always",
            "points": "-11 points",
            "children": [
              {
                "comment": "Because what I’m feeling right now is not happiness off course",
                "points": "-12 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Transitioning to TS would be painful I guess.\n\nPlot twist: this is my own shit, written 6 months ago and now I can’t believe it",
        "points": "47 points",
        "children": [
          {
            "comment": "Transitioning to TS would be painful I guess.\n\nYou don't have to type every single prop, you only need to specify a type for the parent object, the same way it works if you didn't destructure.\n\nPersonally, I'm a fan of grouping destructured props by their logical connection, so this could be split over a couple of lines instead if you liked that style better.",
            "points": "25 points",
            "children": [
              {
                "comment": "Yes i will use interface to type the props object as whole, but i want to see all the props always to my child component’s so destructure wont go away",
                "points": "-10 points",
                "children": [
                  {
                    "comment": "i want to see all the props always to my child component’s so destructure wont go away\n\nNo, but you can make it more attractive and easier to read. In your case, e.g.;\n\nconst { title, subTitle, title3, title4 } = props;\nconst { fieldValues, fieldHeight, fieldWidth, fieldsMarginTop, onFieldClick, fieldType } = props;\n\n\nThe above is perfectly valid and legal syntax, it's much easier to read and you can tell which props relate to one another.\n\nBut, if your props aren't being used in this component, and you're prop drilling, you might want to try a different approach.",
                    "points": "-2 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "\"Who coded this crap?\"\n\n\"Oh yeah, I did.\"",
            "points": "22 points",
            "children": [
              {
                "comment": "Me looking at older code I've written after a break from the project:",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "\"I bet it's me, myself, or I!\"",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "With the right (very permissive) tsconfig it’d be painless actually",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Always the way as we learn. It’s a good sign!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I mean you just have to convert the PropTypes. You have PropTypes right...",
            "points": "-2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Good question to ask, the answer (IMO) is that its totally fine. Avoid adding additional complexity/abstraction unless there's a good reason. Typescript can certainly help with maintainability by exposing the expected data types but it doesn't seem like you have many complex/nested objects in the prop list which is where it makes a bigger difference (and more necessary). I would keep it as-is unless you're going to make a bigger refactor in how you pass data.",
        "points": "18 points",
        "children": [
          {
            "comment": "Agree, too many times we go \"this looks ugly\" and go on building prettier but completely unreadable abstraction layers - \"look we removed 100 lines of code\" \n\nTwo years layer some new dev comes and have to try to figure out what createHeroTitleManager does and why it returns a function.",
            "points": "13 points",
            "children": [
              {
                "comment": "I think that in the case of OP’s photo this is fine, given that they don’t use Typescript or JSDoc. This crazy destructuring provides “documentation”.\n\nIf they had JSDoc or a TS type/interface then I’d say just use a “props” object and use dot notation to access the fields.\n\nIt’s ridiculous to have to go through the entire function to understand what fields the parameter object includes.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Well you know it looks ugly this way, it is doing the job i would say but I'm refactor actually just splitting into sub components and may be removing some props and actually defining types to props, i don't need shared state for now",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Lol, there ate literally props called \"title\", \"title2\" and \"title3\". Indicates a junior, time pressure or carelessness.\n\nIt is bad, looks bad, is difficult to read and will be a PITA to maintain later on. I would never approve this - a 30 min refactor can make it much better.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I have seen similar things as a project switched to React. Often this is a sign that you need to document requirements.\n\nLooks like you could make a half-dozen components or utilities out of this.\n\nAlso needing to pass multiple values and setters is a good use case for moving to a shared state e.g. redux, jotai, zustand.",
        "points": "7 points",
        "children": [
          {
            "comment": "Or just Context.",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Let’s say you have a feature rich component, say a feed - like Facebook? Wouldn’t you need to have tonnes of props for said feed? So you’d end up with a component like this. The parent would take a load of props and then inside the parent perhaps you have many child components and the props are handed out to each. Is that valid or what’s a better approach?",
            "points": "",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Agree, well yes its a fat component, about shared state I won’t go right now, may be in the future",
            "points": "0 points",
            "children": [
              {
                "comment": "If you’re avoiding because it sounds like it’s going to be a massive pain, try Zustand.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I’ve been trying to move virtually all state out of components and get back to actual pure functional components. It makes development and testing so much easier if you can start a test on a state without having to repeat or simulate all the interactions each time, and component reusability is very high.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "That's a win, well yes then shared state it is",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "In one of my first projects with my basic level of react I made a mistake like this.\n\nNow I know I can use useReducer, useContext or Redux for these occasions.",
        "points": "1 point",
        "children": [
          {
            "comment": "I'm agree",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "This component seems to be extremely intertwined with its parent. You even have to pass down some setState dispatchers from the parent. Are you sure that using a child component is the right approach here? The alternative approach would be to keep the UI in the parent and just use custom hooks for the logic that right now lives in the child component.",
        "points": "2 points",
        "children": [
          {
            "comment": "Yes custom hooks or just split this component into sub components right? Because custom hooks would make the same amount of code but in separate file off course",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Why do you need showError and setShowError? Just set it if showError has a value, otherwise don't. Same with validate and setValidate. FieldWidth and fieldHeight could be a single object with key value pairs for width and height.",
        "points": "3 points",
        "children": [
          {
            "comment": "It's a pattern for controlled components. If the parent needs to know whether the child component is in a certain state (or needs to control the state itself), you pass in the parent's getter/setter from useState so that the child can update the values as needed internally, but the parent also has access to the value.",
            "points": "10 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "ShowError is the value ( state SetShowError is the event handler in the parent component\n\nThere is no way to get rid of setShowError, how could you tell parent component when to update the error value?",
            "points": "2 points",
            "children": [
              {
                "comment": "Yeah, that's fair. I guess I didn't give it a lot of thought. If it showed a type then it may have clicked in my brain but it isn't typescript, so I think I just glossed over it.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "That’s quite the prop def. Could you store any of that in a global state? Or maybe a hook internal to the component to get the data it needs so you don’t have to insert every single prop at render?",
        "points": "1 point",
        "children": [
          {
            "comment": "Agree with both approaches, but I would go for the shared state, hook still seems like same thing here but in different component",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Ohh, what's the extension called that shows file size of imports?",
        "points": "1 point",
        "children": [
          {
            "comment": "Import Cost",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "its ok, but i would make interface with types",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Add typescript and set defaults. Quite cumbersome to have to make 25 decisions when probably there are sensible defaults",
        "points": "1 point",
        "children": [
          {
            "comment": "Yeah, I wrote something similar on an admin page I wrote a few months ago. Ended up with some inputs needing up to 15 props for WCAG 2.2 AA.\n\nRefactored with some defaults and most now have ~8 because you're at least looking at an ID, label name, default value, aria tags, placeholder, required bool, pattern, etc.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm not super well versed in React best practices so I don't really see what the issue is here other than readability.\n\nSeems you could just refactor similar props into objects i.e { ellipseColor, fieldWidth, fieldHeight} = styleProps so long as you create a new object for each prop update, as react doesn't do deep comparisons on props",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That looks like… anyone editing the code will age to focus a lot.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Oh gosh, this frightens me. I bet there’s a better way to structure the components to avoid this. I’m guessing that most of the JSX in here can be moved into the page component.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "would raise some eyebrows. Are they all needed? title3, title4, can they be more descriptive? marginTop only?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's not great, should be broken up into smaller logical components, and it's likely that React Context would be very helpful in this codebase.",
        "points": "1 point",
        "children": [
          {
            "comment": "Yes sure, splitting into utility sub components but context is horrifying",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Use sniptools.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What extension is the import sizes?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That's a lot of props for one component. How big is the component itself? I think this might be unavoidable if this is some high level wrapper component. I'm more concerned with that for cycle. I know that's not really the part of your question, but i think you should figure out a better data structure for your fields. Maybe an array of arrays. But going through all of them, and using a variable to keep track how many fields are in one row seems very tedious, and could very easily lead to bugs imo",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's alright. Split it up into smaller units (sub-objects, sub-components) at some point, but it could be worse.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I was waiting for title5 and title6 😄",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Pretty common tbh. Not the best I think, but definitely common",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Once I had to import 100+ images only to realise the correct way was mentioned in docs. Felt so dumb ngl. Not that bad buddy.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "One Function to rule them all, One Function to find them, One Function to bring them all, and in the darkness bind them",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don't fix if it is not broken.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If the code is easy to understand and edit there's nothing wrong. I would probably place that in a configuration file though. Younger devs may think hard-coded? Oh no!",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's alrite, if it works then good, naming of some bits could be better like title2/3, but we are all guilty of naming stuff.\n\nRoom for improvement? sure everything can be improved. The real question is how easy is it to add to this without it having a fit!\n\nI always try to go with simplicity, sure I can code to less lines, but does it make sense? Will the next person be able to understand what crazy thoughts are going through my head lol",
        "points": "0 points",
        "children": [
          {
            "comment": "Yes agree with you, naming things should be reasonable and there is need to split this component into utility components",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Split it into multiple components, then pass those components as props.\n\nRemove localStorage access from your component.",
        "points": "0 points",
        "children": [
          {
            "comment": "Where is localStorage being used in this component?\n\nEdit: lol yes it being used",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I feel like you could group some of these, for example the title make it an object with all 4 in it. It's now just hard to read and passing so many props something is going wrong I guess.\n\nMain tip split your code more!",
        "points": "0 points",
        "children": [
          {
            "comment": "Yes code splitting",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "What language is this and what’s the problem? (Just curious, I obviously know very little about programming)",
        "points": "-1 points",
        "children": [
          {
            "comment": "This is JavaScript (React js",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "JavaScript. Filename is index.js",
            "points": "-3 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "That’s a lotta props!?",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "import ... from \"react\";\n\nYep, this is bad.",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Leave react alone,its dead",
        "points": "-2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is why Redux or the Context API exist. Or, you know, sending entire objects as a prop instead of individual variables.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I had to ask chatjipiti to explain the syntax here. Arrow function assigned to constant with function parameters destructured from some sort of object.\n\nClever like nested ternary operators!",
        "points": "-2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You lost me at 'useEffect'",
        "points": "-2 points",
        "children": [
          {
            "comment": "don't hate useEfdect, hate its wrong usage and bad approachs",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I’d think do I really apply logic based on every single one of these? Might be prop drilling that React Context API will solve",
        "points": "-2 points",
        "children": [
          {
            "comment": "No context but shared state through jutai or zustand i would say could be the reasonable approach, or split into sub utility components",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Take a look at contexts. Maybe jotai",
        "points": "-3 points",
        "children": [
          {
            "comment": "Context would reduce the performance actually who knows how many times it would re render\n\nJutai seems fair choice",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I mean it's fine if it works...?",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Bad. Should be passing an object instead, at the very least…",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcdry8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcdry8/where_to_host_image_gallery_for_a_tattoo_shop/",
    "title": "Where to host image gallery for a tattoo shop?",
    "points": null,
    "comments": [
      {
        "comment": "Why not host them on the same server as the site, in some sort of user uploads directory?",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Same server. With low daily traffic and only 250 images it's not really needed to have a CDN or anything exotic.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcd4j7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcd4j7/tips_for_reading_and_understanding_open_source/",
    "title": "Tips for reading and understanding open source codes",
    "points": null,
    "comments": [
      {
        "comment": "Pro tip: The more you read the better you get at it.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Choose a small, well-documented project to start. Read the documentation to understand the project's purpose and structure. Explore the codebase gradually, following execution flow. Take notes and experiment with small changes. This helps a lot. Use version control tools like Git to navigate history. Ask for help when needed, there's no such thing as a stupid question! Everyone on here is super kind, and very willing to help other devs:)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcd3aq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcd3aq/does_big_company_use_public_login_page_for_admin/",
    "title": "Does big company use public login page for admin panels/pages?",
    "points": null,
    "comments": [
      {
        "comment": "Generally you can only access protected pages from within a specific network, which means either from the office or via a VPN\n\nAlso, this exact thing happened to me ≈20 years ago. I came across a login page, and decided to hack into it (\"hack\" being a very lose term, just a stupidly simple sql injection), then draw smiley faces on their calendar, post fake job listings requiring someone to dance around in a chicken suit, and other random crap like that. I have a felony for it. Oops.",
        "points": "410 points",
        "children": [
          {
            "comment": "Best comment this week",
            "points": "51 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I want you to not be trolling so bad",
            "points": "37 points",
            "children": [
              {
                "comment": "how is \"I have a felony\" trolling? 🤣",
                "points": "43 points",
                "children": [
                  {
                    "comment": "lol any time I see anything on the internet that surprises me, I always assume troll first, i'm a bit traumatized\n\nhopefully it's far enough behind you to not negatively impact your life too much anymore",
                    "points": "37 points",
                    "children": [
                      {
                        "comment": "Honestly, it never really did. My conviction was 2 years of probation (oh noooo), the job I had at the time laughed at it, and it later helped get me a rather fun job hacking into US missiles. Can't own a gun, or vote, or be drafted for jury duty, none of which I wanted to do anyway, so 🤷‍♂️ And it's never affected me traveling, which is most of my life now.\n\nOh wait, my global entry application was denied. Damn it!!!",
                        "points": "53 points",
                        "children": [
                          {
                            "comment": "each comment just gives me more questions. but to stick to one, what was the conversation like when you had to explain during that US job that you played a prank on a six flags?",
                            "points": "25 points",
                            "children": [
                              {
                                "comment": "The FBI contacted my employer when I was charged. Went in the next day and everyone just laughed about it. My coworkers already knew about the whole thing since they helped me create the chicken dancing job listing, and everyone was also kinda flabbergasted that anything came of it.\n\nFWIW the actual reason anyone cared is that when I was poking around their database I inadvertently gained access to thousands and thousands of names, addresses, and social security numbers. Why? Because they asked for SSN's on job applications 🤦‍♂️",
                                "points": "50 points",
                                "children": [
                                  {
                                    "comment": "I feel like there's a court case in there somewhere.\n\nThis is a really good story, you should write about it in a blog post or something, I'd be interested in your perspective on security as a whole as well.",
                                    "points": "22 points",
                                    "children": [
                                      {
                                        "comment": "Oh, yeah that part was annoying because I had to fly across the country to go to court for 5 minutes and say \"guilty\" (which in hindsight I shouldn't have, as it wasn't a felony, which my attorney should have caught, but oh well). Really though the whole process was: FBI shows up, confiscates my computers, calls my employer. Nothing happens for 3 years. One day they call me, say I need to come to court, I hire an attorney and go to court, plead guilty, and go on with my life.\n\nIt was also bad timing. I was a kid, I'd recently learned about SQL injections, so when I found a site, especially a fairly large site, that was vulnerable to one I went to town on it. I basically wrote a database explorer in JS via SQL injections on their login page. I had to laugh when the FBI pulled out a box of server logs because the script was dumping thousands and thousands of rows of data one at a time.",
                                        "points": "29 points",
                                        "children": [
                                          {
                                            "comment": "The good old computer fraud and abuse act",
                                            "points": "9 points",
                                            "children": [],
                                            "isDeleted": false
                                          },
                                          {
                                            "comment": "Good old Boddy’) Drop Table",
                                            "points": "2 points",
                                            "children": [],
                                            "isDeleted": false
                                          }
                                        ],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          },
                          {
                            "comment": "Can a jury really be composed of your peers if you’re guilty and they don’t let felons serve? 🤔\n\nWho were you working for doing missile pentesting?",
                            "points": "1 point",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "this.\n\neven for a panel with multi-level access that needs to be also reachable by customers, we recently simply split the panel in two and completely removed higher level access from the public one, and locking the other other one behind the vpn. its literally duplication and no one likes it, but it’s worth the safety.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "the more you mess around the more you find out.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "You should have made their BLT drives go AWOL to hide your IP log. You can use a nuke blast 5000 s3kr37 skr0p7 to kaibosh their servermans.",
            "points": "-9 points",
            "children": [
              {
                "comment": "Speak english",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "We use Cloudflare Zero Trust.\n\nWhen the employees need to login they would go to example.com/staff . From there Cloudflare would check if they have a valid token and if not it would show them a login page (assuming they also match other requirements.) We require them to login using their business email which we have hosted with Google and that itself requires 2FA. Once they get through that they then have to login with their example.com credentials and any extra security we require for their specific access.\n\nAttackers will not even be able to reach any page under /staff until they pass the cloudflare requirement.",
        "points": "54 points",
        "children": [
          {
            "comment": "I need to learn more about Cloudflare Zero Trust. For now (I'm a student) I use ZeroTier VPN, I create a new network for each \"project\" but it works (by default) server-side, not application-side like Cloudflare Zero Trust",
            "points": "5 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Is it a token or mTLS? Can browsers do mTLS?",
            "points": "-2 points",
            "children": [
              {
                "comment": "Mutual TLS is one way to implement Cloudflare Zero Trust, and yes browsers can do mTLS connections.",
                "points": "5 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Lots of businesses use Single Sign On, where their corporate account authentication and permissions is managed by (most commonly) Microsoft Entra ID, Okta or Amazon. This also allows for endpoint security checks\n\nSome services require you to be on a corporate network but that is getting rarer for newer services",
        "points": "13 points",
        "children": [
          {
            "comment": "Yeah it's usually as simple as that, non-prod is VPN access controlled.\n\nProd public with limited access available (If you know the URL)\n\nEverything is behind the layers of 2FA SSO that's also managed by a dedicated 3rd party login app so roles can be managed more easily. (Public accounts for common users go through the same provider but company accounts are federated through Azure to allow SSO\n\nProd and Non prod also have completely different roles and the access list is kept incredibly short ( Devs can't login to prod with full admin control, only devops and team leads get that )",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "While restricting access by IP address is fairly common, with appropriate application-level security it shouldn't make a difference whether any random Joe-public can stumble across your login page; if you've done everything right, merely having a URL to access a login page should not be sufficient to gain any attack advantage.",
        "points": "22 points",
        "children": [
          {
            "comment": "This is true, but I also thought that username/password are much easier to \"steal\" than other methods, even only through social engineering.",
            "points": "5 points",
            "children": [
              {
                "comment": "That's what 2FA is in part intended to address. We may also have a host of other security measures inside an application even for an authenticated user.",
                "points": "8 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "As with most questions of this type, the answer is \"it depends.\" We're a web development agency and our clients are small to medium sized businesses that usually lack a dedicated IT department. Most of our clients would never tolerate having access to their dashboards too buttoned down, so we usually keep it simple. The login page is usually obscured behind a weird URL, we make sure that legit robots are discouraged from indexing the path by setting noindex nofollow on the robots tag header, and we implement basic 2FA if the clients will tolerate it (usually a code sent via email or SMS - not as secure as an authenticator but unfortunately our clients are usually too dumb to use authenticators). On one project we even use a simple little IP whitelist and just block anything not on the list with an app-level firewall. If the IP is whitelisted then we show the login form. On a few other projects we use hardware level firewalls with IP whitelists that are the first line of defense for the login forms. But for the rest of our projects, our clients just won't tolerate anything more than an obscure URL and basic 2FA. They want to be able to access their stuff easily and quickly. Such is life when you're a web development agency - we have to build stuff that satisfies clients rather than our own preferences.",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "SAML, VPN",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Certainly not ideal, but doesn't mean it's not secure.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When I was working at a bigger company, we chose a middleground.\n\nGeneral acces and view of data was available from public internet.\n\nEditing data was only possible via vpn.\n\nThis way you could still easily check something from home with your phone, but it was still secured from malicious edits.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Big companies typically use more secure methods for admin pages, like multi-factor authentication or privae VPN access. Using a public login page for admin panels is like leaving your back door unlocked in a sketchy neighborhood. Not a great idea. A for me, I just stick to the basics and hope for the best.",
        "points": "0 points",
        "children": [
          {
            "comment": "It really shouldn't matter if you can see the login page. Anyone can go to the Intune page for any company and plenty of government departments (excluding some US Gov using the Gov cloud setup), but they can't log in.\n\nRestrictions like trusted locations (VPN, IP ranges from corporate firewall, etc), MFA with yubikey, mutual TLS and plenty of other mechanisms prevent access while still allowing public login pages.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bccz0p",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bccz0p/tech_stack_for_website_with_frontend_only_but/",
    "title": "Tech stack for website with frontend only (but lots of JS code)",
    "points": null,
    "comments": [
      {
        "comment": "Because of the popularity of it, React. Because lots of companies use it. If you already understand react then nextjs. But I wouldn't do nextjs as your first UI project, it's a little more advanced per se",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Just use React",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you’re not a front end dev, why would you want to work on a website with little backend code?",
        "points": "0 points",
        "children": [
          {
            "comment": "I guess I wrote it like it's a work project, but it's a personal project. And it happens to require a lot of front-end work",
            "points": "1 point",
            "children": [
              {
                "comment": "Oh..well I would definitely use Vite if you want TypeScript or any modern features. You could pick from VueJs, React, or LitHtml, all are similar. I think React has more “gotchas” and is harder for a beginner, but it’s a good choice if you want to use one of the React libraries or learn it enough to get a job with it. But I think either of the other two are a bit easier (and technically more performant)",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You probably need a build system like Webpack to allow you to work in separate files (perhaps using a CommonJS module pattern to import shared dependencies) and then compile it all into a single script for deployment, or perhaps attempt to tree-shake it per-page if you have multiple distinct use-cases.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds like the exact type of scenario React is made for.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Vue app scaffolded with vite. Vue is very easy to get into and has a component based approach which makes splitting code/functionalities a breeze.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Nextjs",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcctyi",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcctyi/simple_trick_to_mergeoverride_tailwind_classes/",
    "title": "Simple trick to merge/override Tailwind classes...",
    "points": null,
    "comments": [
      {
        "comment": "So your own talwind merge without the good thing from tailwind merge which is actually overriding colliding styles?",
        "points": "1 point",
        "children": [
          {
            "comment": "Umm, the code above does override colliding Tailwind/utility class names.\n\nIt does so by spreading the object properties.\n\nIs that what you're talking about, or am I missing something?",
            "points": "-3 points",
            "children": [
              {
                "comment": "Have two divs like this:\n\n<div className={twMerge(\"text-red\", \"text-blue\")} /> <div className={twMerge(\"text-blue\", \"text-red\")} />\n\nWhich color is the text in the first div? What about the second?\n\nNow use your merge code maintaining the same order of class names and report back.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "I think there's a misunderstanding.\n\nIf you want to recreate the example you showed, you'd have to do:\n\n<div className={useObjToClass({ text: 'red', text: 'blue' })} />\n// Or\nconst override = {text: 'blue'};\n<div className={useObjToClass({ text: 'red', ...override })} />\n\n\nBoth will result in text-blue (overriding text-red).\n\nIn other words, useObjToClass is not a drop-in replacement for twMerge, it simply converts the object back into a string.\n\nIt's spreading out of object properties ({ text: 'red', ...override }) that result in the last-most key overriding previous ones.\n\nIt's a solution that's mainly useful when you need to override default TW classes inside a component efficiently, it's not meant to replace twMerge.\n\nBut if I've made a mistake anywhere, do let me know.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "You answered yourself, it's not doing the same as twMerge. In any case, your little utility function is all right if what you just need is a quick override (at the cost of worse legibility). I wouldn't use it on production.\n\nThe proper way to do this is with class-variance-autority and cn (classnames + twMerge). Your point about performance is rather... lacking. In my 6 years of developing react apps I haven't encountered a single case where processing the class names of a component was a bottleneck, or a problem even.",
                        "points": "1 point",
                        "children": [
                          {
                            "comment": "Thank you, glad we were able to solve the misunderstanding.\n\nMy original point was: it's a quick simple way of overriding colliding Tailwind classes when you don't want to install another library for it.\n\nI'd say the legibility is not bad, as writing classes as objects does give you auto code highlighting and Prettier formatting.\n\nThe performance of twMerge shouldn't indeed be a problem, but using JS's inherent object key override provides a nice interesting solution IMO; and in that sense, it is doing the same core thing as twMerge.\n\nEither way, wish you a nice day...",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "\"Simple\" 😂\n\nJust learn CSS, Christ.",
        "points": "-2 points",
        "children": [
          {
            "comment": "I mean, of course you need CSS for custom styles.\n\nBut I've found that Tailwind can handle 80-85% of your styles and you can write code very fast.\n\nAnd it also goes really well with React's component-based encapsulation.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'd tried posting on this subreddit some time ago but didn't have enough karma.\n\nGlad I can post now.\n\nIf you found the above code helpful, let me know in the comments...",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcbqs3",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcbqs3/need_help_validating_my_b2b_saasmvp/",
    "title": "Need help validating my b2b SaaS/MVP",
    "points": null,
    "comments": [
      {
        "comment": "This is commonly known as \"synthetics\" testing, and it is widely available from an assortment of companies already. And the companies tend to offer a lot more than just error monitoring.\n\nValidation, here, is a common one. Why should I use this over the assortment of established solutions?",
        "points": "0 points",
        "children": [
          {
            "comment": "sure, you can also setup a postman collection and do API testing, which is definitely a good thing to do. But that is a burden to the backend team and many teams just don't do that because of limited time resources. My SaaS on the other hand is meant to be a one-click solution for frontend teams where you don't have to create any tests on your own, as long as you have a valid open api spec. The MVP is parsing the swagger.json and creates an abstraction of the api and takes a snapshot and compares them to find breaking changes in models, parameters and endpoints automatically. On top, it offers one-click code generation but that is not the USP.\n\nThanks for the feedback, really valuable to see that something similar already exists!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "How does this compare to Datadog's synthetic monitoring?",
        "points": "0 points",
        "children": [
          {
            "comment": "haven't used it so I can't speak from experience but seems like it is not a one-click solution and does not detect breaking changes in the request body, parameters and endpoints. Seems like it is not tailored more towards traditional API testing\n\nMy SaaS is simple to use for frontend teams without any overhead and maintenance cost, such that they can code confidently and don't get the blame for sudden breakages on production. Additionally, my SaaS offers TypeScript code generation but that is just a nice benefit and not the USP",
            "points": "0 points",
            "children": [
              {
                "comment": "You should really check out your competition.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcb6xi",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcb6xi/its_not_the_usual_blah_blah/",
    "title": "it's not the usual blah blah",
    "points": null,
    "comments": [
      {
        "comment": "You be suprised, how many people delete shit, and then ask: Can you restore it, i thought i didnt need it.",
        "points": "9 points",
        "children": [
          {
            "comment": "lol ironically i’m one of those people i guess. tbh i only need the username back but it seems they lock up usernames forever",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "\"You're trying to delete your account. Are you aware that this means your account will be deleted?\"",
        "points": "7 points",
        "children": [
          {
            "comment": "This is 100% due to customers deleting their account and then contacting support to complain they can't access their Gmail.",
            "points": "5 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm so close myself, what pushed you over the edge?",
        "points": "0 points",
        "children": [
          {
            "comment": "I had multiple google accounts on the same phone number, they were all not necessary so deleted them to have a professional one. Unfortunately still couldn’t use that phone number, don’t know why",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bcaryw",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcaryw/need_some_help_with_creating_a_structure_for_an/",
    "title": "Need some help with creating a structure for an ASP.NET Core site with dozens of different services/forms.",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bcakf6",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bcakf6/inside_chrome_browser_part_3/",
    "title": "Inside Chrome Browser - Part 3",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc9i1s",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc9i1s/local_offline_mysql_mariadb_database_file_without/",
    "title": "local offline [mysql, mariadb] database file without server local ?",
    "points": null,
    "comments": [
      {
        "comment": "If you want just a local database without any server look into SQLite.\n\nSince you are wanting to build a desktop application, webdev is the wrong sub for help with that.",
        "points": "0 points",
        "children": [
          {
            "comment": "Well, unless they want to use electron. Then we're partially the right sub.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc9836",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc9836/seeking_help_for_a_chat_application_project/",
    "title": "Seeking help for a chat application project",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc8ecw",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc8ecw/linkedin_auto_login_how_does_it_work/",
    "title": "LinkedIn Auto Login - How Does It Work?",
    "points": null,
    "comments": [
      {
        "comment": "If only google existed.... took all of 20 seconds to find this for you. Both the first results.\n\nSearch \"linkedin auto login\": https://www.linkedin.com/help/linkedin/answer/a1341762\n\nSearch \"google auto login\": https://developers.google.com/identity/gsi/web/guides/automatic-sign-in-sign-out",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc7s5k",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://webkit.org/blog/15131/speedometer-3-0-the-best-way-yet-to-measure-browser-performance/",
    "title": "Speedometer 3.0: The Best Way Yet to Measure Browser Performance",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc7eif",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc7eif/accidently_put_article_content_in_indexhtml_file/",
    "title": "Accidently put article content in index.html file",
    "points": null,
    "comments": [
      {
        "comment": "You have to leave the country. This is unfixable.",
        "points": "43 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Buy a whole new website and try again. Then, if you need to make updates, rinse and repeat. It’s the only way.",
        "points": "10 points",
        "children": [
          {
            "comment": "I’m glad people have time to give great advice like this without actually taking the same time to give a solution. It’s not an update, if I put the article in an html with a different name, when people who have saved the article as index.html link try to access it, the will go to the new landing page, not the article. What I’ve read about index.html that it’s treated differently than any other html file, so that should be my landing page. If thats wrong, then the solution is simple, just make landpage.html ( or whatever ) the landing page.\nu/ihave7testicles",
            "points": "-12 points",
            "children": [
              {
                "comment": "It's Reddit, we're not paid consultants, it's more fun to make jokes.\n\nYou're correct.\n\nThe index.html file is treated differently and will be served as the main page for the site. For example, if a visitor navigates to www.yourdomain.com they'll be presented with the index.html. I'd move the blog post to a different file and update the index.html to be your landing page.",
                "points": "7 points",
                "children": [
                  {
                    "comment": "Thank you for answering, I just wanted to know if there were any other options other than the obvious.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The beauty of HTML is the first letter, Hypertext. You can put as many files as your host will allow. They can be images, JavaScript files, videos, CSS stylesheets, whatever you like. At the heart of it all is the HTML page. So make a copy of your index.html file (or whatever it’s named), edit the original to point to the copy, say, article.html. The main thing you have to ask yourself is whether this is likely to be a common occurrence in the future, and if it is, find the tools that best work for managing your site.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc701o",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://hacks.mozilla.org/2024/03/improving-performance-in-firefox-and-across-the-web-with-speedometer-3/",
    "title": "Improving Performance in Firefox and Across the Web with Speedometer 3",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc6tlk",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc6tlk/what_are_some_recommended_websites_or_platform_to/",
    "title": "What are some recommended websites or platform to apply for junior/intern level positions ?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc6o7w",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://blog.chromium.org/2024/03/speedometer-3-building-benchmark-that.html",
    "title": "Speedometer 3: Building a benchmark that represents the web",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc6mgs",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc6mgs/how_can_i_teach_dns_and_hosting_management_to_my/",
    "title": "How can I teach DNS and Hosting management to my students without asking them to buy their own domains?",
    "points": null,
    "comments": [
      {
        "comment": "Wondering if getting the school to buy a domain and setting up a subdomain for each student would give them the control they need to accomplish your instruction.",
        "points": "72 points",
        "children": [
          {
            "comment": "That's also possible, to give them each individual subdomains. However I wanted them to have their own DNS dashboard and/or accounts and let them add websites/services themselves. I was wondering if such service exists even outside cloudflare.",
            "points": "17 points",
            "children": [
              {
                "comment": "If you are a college prof, check out GitHub student developer pack. One of the benefits is a free domain for one year\n\nNo matter what I’m glad this is being taught, so many of my peers do not understand some of the fundamental of this stuff",
                "points": "63 points",
                "children": [
                  {
                    "comment": "Thank you!",
                    "points": "14 points",
                    "children": [
                      {
                        "comment": "as a former cs student, most of my dns knowledge came from real life experience xD",
                        "points": "6 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "Yep, I learned none of it in school with a CS degree.",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Not to be all anti-higher ed, but I do feel like a lot of CS programs are producing graduates who write clean and effective code, but wholly lack the accessory technical skills needed to be a well-rounded and productive developer. It definitely depends on the program but it’s just something I have noticed.",
                        "points": "1 point",
                        "children": [
                          {
                            "comment": "Part of the challenge is that they come into the workforce with no professional work experience and expect to not be juniors. That fancy degree doesn't mean you have any of the soft skills required in the workplace, doesn't mean you have any real world problem solving experience, etc.\n\nThey present resumes filled with student projects as if they are equivalent to paid work and it's just not.\n\nThey need to still work their way up, but struggle accepting that reality with their expensive degrees.",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Subdomains can point to different nameservers. You'd have something in your domain.com zone\n\nnameofstudent NS ns.myserver.com nameofstudent NS ns2.myserver.com\n\nthen on the box that servers ns/ns2.myserver.com you setup a \"nameofstudent.domain.com\" zone where they'll be able to add and edit records.\n\nI'm not sure if there's a hosted dns server you can use for this (cloudflare won't allow using subdomains as root on free accounts) but you can look into powerdns/padmin as it was suggested in another answer",
                "points": "7 points",
                "children": [
                  {
                    "comment": "Thank you for the explanation, i think this would be the best option for my particular usecase.",
                    "points": "7 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "You can use cloudflare, or AWS Route 53. Create the subdomains via NS records that point to the nameservers of cloudflare or route 53. Then, when creating an account it is possible to use that subdomain in cloudflare or route 53.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You could have a local DNS server running such as PowerDNS, it also has a handy UI app - PDNS Admin",
        "points": "26 points",
        "children": [
          {
            "comment": "Thank you, this is what I'm going to try first.",
            "points": "10 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Teach them how to set up and configure a DNS server.",
        "points": "15 points",
        "children": [
          {
            "comment": "This. Bind server, linux, command line configuration. Make up your own domain names for a local network.",
            "points": "7 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'd reach out to CloudFlare, explaining what you're doing, I bet they'd be willing to help assist you by giving account credits, referrals, or something of that nature.",
        "points": "4 points",
        "children": [
          {
            "comment": "Thanks for the idea, I've just sent cloudflare a notice through their contact page.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "teach them while using InfinityFree for creating free domains, it has everything inclusive of database management, basic cpanel, hosting",
        "points": "2 points",
        "children": [
          {
            "comment": "Thank you for the suggestions, I'll definitely look into this.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "When I worked at a school long past, we did it by having our own internal DNS server, could make an many fake domains as we wanted then.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What I did was spin up a vm with ispconfig locally, and built out subdomains of my dot online tld domain. Let the students build out thier projects as subdomains in ispconfig and FreeIPA LDAP. It was Isolated and super easy. All just like building out live customers at scale, but in a lab. Did that for about three training sessions on the basics.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "try duckdns",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Perhaps you can use the hosts file from windows to show domain > ip linking",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Install bind and explain the config ✊🏻",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If buying domains is an option, look up numeric XYZ domains. They're domains that can be made up of 5-9 digits ending in .XYZ that are very inexpensive at around $1 a year. Perfect for experimental stuff and testing. You can probably have them created with their student IDs for ease (if they're completely numeric IDs), so each student would have a domain that's just their ID followed by .xyz. This might be a cool touch.\n\nI'm not sure if you can buy domains with the .xyz TLD from Cloudflare but I know you can buy them from Porkbun (one of the top and cheapest registrars) and use Cloudflare DNS by pointing the nameservers to Cloudflare (fun fact, Porkbun also use Cloudflare for hosting their own nameservers).",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Tryhackme maybe",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is not related to Cloudflare but might be a good thing to teach about DNS:\n\nhttps://messwithdns.net/\n\nMore about it: https://jvns.ca/blog/2021/12/15/mess-with-dns/",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can try 000webhost ! I used that for a lot of my testing while in school :)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "One other possible option is to consider the GitHub Student Developer Pack.\n\nIt provides free domains for a limited time through tie ups with providers.\n\nStudents can get their own domain and have full control over it.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "cloudflare wont ever accept subdomain, unfortunately",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "GitHub, or put them all on sub domains of a domain you own.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "just ignore the domain name\n\nhave them forward the ports in their routers to their machines\n\nthey don't need cloud hosting\n\nthen the machine is reachable via its external ip\n\nall a domain is is pointing a URL to an IP address\n\nits entirely valid to show them how its done, but focus more on having a functional webserver\n\nits about empowerment, having them unnecessarily pay entities and making them agree to legal contracts with these entities is just you casually throwing students (like most institutions do) into obligations they do not agree with simply because you told them\n\nits a common thing to do, but its still unethical because obviously if you tell them to buy a book, or a service, there is the appearance that your profiting from collusion",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc6kai",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc6kai/what_gpt_in_gptstore_do_you_use_to_help_you_come/",
    "title": "What GPT in GPTStore do you use to help you come up with a design?",
    "points": null,
    "comments": [
      {
        "comment": "Nothing great yet. Just hire a designer off dribble with a good portfolio and degree. You’ll get much better results with less hassle and you don’t need to do any fixing.",
        "points": "4 points",
        "children": [
          {
            "comment": "How much do they generally charge for a basic static site for a small business?",
            "points": "0 points",
            "children": [
              {
                "comment": "I have two packages:\n\nI have lump sum $3500 minimum for 5 pages and $25 a month hosting and general maintenance\n\nor $0 down $150 a month, unlimited edits, 24/7 support, hosting, etc.\n\n$100 one time fee per page after 5, blog integration $500 for a custom blog that you can edit yourself.\n\nLump sum can add on the unlimited edits and support for $75 a month + hosting, so $100 a month for hosting and unlimited edits.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Sorry, I should have been clearer. I was wondering how much a dribble designer would charge you to design a typical site.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Depends on their rates and how much they need to design. Desktop home page costs me about $300-$400",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc6hda",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc6hda/why_does_my_website_receives_10_fake_users_per_day/",
    "title": "Why does my website receives ~10 fake users per day?",
    "points": null,
    "comments": [
      {
        "comment": "I would recommend you to implement a simple honeypot system. It’s an human invisible input field in your form which only bots will fill. Then you can filter between real and bot users. ;)",
        "points": "848 points",
        "children": [
          {
            "comment": "how do you prevent accidentally filtering out screen reader users?",
            "points": "126 points",
            "children": [
              {
                "comment": "Fuck em, that’s why.\n\nIn all seriousness, this is a great question and would probably trigger the screen reader to ask the user to fill it in. Maybe add some accessibility label that indicates the user should not fill that form in?",
                "points": "269 points",
                "children": [
                  {
                    "comment": "display: none;\n  visibility: hidden;\n\n\nScreen readers are supposed to ignore hidden content. Give the honeypot form field a class, and hide it using CSS. Any bot that is accessing the page will see the content, but the screen readers and regular users will not see it.\n\nWe use the honeypot technique on our site - loading the CSS that hides it dynamically, assuming the bots will not run JS. Our forms are processed on a different system, so no email is sent from the web server. The scripts that handle it check for data in the honeypot fields. If they find anything, the form post is deleted without further processing.",
                    "points": "188 points",
                    "children": [
                      {
                        "comment": "Why would bots not just ignore hidden fields as well... Seems like it will only catch the most naive simple bots.",
                        "points": "41 points",
                        "children": [
                          {
                            "comment": "My guess is those scripts are designed to be as fast and efficient as possible, so they don't bother with loading CSS and JS.\n\nHonestly I've been disappointed by ReCaptcha's inefficiency on public contact forms so I might give this a shot.",
                            "points": "33 points",
                            "children": [
                              {
                                "comment": "The problem is ignoring these fields isn't a huge undertaking. Anyone aware of this method to catch fake accounts will quickly upgrade their bots to not do it, it's not even an hours work",
                                "points": "10 points",
                                "children": [
                                  {
                                    "comment": "Not even an hour of *human* work, but it adds a css/js load to EVERY operation",
                                    "points": "8 points",
                                    "children": [],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              },
                              {
                                "comment": "I mean it makes sense why major companies are ditching vision based captcha systems since they're so easily bypassable with AI or paid services. I remember paying something like 2 bucks to solve 2 thousand captchas while I was grabbing subtitles for my media server.",
                                "points": "5 points",
                                "children": [
                                  {
                                    "comment": "Vision based Captchas were never about AI being unable to identify pictures. They were about training those AI models.\n\nThe “security” of a Captcha was beyond the images you filled out",
                                    "points": "16 points",
                                    "children": [],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          },
                          {
                            "comment": "Only the most naive bots are caught this way, yes. However, you're probably able to manually deal with the one single bot that overcomes this hurdle.",
                            "points": "11 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "This is a case of how tall of a fence do you need to put up to keep the majority of attackers out.\n\nElaborate security measures that keep almost everything nefarious out, will likely not pay off unless you are operating at a large scale and get frequently attacked by government-sized actors.\n\nBut putting up a small fence will keep the people who can't afford to build a ladder out, and if that is the majority of your attacks, it is likely worth it.\n\nLow effort attacks get shot down by low effort security measures.",
                            "points": "8 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "I had over a hundred fake users a day signing up. The hidden input field reduced that to zero and in ~5 years since, I haven’t had a single bot slip by.",
                            "points": "2 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "This simple approach blocks more than 50% of the bot signups on my site. Bots still do get through, but in nothing like the numbers there would be otherwise.",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "Because many forms in today’s world have hidden fields that are still required for the form to work. Think most styles select boxes that aren’t even a select box underneath. The real input element is hidden but manipulated via JavaScript.\n\nThat’s my guess anyway.",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "An accessibility label could be filtered and excluded pretty easily by a bot.",
                    "points": "32 points",
                    "children": [
                      {
                        "comment": "Yep just with any of these other honeypot tricks, they’re not foolproof. You could make the label vague enough that it wouldn’t be immediately recognized as a “don’t fill this in” label by a bot, but it’s not perfect.\n\nSomething like “optionally enter in your EIN” or “customer awards number” or “if you’re using a screen reader, please skip this field”",
                        "points": "17 points",
                        "children": [
                          {
                            "comment": "My label says “Bots will fill this one out! :P”",
                            "points": "1 point",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "Just name the hidden field \"nick\" or \"username\" or \"email\" and give the real one an unusual name like \"abcd\". The name will never be seen by the user so you can just put in whatever. For user-visible identification you use things like <label> element or aria-label attribute...",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "I like using field names like \"email\". Bots are eager to fill this one out.\n\nCall the real email field something else like gender.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "That's a great way to break password managers autofill feature.",
                                "points": "",
                                "children": [
                                  {
                                    "comment": "Mine doesn't autofill hidden fields, does yours? That's a big security hole because it causes you to submit data you weren't expecting to.",
                                    "points": "",
                                    "children": [
                                      {
                                        "comment": "nvm if the field is hidden!",
                                        "points": "",
                                        "children": [],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "By that logic any honeypot could be filtered and excluded easily (e.g. only fill in the fields that are visible). \n\nIn practice bots don’t render the fields or look at any niche attributes/instructions, they just fill out any form they find with dummy data.",
                        "points": "-3 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "haha bro i was just watching GOT and saw your username. lol love it",
                    "points": "-2 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "You made me almost choke on hash browns lmao",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "You reverse it.\n\nMost bots will check each box. If the box is already checked and the box is invisible to humans, a bot will uncheck it.\n\nFor bots that read strings, you just mimic a string commonly checked and the bots will again, uncheck the box. Unless you have JavaScript(poorly) implemented it will not be able to tell if the box is 1 or 0.\n\nEdit: Also for screen readers you should be using Aria tags and hidden, which means it's hidden to said screen reader. Above still applies.",
                "points": "17 points",
                "children": [
                  {
                    "comment": "Aria-hidden=true\n\nAgain, it won't fool smarter bots, but it'll get the dumber ones for sure",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Usually we include something that says \"leave this field blank\" or similar so anyone who happens upon it will know not to fill it out. Unlike other comments here we also hide things via positioning or other visual CSS effect, to avoid sending a clear signal to bots that it isn't being displayed.\n\nHoneypots won't work 100% of the time. If someone is actively trying to bot your website they can always tailor the bot to match your forms as displayed to a human. But if it's mostly the automated web scraper bots trying to fill out any form they find online, you can get almost all of them if you set up the honeypot well.",
                "points": "9 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "You just set it to display: none and screen readers won't prompt for it",
                "points": "26 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Oh man. Screen-readers. I guess I’ll take out that redirect to the anal prolapse video.",
                "points": "3 points",
                "children": [
                  {
                    "comment": "Just replace the audio track with something pleasant, that way screen-reader users won't be bothered by it :P",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "This is awesome, could you explain some more please, is there a Library for doing that or something",
            "points": "28 points",
            "children": [
              {
                "comment": "<input type=\"hidden\" name=\"nothoneypot\" value=\"\" tabindex=\"-1\" />\n\nif (!empty($_POST['nothoneypot'])) return;\n\nA hidden input that shouldn't be accessible to the user that if filled you discard the request.\n\nMore robust version, in theory:\n\n<input type=\"text\" name=\"nothoneypot\" value=\"\" autocomplete=\"off\" tabindex=\"-1\" style=\"width: 0; height: 0; opacity: 0; position: absolute; top: -1px; left: -1px; z-index: -1;\" />\n\nOP should probably just go with hCaptcha and be done with it.\n\nI will offer this edit, to say that you can use aria-hidden for accessibility purposes. There is also the visibility CSS tag, which also removes it from the accessibility tree. The hidden attribute tag can be used with aria-hidden.",
                "points": "79 points",
                "children": [
                  {
                    "comment": "Don't use type=hidden and the name should be more enticing to the bot.\n\n<div style=\"opacity: 0.01; position: fixed; left: -9999px; bottom: -9999px;\"><input type=\"text\" name=\"phone\" value=\"\" autocomplete=\"off\" /></div>",
                    "points": "23 points",
                    "children": [
                      {
                        "comment": "the bots weren't wisening up to type=hidden for a loooong while\n\nit's kinda funny",
                        "points": "5 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "I have not had issues with type=\"hidden\", personally. Bots can skip elements which are hidden through display: none, too. That's why I offered the alternative. It's a total YMMV because it depends on the effort of those writing the software.",
                        "points": "3 points",
                        "children": [
                          {
                            "comment": "I like to use opacity 0 (or 0.01), position relative, left -9999px",
                            "points": "5 points",
                            "children": [
                              {
                                "comment": "Yeah, that's the solution I normally use, I'll change it now.",
                                "points": "1 point",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "Don't use styles like this that actually result in a \"visible\" form field, or screen reader users will be tricked by them. They'll also get filled in by password managers which are configured to ignore 'autocomplete=off' signals (common).\n\nScreen readers will definitely leave out 'display:none' fields but most bots are too dumb to notice this.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "Let’s assume the user is blind. Will the screen reader skip the input?",
                    "points": "10 points",
                    "children": [
                      {
                        "comment": "Yes. You should be implementing Aria tags for accessibility. So when you place the hidden tag, the screen reader will ignore it, the bot will still check it.",
                        "points": "4 points",
                        "children": [
                          {
                            "comment": "I mean the bots could also check the aria tags",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "They can but that's where you would get into more advanced solutions. This would make it so the screen reader wouldn't pick up the honeypot.\n\nIf you don't use the aria tag the screen reader will pick up the hidden field. If you do, it won't.\n\nBots and hacking is just a logic tug of war. Unless you ban VPN access to your domain, add an ip tracking, call the ISP, and ... yep, lots of steps, but doable, and automation can be made for the process.\n\nNothing in code is perfect. However best practices exist and the goal is to limit data and energy usage.",
                                "points": "2 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "it won't\n\nthat's a problem",
                        "points": "1 point",
                        "children": [
                          {
                            "comment": "A problem you can get sued for in the United States. My companies undergoing a lawsuit bc our website isn’t accessible",
                            "points": "1 point",
                            "children": [
                              {
                                "comment": "pretty much\n\nit's pretty scary how they can nitpick the smallest things too\n\nand still have a case",
                                "points": "0 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "I believe that's why the tabindex is set to -1. My understanding is removing an input from the tab index will remove it from the screen reader being able to target it.\n\nI also provided an EDIT to the original message, with more screen reader options.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "But then what’s to stop bots from incorporating that logic? I’m just trying to prove that security through obscurity doesn’t work",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "You don't need to prove that, because it's an opinion. A well regarded one that requires nuance and understanding. No one advocates for obscurity or secrecy as a primary method of security. As a layer on top of a well-regarded foundation, it is a viable tool that should be used.\n\nThere will never be a solution to this specific problem that involves 100% coverage. To think otherwise is naïve. To answer your question very succinctly, if someone is determined enough, they will get through. They will implement that logic, and anything else you can think of.\n\nThink of a honeypot as a camouflaged mine. Not everyone will get hit by it, but not everyone will see it, and it is a cost effective and efficient method to weed out lesser determined actors.\n\nMy favorite historical example applicable to this thread is Securimage. Still used all over the Web, but solved. A standard, strong foundation used for security, that was beaten by technological advancement.",
                                "points": "5 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "I don't need sleep I need answers",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "make the name something enticing like phone or something",
                    "points": "20 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "FWIW I used to use something like this on my website, I thought some bots would be smart enough to check for type=\"hidden\" but they fell for it 100% of the time.",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "I suggested hCaptcha because it's a more robust solution that is much harder for bots to detect. I actually use a combination of both.",
                        "points": "-1 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "You have to email hCaptcha to delete your account, no thank you.",
                    "points": "-1 points",
                    "children": [
                      {
                        "comment": "What does Google require you to do for reCaptcha?",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "It's pretty simple, you create 2 hidden HTML input with the name name and email, if those are filled it means a bot filled the form\n\nYour form would look something like this.\n\n<form>\n  <input type=\"hidden\" name=\"name\">\n  <input type=\"hidden\" name=\"email\">\n\n  <input type=\"text\" name=\"somethingRandom1231\" placeholder=\"Full name\">\n  <input type=\"email\" name=\"somethingElseRandom\" placeholder=\"Email Address\">\n</form>",
                "points": "-8 points",
                "children": [
                  {
                    "comment": "Don't do this. Would be a problem for autofill.",
                    "points": "25 points",
                    "children": [
                      {
                        "comment": "This is also how websites steal your details because browser autofills hidden fields while user thinks they only gave out their name.",
                        "points": "13 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "What if you set autocomplete to \"Off\"?",
                        "points": "4 points",
                        "children": [
                          {
                            "comment": "Then you have a worse user experience as they can't auto enter their name and email. You should set autocomplete to off for the honeypot field.",
                            "points": "6 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "Browsers don’t all respect that attribute so you may still end up with autofilled fields",
                            "points": "5 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "you're right my bad, this was the recommended way the last time I had to implement an honeypot because the bots were ignoring non relevant fields. This was like 6 years ago so yeah there's probably better ways now",
                        "points": "8 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "Anyone using autofill or some kind password manager would probably trigger this too by mistake",
                    "points": "4 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Also most bots are able to determine if an input is of type “hidden” and can easily ignore it. It’s usually more effective to create a normal input and hide it via combination of html and css. Even then, not foolproof. I use both a hidden input and a visually obscured one",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Omg the honeypot!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "This is what ive done on mine to get over the issue of suspected bots signing up, followed by a simple storage/notification system to notify me when I (admin) login of all the suspected bots that signed up, then if one is a real person by mistake i can press add to add them to my database, if not they get deleted",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I’ve heard of this technique before it’s well know. What I don’t understand is why bots wouldn’t just avoid filling out hidden fields. It would be super simple for them to check the visibility",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "this is one of the easiest and most effectives ways i can tell for sure",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The easiest method is to add a honey pot. If it still happens then add a captcha and/or CSRF token.",
        "points": "144 points",
        "children": [
          {
            "comment": "How does CSRF help if the form page is a landing page?",
            "points": "27 points",
            "children": [
              {
                "comment": "Helps prevent curl requests directly without loading the page first",
                "points": "33 points",
                "children": [
                  {
                    "comment": "Cheers (and to /u/bottlecandoor)",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "What mechanism prevents them from requesting the page, sniping the csrf, then submitting? I've never heard of CSRF being an anti-botting measure, its always been framed as a security measure in my experience.",
                    "points": "",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "The goal of the token is to prevent the form from being submitted without loading the html page. So if a bot never loads the HTML page then they won't have the CSRF token.",
                "points": "8 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "There are a lot of different bots out there, however here are some that I know make the rounds:\n\nCreate a login to then make comments / reviews\nCreate a login to make a profile that has links in it\nCreate a login to try and scrape other member's data, emails, phone numbers, etc. or any other data behind a signup wall",
        "points": "73 points",
        "children": [
          {
            "comment": "there's also the ones looking to see if they get an email to the address they used, and if the comments they entered are in the email too. If they are, that form can be used to send out their spam",
            "points": "16 points",
            "children": [
              {
                "comment": "neat, I haven't seen one of those before",
                "points": "6 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I've had this same issue. I believed they were doing it to flood victims inboxes with unsolicited emails so they'll miss an a key email like \"Your PayPal account was just accessed from xxxx\".\n\nAdding a captcha will solve it.",
        "points": "56 points",
        "children": [
          {
            "comment": "This is the perfect use case for a captcha",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "At least for reCAPTCHA v2, it does not solve it, but it does slow it down massively.\n\nCAPTCHAs are increasingly solved by automated software these days.",
            "points": "1 point",
            "children": [
              {
                "comment": "No one doing this is bothering with automated software. They'll move onto the next SaaS service that doesn't have captcha and sends an email verification. There's 1000s.",
                "points": "",
                "children": [
                  {
                    "comment": "I run a service protected by reCAPTCHA v2 so I can say with authority that yes, bots do solve these automatically. If you google for \"recaptcha v2 solve\" you'll get a page full of results for automatic reCAPTCHA-bypass-as-a-service.",
                    "points": "",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Do you send an e-mail automatically to the person who registered?\n\nI had spammers signing up for users at my site because we automatically sent e-mails out. They'd sign up with first names like \"BUY VIAGRA AT http://....\"\n\nThen we'd send off an e-mail, doing their spamming for them.",
        "points": "28 points",
        "children": [
          {
            "comment": "",
            "points": "",
            "children": [
              {
                "comment": "Ironically, it's a medical-related site, and clients have to disclose what medications they're using, so viagra would be a perfectly normal thing to appear on the site.\n\nOtherwise good advice :-)",
                "points": "8 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": true
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I was getting like 200 - 300 fake users per a day. I added Cloudflare Turnstile to my login page and it dropped down to nearly 0 fake now.",
        "points": "47 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Could be someone testing out a bot, or trying to poke around your site for some vulnerability.\n\nMy site was getting tons of form spam (contact form), almost non stop at one point. I implemented silent, hidden reCaptcaha. But at the same time I also switched up to a new version of php for the backend, 5 to 7.x. Some part of me thinks switching the php version may have stopped everything. Thankfully, either way it did stop.",
        "points": "13 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Could be real users. Real users are confusing and unpredictable. Careful with this",
        "points": "33 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is a common way scammers help to defraud people, let's say hacker has access to your PayPal account and they are going to buy a ton of apple cards or something, they use websites like yours to hide the notification emails the user will receive when they perform their actions on the service they have gained access too.\n\nAs an example scammers wants to purchase an apple card with your PayPal account, so they set off a bot which signs you up to 100s of websites over the course of a few minutes, in the interim they make the transaction and the confirmation email is buried in between all the spam so the user is less likely to notice and to cancel the transaction.",
        "points": "19 points",
        "children": [
          {
            "comment": "That’s pretty clever, didn’t know about this!",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Its just bots, easiest solution is to make a hidden field that users cant see but bots can and then ban any users that fill in that field. This is called a honeypot.",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "How do you know they are fake? Sometimes I’ll sign up just to check it out, and then never use the site again.\n\nThat’s natural user behaviour if your entire product/service is behind a login screen, especially if the first post-login experience is high friction or doesn’t seem to meet the expectations set by the landing page.",
        "points": "10 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Here is the best solution to that:\n\n<form onsubmit=\"document.cookie='i\\_am\\_real=1';\">\n\n</form>\n\n​\n\nin your receiving script:\n\n<?php if($_COOKIE['i_am_real']){ echo \"you are real!\"; } ?>\n\nno need to piss off people with captcha. all those bots are too stupid to parse javascript. Of course you can make the cookie name random and make the script more difficult.\n\nAnother way is instead of <input name=xxx type=text> you can use <div data-type=text data-name=xxx></div> then write a javascript that creates inputs based that. Bots won't even find your forms.",
        "points": "16 points",
        "children": [
          {
            "comment": "What's up with the backslashes reddit? _ wont work? or '?",
            "points": "1 point",
            "children": [
              {
                "comment": "Some reddit clients auto-escape on write and auto-un-escape on read.\n\nDoes it on links, too. Very irritating.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "if you use code formatting then the escaping isnt necessary",
                "points": "2 points",
                "children": [
                  {
                    "comment": "I didn't escape this, reddit did. I didnt hit code... reddit should have just ignored it.",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "oh weird!\n\nReddit's text formatter is really annoying.",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "I don't think the last method you mentioned would be good for accessibility. You probably want your input elements to be input elements.",
            "points": "0 points",
            "children": [
              {
                "comment": "They are still inputs, but created by javascript. So it will work with accessibility. Here is an example;\n\nhttps://shareimage.net/",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "This breaks for both users with JavaScript disabled and users with cookies disabled. This is not a particularly rare situation.",
            "points": "0 points",
            "children": [
              {
                "comment": "Who cares about users with JS disabled in 2024 though? Most of the web is already unusable for them.",
                "points": "",
                "children": [
                  {
                    "comment": "A popular approach is to disable JavaScript using the Noscript extension by default (or any one of dozens of privacy enhancers) and then only manually turn it on for websites that are actually broken without it.\n\nSo it would be nice to at least give the user a heads up in an error message about it so they can turn JS back on. Bots still won't read the error message so it won't hurt that.\n\nYou'll want the visitor to enable JS to complete actual reCAPTCHA tests anyway.",
                    "points": "",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Do not implement it via inline JS events though, do it in a proper .js file. Or else you will have a hard time implementing an effective CSP as you may have to allow \"unsafe inline\", opening the website to more XSS vulnerabilities.",
            "points": "",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Won't work against the UI bots. Those are minority, but why not to use an invisible captcha instead of inventing a bicycle (like ReCaptcha v3)?",
            "points": "-1 points",
            "children": [
              {
                "comment": "Because its way more resources to load recaptcha. One line of code vs an entire library. Plus reCAPTCHA is annoying.\n\nI've been using this for the last 10 years. and my spam count is 0. So i guess UI bots is not a thing. Now if your website is as large as facebook, of course you will have those bots that are specifically built for facebook. Then you can implement existing advanced (annoying) ways.\n\nAnother thing that i noticed, is that hackers also try sql injections... but they forget to send the cookie. so even if my input was unsafe. it won't work because of the forgotten cookie.",
                "points": "6 points",
                "children": [
                  {
                    "comment": "Plus, there's cost (if you're at that sort of scale) and having to incorporate Recaptcha's privacy policy into your own. Those were the primary deal-killers the last time I looked into it (on behalf of a company where those concerns were significant).",
                    "points": "4 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "On the sites I use recaptcha I now get a lot of spam offering to sell me a program that beats recaptcha and sends bulk email via contact forms. And since they beat the captcha, its pretty good advertising.",
                    "points": "2 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "why would bots do that?\n\nBecause it's simpler to make a bot try and signup to anything that looks like it might result in gaining a link to something, than trying to manually curate a list of sites.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Even if you add a very simple question as a CAPTCHA it almost always works well enough in my sites to cut out the junk bots, eg if your website is selling gemstones...\n\n\"Please answer the question: This website is mainly about, gazelles, golf, gems, or grass.\"",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "One possibility is subscription or registration spam. Someone could set up a bot and use your site to send a registration email to the target, and could also be doing so on other websites. That could lead to the target receiving thousands of messages, and could be for various reasons.\n\nAnother is to see if the address is valid, or already registered with your site. If it isn’t, now they know the user doesn’t use that service currently. If the target email already exists, now they know one service the target uses and can design a phishing email, for example, similar to your company’s emails and attempt to phish the user.\n\nAlso, if registered with your site, the attacker could try to access the user account on your site if the target was included in a a breach or leak and test those credentials against your site.\n\nI’d add a captcha, or some other human verification that’ll probably drop it down to ~1 rather than ~10 at a time.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Here's the million dollar question you didn't answer OP: How are you sure they are fake?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Honeypots: These are invisible fields in your form that users don't see and, therefore, don't fill out. Bots, on the other hand, often fill out every field, so you can filter these entries out.\n\nOr implement checks to see how users interact with your site. Bots usually have a very straightforward, scripted way of interacting, unlike humans.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "How do you know they are fake?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I use CSRF token, Google Captcha, and also send a token to the users email which they must verify for their account to be activated. The verification token expires within 48hrs but they can request another from the login page.\n\nThe sign-up form also uses a library that does basic email validation during registration.\n\nThe only fake users I get sign up with disposable email.",
        "points": "0 points",
        "children": [
          {
            "comment": "I use disposable emails for signing up to new sites 😭. Explains why I have issues signing up sometimes...",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "add verification step, on signup, send a code to the email which then need to be entered before you can store the user data in your database, most common now is use token instead and send a url to the email.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Welcome to the Internet.\n\nBots, bots everywhere and getting worse.\n\nI have my online forms and login protected with Google Reccaptcha and it works.\n\nFor the most notorious bots I block out entire IP ranges especially if it is a country where they have no business browsing the site. I got block IPs at the server level since I own my own dedicated metal servers.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "They just signup, receive the confirmation email and do... nothing.\n\nWhat are you expecting them to do?\n\nThere do exist people who sign up for things they may or may not get around to looking up later. Or who don't get the email. Or who do get it, but it's filtered out of their inbox by macros or antispam systems.\n\nIf anything, I'm surprised it's only ten per day.\n\nHow is ten people's initial information per day causing you any kind of perceptible load on your databases or email systems (or anything else)? If it was ten million, then OK, maybe you'd need something a little beefier to handle it, but... ten?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The influx of ~10 fake users daily may be bots testing your system's vulnerabilities. It isn't solely to increase your email or database load, but could be for various nefarious purposes. I guess that implementing a CAPTCHA is a good start to mitigate this issue.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "recaptcha v3 for example, is simple to use and implement. it's free and will prevent most bots. why not use it?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Captcha is not working?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Scammers seem to waste a lot of time and energy until you realize when their attacks work they hit paydirt.\n\nLike everyone said, secure your app, captcha, cloudflare, honeypot, up front cost. Keep your app clean and make it not worth their while for you.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I've seen this before as an way to relay spam content to real emails. The spammer fills in spam content as the form data Text + Url as Firstname + Lastname etc. Spammer is hoping that you are printing that data in the body of the email somehow. They get a trusted SMTP account as the sender.\n\nMagento had a big problem with this before they implemented native recaptcha in the platform (and for some reason had 0 length limits on the firstname and lastname attributes for the customer entity).\n\nBeware this can get your mail delivery IP blacklisted by spam filters if enough people get pissed off and decide to flag you.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "why would bots do that? Make us spend money on emails?\n\nIdk about filling out the signup form, but my sites regularly get hit with requests to non-existent login pages, which seems like an attempt to hijack old WP sites.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Add a captcha, fixed it for me",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "10? Hah. That's literally nothing. We get thousands per hour. This is why captchas exist.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I had the same problem. I had to go in and manually delete their accounts. We don’t know why. We’re not a large service and we don’t know how they find us to target us. We implemented some extra bit detection and captchas and it’s been better. Maybe 1 a week gets through.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Who cares why. (Maybe they are pen testing for exploits, like a csrf or xss attack.)\n\nCloudflare bot protection is free. Also use a re-captcha.\n\nThat should at least deter them.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "+1 for the honeypot/captcha if you do end up going for the captcha method you can always do invisible first before impacting users using the form with something visual.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It’d be hilarious if someone on your team was secretly paying for a service to modestly fake/pad your adoption and you’ve built a feature to automatically remove them 🤣",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I recommend avoiding registrations directly, a simple honeypot is very effective and prevents your application from sending thousands of registration emails to email addresses that surely do not want to receive them.\n\nMany times the registration email even bounces because the destination mailbox is full. I don't know if that can give you points to end up on a blacklist, but I prefer not to find out.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'm sure you are probably right. But there are plenty of real people out there that behave like bots. The invisible forms folks have suggested sound a good idea, also consider a trivial one-off captcha (only your site says \"type the sum 42+89\"), just enough to be a barrier to broadcasty bots.\n\nPersonally I'd avoid strict filtering, in case there are genuine users that look the same as fakes. Maybe have a greylist kind of bag, treat them the same as real users for a couple of weeks, if there's subsequent legit interaction, whitelist. If not, block them.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc637r",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc637r/what_is_the_paid_advertising_world_like_in_2024/",
    "title": "What is the paid advertising world like in 2024?",
    "points": null,
    "comments": [
      {
        "comment": "google ad sense revenue calculator\n\n(plan for the lower (much lower) end of whatever they say)\n\nadsense guide to blocking ads\n\nif you are collecting the type of information that lets you know exactly who your users are and which ads they get, be very careful. That could be illegal depending on what youre doing and where you are. You are obligated (in certain places, by law) to let users know exactly what data you collect, and how you use it.\n\nUltimately, you are in control of where ads appear on your page. if ads are ending up on paid users and you dont want them to, its not google's issue. you put the code to display them there.",
        "points": "3 points",
        "children": [
          {
            "comment": "It wasn't adsense that had the issue, it was my current provider who had an update slip by that broke the command that turned off ads for certain users.\n\nAnd yeah, I make way less than that adsense calculator suggests, unsurprisingly.\n\nNot collecting information on who my users are or what ads they get, but also not sure what you're mentioning that in response to, so maybe I was unclear about something.",
            "points": "2 points",
            "children": [
              {
                "comment": "I have no idea what you are using or doing to control ads but I check access level server side and when I generate a template I use the information to place the code for ads or not.\n\nSo I'm in control of who gets to see what.\n\nQuestion is what are you doing and why don't you have control?",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You could try influencer marketing like word on the block",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc5mkf",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://webup.org/blog/the-high-risk-refactoring/",
    "title": "The High-Risk Refactoring",
    "points": null,
    "comments": [
      {
        "comment": "Bare Bones:\n\nThe post discusses the inherent risks and strategies associated with high-risk code refactoring. It highlights the potential negative impacts on business, team trust, and feature development when refactoring is done improperly. The article offers a checklist for addressing risks, emphasizing the need for defining constraints, isolating improvements, writing extensive tests, and having visual confirmation to mitigate the risks. It advises against skipping tests, relying too much on code reviews, and mixing significant cleanups with other changes. The importance of evaluating the risk and proving the system works before and after refactoring is stressed, alongside practical examples illustrating the challenges and considerations in refactoring coupled with feature development.\n\nIf you don't like the summary, just downvote and I'll try to delete the comment eventually 👍\n\nClick here for more info, I read all comments",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc58uj",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc58uj/the_twotree_problem_with_styling_on_the_web/",
    "title": "The Two-Tree Problem with Styling on the Web",
    "points": null,
    "comments": [
      {
        "comment": "Weird that the author thinks Javascript doesn't have pattern matching...",
        "points": "0 points",
        "children": [
          {
            "comment": "As far as I know it doesn't? There is a proposal: https://github.com/tc39/proposal-pattern-matching",
            "points": "1 point",
            "children": [
              {
                "comment": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions",
                "points": "-1 points",
                "children": [
                  {
                    "comment": "That's not the type of \"pattern matching\" the author is referring to.",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Please explain further. I must be misinterpreting the intention then.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "The proposal I linked does a better job explaining it than I probably could. It's essentially a fancier version of a switch statement that's useful for handling objects and arrays with varying structure.",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "There's some overlap in concepts but usually \"regular expressions\" can match patterns specifically in strings and \"pattern matching\" can match patterns in many data structures — numbers, objects, strings, arrays, trees, nested structures, etc.\n\nCSS selectors are much closer to pattern matching than regular expressions in that they're working on the DOM tree data structure. For example div > span is a pattern that matches a tree where the parent is a div and the child is a span, and div span is a pattern that matches when some grandparent is a div and the child is a span.\n\nThere are programming languages that support pattern matching on data structures, and … it is magical.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "Today I learned. To be fair, I've never even considered needing pattern matching in the context the author refers to, hence my initial confusion.\n\nI am still not convinced true pattern matching is necessary, over just writing good CSS to begin with. Am I wrong here?",
                                "points": "0 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Now, for media queries like @media (max-width: x) and @container (max-width > x), I've just decided that I don't need (or want) them. Width-based media queries create rigid layouts. Rigid layouts are not flexible and can become a maintenance burden. The reality is that we live in a world of infinite screen sizes, and breakpoint-based design is so 2015. Instead, I use fluid layout algorithms such as flexbox and gird.\n\nMust be nice to live in such a bubble - in reality, most webdevs will have to work with designers and can't just tell them \"nah fuck your design, I'll do it my way with fluid layouts\".",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc53xq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc53xq/site_for_a_family_tree/",
    "title": "Site for a family tree?",
    "points": null,
    "comments": [
      {
        "comment": "https://www.mediawiki.org/wiki/Download might serve your purpose well.",
        "points": "0 points",
        "children": [
          {
            "comment": "thanks ill give a look",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hi, im pretty sure you could set it up with any of those free page builders out there (seriously theres a ton just one youtube search and youll see) but im not really sure any would fit your budget, if you could provide more information and if its not that big of a task i could do it for you using code and figure out somewhere you could host it for free",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Have you checked WebTrees? The software needs to be hosted somewhere. Before you put it on the internet, you should figure out what degree of privacy you want.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can either use DIY website builders (Squarespace, Weebly, GoDaddy, Webflow, etc.) or open-source software (WordPress, Drupal).\n\nWeebly has a free plan, so it might be good for your situation: https://www.weebly.com/pricing",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can build a tree for free from ancestry.com. They will charge you if you need their research resources.\n\nIf you’re serious about genealogy, many genealogy applications can build the html for a site for you to host somewhere. Stick the output in a git repository and host it using GitHub/GitLab pages.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc4spk",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc4spk/any_insights_on_how_can_i_make_this_curve_with/",
    "title": "Any insights on how can I make this curve with HTML and CSS?",
    "points": null,
    "comments": [
      {
        "comment": "ooh, I did something like this a while back with svg: https://codepen.io/thisanimus/pen/zYMLGYq",
        "points": "168 points",
        "children": [
          {
            "comment": "Well done, that's dope.",
            "points": "28 points",
            "children": [
              {
                "comment": "Can confirm, that is dope",
                "points": "7 points",
                "children": [
                  {
                    "comment": "Dope, indeed.",
                    "points": "5 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Can confirm your confirmation - is dope.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Dope indeed",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Thats cool, good work.",
            "points": "6 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "wow",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Nice. Love that",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "That's well slick.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "You're squish god!",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "This is great!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "cute",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "That is dope, for sure 👌",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Oh my goodness",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Easiest and most browser compatible way is with an SVG image.",
        "points": "53 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Perhaps with using CSS Clip-Path: https://bennettfeely.com/clippy/",
        "points": "23 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You could do it with an svg, or clip path. I think svg is the way to go, but that is because I've always done it that way.",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can adapt from this to suit your needs:\nhttps://www.youtube.com/watch?v=ArTVfdHOB-M",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "All things are possible through border-radius",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You could probably use that ‘gooey’ effect which was doing the rounds in demos a few years back, if you were absolutely insistent on only just using HTML and CSS. You have your white background area, create a white circle with a pseudo element or something, blur the whole lot, then apply a ‘threshold’ type filter with contrast. Ridiculous approach though, this kind of control over graphics is very much svg territory.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yeah I would go with an SVG.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This would be pretty easy to achieve with absolute positioning of a pseudo",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc4pbh",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc4pbh/need_help_with_deployment_of_first_web_app/",
    "title": "Need help with Deployment of first web app!",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc4jjp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc4jjp/api_testing_tools_that_allow_saving_to_local/",
    "title": "API Testing tools that allow saving to local server",
    "points": null,
    "comments": [
      {
        "comment": "https://github.com/usebruno/bruno\nIt saves the API collection to file, each API has a seperate file. You then can use git to share to other people. Highly recommended.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you're working with PHP Saloon might be an option. It can be set up to use the actual API response for testing, so the first time you run a given request during a test run, it's stored to a file. On subsequent test runs that file is used to get the data without making further requests.\n\nThis gives you the advantages of being able to work with real API responses if you need to, without the overhead of making network requests on subsequent runs, having the tests fail due to network issues, or incurring costs due to making actual API requests.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc3usr",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://scotlands.news",
    "title": "I spent last night building a minimal news reader",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc3svq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc3svq/wondering_what_else_i_need_for_payment/",
    "title": "Wondering what else I need for payment functionality using stripe",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bc34o8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc34o8/just_started_with_sql_whats_wrong_here/",
    "title": "Just started with SQL. what's wrong here?",
    "points": null,
    "comments": [
      {
        "comment": "Your database does not allow you to create tables in the \"public\" schema, which is the default used if you don't specify one. Either give yourself the permissions to create a table in public, or use a different schema, like CREATE TABLE schema.student",
        "points": "50 points",
        "children": [
          {
            "comment": "This is the correct answer",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "First thing to check would be whether the username you used to login to the PostgreSQL dbms has CREATE privileges on the schema named \"public\".\n\nhttps://www.postgresql.org/docs/current/sql-grant.html",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc2be8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc2be8/button_with_two_function_calls_not_calling_bot/",
    "title": "Button with two function calls not calling bot the functions.",
    "points": null,
    "comments": [
      {
        "comment": "If you need to call more than one function, you should use event listeners. onClick only can handle one function",
        "points": "1 point",
        "children": [
          {
            "comment": "Only if assigned in code.\n\nIf you're using onclick in HTML, something like onclick=\"function1(); function2();\" works fine.\n\nAnd if these functions always should be called together, make a wrapper that calls both:\n\nfunction doBoth() {\n  function1();\n  function2();\n}",
            "points": "0 points",
            "children": [
              {
                "comment": "tried that already. no good.",
                "points": "-1 points",
                "children": [
                  {
                    "comment": "Here's the deal; I understand that you're just starting out, so this is just friendly advice.\n\nIf someone / multiple persons that's been doing this for many years say that this is how it should be done, and what works - then don't dismiss it in two seconds by saying \"tried that already. no good.\".\n\nThis is the first hint that something in your assumption of what you've written or how it should work is off; your understanding of the problem isn't the same as what other people have.\n\nSo this is where you provide more information that allow other people to help you, instead of just brushing off any help you're being offered:\n\nWhat have you tried? What didn't work? Why didn't it work? What error messages did you get? What did you assume would happen? What did happen? Why doesn't that fit with what you wanted to achieve?\n\nIt might be that what you're asking about isn't the problem; you just think that that's the reason.\n\nUpload your example to https://jsfiddle.net/ so that you can show the actual issue and people don't have to download your HTML and JavaScript - where the actual issue is shown, and say what you expected to happen when you've written it as you have.",
                    "points": "4 points",
                    "children": [
                      {
                        "comment": "Apologies, you are right I should have been more descriptive. The issue was something else altogether. There were loops in there that ran infinitely so that's why the second function was a no show. Now it seems to be working properly. Thank you for telling me about jsfiddle I didn't know that such a platform existed.",
                        "points": "-3 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I checked your GitHub, does any of your JS work? You should reference the JS file from the head of your html, not the end of the file. \n\nBeyond that, do as someone suggested and put that in a jsfiddle or a codepen project and share that instead.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc2aw4",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc2aw4/custom_borders_vanilla_html_css_js/",
    "title": "Custom Borders (Vanilla HTML, CSS, JS)",
    "points": null,
    "comments": [
      {
        "comment": "I'd probably use border-image (basically CSS 9-slices) for the repeated semicircle border effect, personally. That way, the SVG wouldn't need to have the horizontal tiling built in: you can just do a path for a single semicircle and be done with it. You can use SVG files and even inline SVG documents (i.e. data URIs) as border images, and you can scale the size of each slice.\n\nIf you want to use an extra element, though, then sure, that CSS will work. Just make sure to remember the basics, e.g. the element is inside the footer and the footer is position: relative, the top is the border thickness but negative, and so on.\n\nAs for editing paths? There are online editors like this one.",
        "points": "1 point",
        "children": [
          {
            "comment": "you sir are a life saver. may your future internet travels serve you well",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc29p9",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc29p9/what_tech_stack_can_and_should_i_use_for_my_own/",
    "title": "What tech stack can and should I use (for my own sites and experiments; on all-inkl.com)",
    "points": null,
    "comments": [
      {
        "comment": "PayloadCMS is only compatible with MongoDB (document database) and Postgres (SQL database like MySQL but support is in beta). I use Postgres with Payload and haven't run into any major issues.\nXAMPP still exists (and isn't really recommended anymore), but if you're using Payload, you'll need Node to run it and can use Node for local development as well. Look into Payload's templates for an all-in-one CMS and frontend solution.",
        "points": "1 point",
        "children": [
          {
            "comment": "Thank you for your reply! Maybe I can ask my provider if they support MongoDB or Postgres. But I guess that will cost extra. And I suppose I will not be able to install that myself...\n\nWhat would be a good alternative to XAMPP on Win10 these days? WAMP?\n\nAnd: do I understand that correctly: My host/provider will have to be running node (.js ?) as well in order for me to use Payload?\n\nThx again, kws",
            "points": "0 points",
            "children": [
              {
                "comment": "From the Payload documentation Installation page:\n\nPayload requires the following software:\n\nAny JavaScript package manager (Yarn, NPM, or pnpm)\nNode.js version 16+\nAny compatible database (MongoDB or Postgres)\n\nWhether or not you decide to bundle your website's frontend with Payload, you will need Node to run it, because it is a Javascript application. Because of this, I recommend also building your website's frontend with Node.\n\nHowever, I reviewed your webhost's offerings, and going this route would likely be an uphill battle. It seems best setup for a traditional WordPress website, so if changing your webhost is non-negotiable, I would stay away from Headless CMS's altogether as they are geared for a more modern web development environment.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Thx again.\n\njust to be clear. When you say \"Node\" you're talking about Node.js? And when you say \"building your website's frontend with Node\", wouldn't that just mean to build the frontend with js, meaning react and next.js? Or is \"Node\" more then the runtime? Sorry for asking stupid questions. I really tried to understand that all. But in 10+ years the web dev world has changed a lot ;)\n\nI will write to my host about those platforms, because I really want to play with the new toys. And what I loved about as3 was that is was so tight with types and oop. I felt that was easier to learn that way. That's why I'm really curious about ts.\n\nIf they are not able to provide an easy solution, maybe I reduce my plan to the minimum for email (all my families email are connected to that account) and domains and look for another platform for hosting the new stuff...\n\nWill try and setup stuff on my pc first and see if I really like it...",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "When you say \"Node\" you're talking about Node.js?\n\nYep!\n\nwhen you say \"building your website's frontend with Node\", wouldn't that just mean to build the frontend with js, meaning react and next.js? Or is \"Node\" more then the runtime?\n\nSorry, my answer was a little ambiguous. Node is just a Javascript runtime, but it also has a dozen and a half solutions for building and maintaining a frontend. Next.js and React (framework and component library) is one option, but you also have Nuxt and Vue, SvelteKit and Svelte, etc etc that all provide different development experiences. I personally use Astro which is component-agnostic, and Svelte and run my websites with Node.\n\nUnfortunately, hopping into modern web dev through a headless CMS like Payload while not have a great grasp of Node is a bit like hopping in the deep end of a pool without knowing how to swim. It is a great thing to invest your time into learning, but if your goal is to build apps right away, you will struggle for a while.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "To your last paragraph: yeah, I just realized. I just setup node.js on my PC and am about to work my way through some tutorials with extend, next etc. CMS-stuff will come later;)\n\nIt is quite a difference between scripting in a closed sandbox like Cinema 4D or Unreal Engine and building complete applications.\n\nOn the other hand I was hoping that those cms' and frameworks would provide kind of a ready-made sandbox to play around without having to study informatics...\n\nAnyways, thank you. That helped me a ton...",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "When it comes to compatibility, whatever software platform you choose should fully support whatever your hosting provider offers. This both programming language, and database ond their versions. If you're running javascript on the server, your host needs to support nodejs.\n\nDepending on your goals, you might not need a full CMS. Adding complexity means learning more. Installing & upgrading the software, database as well as addressing any issues that come up isn't always straight forward. If your goal is to learn a specific programming language or platform, you're better off choosing a web host can support the platform you wan to learn. If you're just looking to make a portfolio and do some front end development/experimenting, try looking to simplifying your platform. Some options for this may include:\n\nUse purely static website (i.e. html, css, & js). For this you don't even need to set up any software at home. Just open / reload the html when developing and upload the files to your server when you're done.\nDitch the database, and use a flat file cms. In a flat file cms, the data is stored in files rather than in the database. You only need to install the cms, and upload the static files containing the content / customizations to your webhost. There should be PHP based flat file cms' that's supported on your webhost.",
        "points": "1 point",
        "children": [
          {
            "comment": "Thank you very much. I actually feel like I want to play with some new toys. I don't mind if it takes time, because I like to learn new stuff. But I want this stuff to be somewhat sustainable. As I said above, I'll ask the hoster what they can offer. Maybe even switch to something else (although I really like the value, service and support that all-inkl offers).",
            "points": "0 points",
            "children": [
              {
                "comment": "You're probably better off finding a host dedicated to supporting your programming language/environment. Modern style of web development & hosting is pretty different from old school php/perl shared webhosting, and the costs for hosting, support, and maintenance will reflect that.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Thx. I just installed node.js and am now watching a tutorial to get started with my first express/next/ts project. ;) I decided to give that a few days of trial and error before getting deeper into any specific cms...\n\nLaters,\n\nkws",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I use XAMPP, but you can also use MAMP if you're on a Mac...",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc269u",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc269u/i_have_to_setup_a_new_frontend_workflow_but_i/",
    "title": "I have to setup a new front-end workflow, but I can't run the one that I used years ago. Any tips or recommendations?",
    "points": null,
    "comments": [
      {
        "comment": "I would suggest Vite Vanilla with added Sass (npm create vite@latest myapp --template vanilla). That's a bit simpler, but caters mostly to JS-apps.\n\nBut I guess you also need to compile HTML-Files and have a whole structure? What are your requirements?\n\nI tried to run your repo but yes, the deps are too old, lots of deprecation-warnings etc. I guess it's easer to create a new starter-kit with your current requirements.",
        "points": "1 point",
        "children": [
          {
            "comment": "Well, the old workflow injected dependencies through bower (js,css) into the index.html in app, but in dist ( compiled version) it was all in one vendor.js vendor.css. Other than that, only file minification in the build. I am not going to build a js app, but a classic front end, html, css, js/jquery",
            "points": "0 points",
            "children": [
              {
                "comment": "Ok but thats fine then. If you don't mind bundling your JS into a single file.\n\nnpm create vite@latest myappname\npick \"vanilla\"\npick \"javascript\"\ncd myappname\nnpm install\nnpm install jquery\nnpm install sass\nrename style.css to style.scss\ntake out all from main.js and add import \"./style.scss\" and import $ from \"jquery\"\nremove counter.js and other not needed files\nthe index.html is the starting point. move the script-tag to the bottom, over the closing body tag.\nyou can add more html-files, and link them simply by linking to /page1.html etc. Follow this step if you need multiple pages: https://vitejs.dev/guide/build#multi-page-app\n\"npm run dev\" starts your local instance for development\n\"npm run build\" compiles all into the /dist directory\n\nVite is pretty well documented and \"makes sense\". I used bower, gulp, grund and webpack for years, and using Vite is by far the most approachable IMHO. https://vitejs.dev/",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Followed the steps. Reproduced everything.\n\nI changed my folder structure to this:\n\nroot/node_modules\nroot/app\nroot/app/index.html\nroot/app/scripts/main.js\nroot/app/styles/main.scss\nroot/app/images/*\n\nBut now it doesn't find the index.html , the starting page is returning a 404. Any help?",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Yes if you change the default structure you'll have to configure it. Check out https://vitejs.dev/guide/#specifying-alternative-root",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I use Laravel Mix still. Works great even on node v18. Might not always but it'll get you up and running quickly.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc1sek",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc1sek/alternative_to_sharplibrary_wanted/",
    "title": "Alternative to \"sharp\"-library wanted",
    "points": null,
    "comments": [
      {
        "comment": "exif.js for metadata\nnative canvas api for resizing",
        "points": "1 point",
        "children": [
          {
            "comment": "Canvas is onyl inside a browser, isn't it? in my case, I want to resize everything server side",
            "points": "0 points",
            "children": [
              {
                "comment": "In that case there’s node-canvas",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Jimp is a native node implementation. It's slower and also doesn't support webp so it's not ideal.\n\nOr if node canvas (as someone else suggested) doesn't work, you could have an offscreen canvas in a worker to modify images before upload.\n\nBesides that, maybe you could host your own micro service using sharp in an environment that supports it",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc12aw",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc12aw/sql_vs_mysql_vs_nosql_and_what_to_choose_as_a_new/",
    "title": "SQL vs MySQL vs NoSQL and what to choose as a new starter?",
    "points": null,
    "comments": [
      {
        "comment": "First, MySQL is just a specific SQL database, they’re not separate things.\n\nIt honestly doesn’t matter which one you learn first.  Relational databases (sql) and nosql have different use cases and over your career you’ll often use both on a single project.\n\nIf you want to go for SQL, choose MySQL or Postgres, or SQLLite even if you just want to play around without any setup.\n\nMongoDB if you want to go nosql",
        "points": "20 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "NoSQL (although it's very broad term) has its own place but for regular apps almost every time SQL is a better choice.",
        "points": "10 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "They go great together :) use python to query a db using SQL. I would start with relational databases as they teach fundamentals that nosql trades for other benefits",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Learn SQL and relational database design. It’s the tool for the job 99% of times. NoSql is attractive to newbies because “hey no need to learn SQL” and for most of your hobby projects it will work just fine, however as data increases and relationships get more complex, it becomes apparent that NoSQL databases were not designed for this use case. And I can almost guarantee that all if not almost all your project ideas have relational data. NoSQL is GREAT when used for the job it was designed for, it’s just that most projects don’t need it. \n\nThen the personal benefit is that well most projects use SQL so you’ll feel more comfortable joining a new team, and thus it is a more marketable skill.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Non relational databases tend to be for more specific purposes where a relational model isn't a good fit. MySQL these days is pretty solid and you should do fine with it.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Learning SQL was allways beneficial.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The choice isn't up to you. You want to know how the data is stored that may be interesting for you and then learn the tools. My suggestion is to get in touch with an engineer and ask him about it, also ask about advice how to safely navigate the data.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "RDBMS (SQL/MySQL/etc) - the other one is bullshit",
        "points": "1 point",
        "children": [
          {
            "comment": "Your comment is bullshit.\n\nRedis, BigTable, Cassandra, etc absolutely have their place. Redis especially is used everywhere",
            "points": "1 point",
            "children": [
              {
                "comment": "",
                "points": "",
                "children": [
                  {
                    "comment": "",
                    "points": "",
                    "children": [
                      {
                        "comment": "You’re not wrong but given the context of OP being a newb, it’s almost a given that they were talking about long term storage and not caching",
                        "points": "3 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "[deleted]",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "🤦‍♂️ No. Redis is a NoSQL database. The fact that it's used primarily for caching doesn't change that at all. You also can have redis persist to disk.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "",
                                "points": "",
                                "children": [
                                  {
                                    "comment": "I never implied any such thing. You interpreted that way for some stupid ass reason.\n\nThe fact is that in almost all cases, relational databases are the better solution for persistent storage\n\nUtter nonsense. Relational database are better for relational data that needs to constantly be accessed in such a manner. NoSQL is better for fast querying, distributed writing, etc, depending on exactly what your use cases are. There's a reason literally every large tech company uses NoSQL databases somewhere in their stack.\n\nBut you clearly have all of about 7 minutes of experience, so I'm done with you. Bye.",
                                    "points": "1 point",
                                    "children": [],
                                    "isDeleted": false
                                  },
                                  {
                                    "comment": "I bet my left nut that he is one of those people who can't think to save his life. If you put this guy in the context of SQL he can't do shit so he defends NoSQL with his life cause that's all he can do, he is lost without it ;(",
                                    "points": "-1 points",
                                    "children": [],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": true
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": true
                  }
                ],
                "isDeleted": true
              },
              {
                "comment": "",
                "points": "",
                "children": [],
                "isDeleted": true
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'd argue that NoSQL is easier to start with. You just dump your somewhat structured data into the DB and can start querying. No need to look into foreign key relationships and all of that. If you go with an ORM you can also achieve something similar with relational DBs though.\nIn the end you'd need to get familiar with either one of the paradigms and it's mainly a matter of personal taste.",
        "points": "-4 points",
        "children": [
          {
            "comment": "Yes but that’s precisely the problem. You start with NoSql because “it’s just code basically and no need to learn SQL”. And this is fine for most all hobby projects, etc. Then you start a real product with it, and I can almost guarantee it has relational data. So your users grow, your data grows, your relationships get more complex, and suddenly your shit isn’t performing well. It becomes apparent that when the data is relational, a relational database is a better tool for the job.\n\nNow you’re stuck either trying to perform weird esoteric optimizations to your nosql DB that greatly increase complexity and make maintenance more difficult, OR you’re trying to figure out how to migrate into SQL. Neither option being a position I’d love to be in.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc11cm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://app.daily.dev/posts/MpYmTLaJK",
    "title": "High Quality Open-Source Software for Web Developers",
    "points": null,
    "comments": [
      {
        "comment": "Dailydev looks cool, just signed up.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That post in question mentions Tanstack router. While I commend Tanner for the work he has done (especially with React Query), I would suggest those looking at routing libs also look at: https://github.com/molefrog/wouter. I recently ripped out React Router from my app and replaced it with this and it's been a very nice experience.\n\nThe lib provides routing primitives of sorts and you can build additional functionality on top of it pretty easy.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc0t63",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc0t63/ive_been_learning_how_to_build_static_landing/",
    "title": "I've been learning how to build static landing pages and cafe menus for a while now, and I think I have everything figured out, except for one thing. I've been trying to find out what the best way to deploy it is",
    "points": null,
    "comments": [
      {
        "comment": "Look into github pages, but even cloudflare pages are fine for your use case it seems.\n\nThere are a thousand ways to do it, as long as it works for you!",
        "points": "3 points",
        "children": [
          {
            "comment": "Mind you, GitHub pages prohibits use for business websites https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#prohibited-uses",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Thanks for the comment! are there any limitations for the free CloudFlare pages thing for this specific use case?\n\nIf there're no limitations I might just stick with it since it's been working so far",
            "points": "1 point",
            "children": [
              {
                "comment": "Cloudflare pages use cloudflare workers under the hood. If you lookup cloudflare workers free tier, you can find that you have 100,000 requests/day for free !\n\nhttps://developers.cloudflare.com/workers/platform/limits/#worker-limits",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Sounds good thanks!",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You're doing it right! Just stick with Cloudflare my friend.",
        "points": "2 points",
        "children": [
          {
            "comment": "So good to hear! thanks for the confirmation!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Are you doing this as a personal project or to deploy for someone else?",
        "points": "1 point",
        "children": [
          {
            "comment": "I'm currently doing it with my personal projects, but I plan to use it commercially in the future, I've already verified that CloudFlare Pages free plan is okay for commercial use but I was not entirely sure about the limitations",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Netlify. Vía Drag and drop It’s free to start",
        "points": "1 point",
        "children": [
          {
            "comment": "Thanks I'll check it out, would you elaborate more on what you mean by free to start?\n\nEdit: never mind I've checked it out and it looks like a great option too!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Cloudflare pages has you covered",
        "points": "1 point",
        "children": [
          {
            "comment": "That’s awesome!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bc0eh0",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bc0eh0/what_do_you_like_and_dont_like_about_rendercom/",
    "title": "What do you like and don't like about Render.com ?",
    "points": null,
    "comments": [
      {
        "comment": "never heard of it",
        "points": "17 points",
        "children": [
          {
            "comment": "Same",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Deployment and setup was extremely easy for me with setting up a Next app alongside an Express api, postgres db, redis cache, and a periodic cron job. Their web services fit my preferred concept of keeping everything as separate entities on the chance that I need to scale one of them. Their internal routing is nice to keep latencies low between services. I've had no downtime and any issues that were caused on their end were properly communicated and resulted in no issues for my application.\n\nI have no real issues with their pricing but I know its not as generous in the lower tiers as other platforms.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Tried them with my toy app for a while, it worked OK and was the Heroku-lite that I was looking for. I switched away though because they charged $10 a month for Postgres, which is free on railway.app",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Just had a quick look at the docs. It deploys master commits by default and seems to have no staging concept. That is really rough.",
        "points": "1 point",
        "children": [
          {
            "comment": "Wouldn't their preview environments count as a staging concept?",
            "points": "1 point",
            "children": [
              {
                "comment": "Yes kinda. But creating a full env on every pull request? Would have to check the pricing very carefully.\n\nI think my problem with that service would be that the general workflow is largely predetermined and hard to change. Probably good if it fits your needs, until it doesn't.",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I’ve deployed a few Rails apps on render and the process was very simple. I’ve enjoyed using it and it’s met all of my needs",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Evaluation of this and a few others in this realm:\n\nhttps://www.brycewray.com/posts/2023/03/publish-or-perish-2023/",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  }
]