[
  {
    "id": "t3_1acj0ay",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acj0ay/what_are_the_benefits_of_using_third_party/",
    "title": "What are the benefits of using third party services (e.g. Clerk) to manage users?",
    "points": null,
    "comments": [
      {
        "comment": "I'm old school. I write it all as much as I can, myself. It is true, webdev today is outsourcing everything as much as possible, it appears. At least to me, it appears that way. It reminds me of tech support being outsourced to places overseas, like India, or the Philippines. I've heard that didn't work out so well in the end, but I digress.\n\nI think as long as you can learn and be comfortable with the pace and output of your own efforts, there is little need to outsource anything. Just my opinion.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you’re going to use a service like this I would check to make sure it is using an open source standard that actually has traction. I don’t know anything about clerk but if you need to use it for the short term just double check that you are actually able to migrate away from them at some point.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acirkc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "http://Kickinitwithsal.com",
    "title": "What do you think of my website?",
    "points": null,
    "comments": [
      {
        "comment": "Thought about traffic: if users didn`t like the design they would at least visited site, so i think it's not related to design problem.\nThought about design: maybe replicate some patterns from Medium site design for posts(text part). They are easier to read and give more `space` feel while reading.\nbrutally honest answer: I liked this site.",
        "points": "",
        "children": [
          {
            "comment": "Well maybe it really is because my urls aren’t being indexed then. Unfortunately this is totally out of my control. Sorry, can you explain what you mean by medium site design?",
            "points": "",
            "children": [
              {
                "comment": "They mean the website medium.com. It is a popular blogging/posting platform for those that wish to pontificate about their subject matter.",
                "points": "",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "SEO is complex. It takes a while for all search engines to fully index and re-index all websites in their own time, so I wouldn't sweat this too heavily.\n\nIn the meantime, check out what Google indicates to do when things change: https://developers.google.com/search/blog/2005/10/when-your-site-changes",
        "points": "",
        "children": [
          {
            "comment": "Unfortunately the indexing part is totally out of my control. I didn’t know if it was because my content was lacking or if it was just because of the google indexing.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acibfm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acibfm/entire_blind_75_leetcode_interview_questions/",
    "title": "Entire Blind 75 - Leetcode interview questions solved - cheers.",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aci5aj",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aci5aj/how_do_record_time_difference_between_inserting_a/",
    "title": "How do record time difference between inserting a redis key and attempting to acces it.",
    "points": null,
    "comments": [
      {
        "comment": "> How do you guys decide TTL?\n\nChoose effectively a random number that seems like it'll fit the need.\n\nFor the most part I can guess how effective a TTL will be and how much/little we need.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aci0wq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aci0wq/i_am_doing_an_assignment_i_need_help/",
    "title": "I am doing an assignment & I need help",
    "points": null,
    "comments": [
      {
        "comment": "Maybe use grid and make the timeline elements span X columns (assuming one day is one column).",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1achvyz",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1achvyz/how_to_learn_a_new_skill_when_to_put_it_on_your/",
    "title": "How to learn a new skill ? When to put it on your resume",
    "points": null,
    "comments": [
      {
        "comment": "I start immediately building something with new stuff I’m learning. I’ll use a tutorial as an outline for building what I want. I don’t waste time on building the actually tutorial project.\n\nI learn by overcoming road blocks, each roadblock is a true challenge that I have to figure out how to get around. And after years of doing this I’ve learned that I nearly always get around a roadblock.\n\nWhat’s important is also recognizing the difference of a roadblock and a dead end. A dead end means you have to try a different approach.\n\nAfter I finish something I’ll know if I know enough to advertise my new skill on my resume.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I see the doc of the tech then search for a stared project with it and just deep dive. It`s always easier to me seeing something in practice than reading docs that can be hell as large.\n\nI watch tutorials only if i don`t understand the tech at all to get the overview and start.\n\nI write just a piece of code that would implement logic of that technology, and than try to implement it in later projects.\n\nAt the point I know I will not mess up with it.)) It can be entry level but with confidence that you can solve problems this tech is suited for.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1achcyx",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1achcyx/building_wordpress_custom_themes_for_clients_as_a/",
    "title": "Building wordpress custom themes for clients as a developer",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1ach675",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://magill.dev",
    "title": "My developer portfolio - Showoff Saturday",
    "points": null,
    "comments": [
      {
        "comment": "The picture of the road that you have as a background image is nearly 5MB.\n\nRun a Lighthouse / PageSpeed Insights test and try to fix the mobile performance.",
        "points": "1 point",
        "children": [
          {
            "comment": "Is this an example of current webdev, or using WordPress blindly? Serious question.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Some projects headings are distorted(2 liners), cursor change for objects that are clickable, and 2 lines animation seem a bit buggy for me, not sure if it's intended.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It all looks nice, but I can't take you as serious as I'd like because you use WordPress.\n\nI'm sure you're a nice person, a great developer and fun to work with. Just... WordPress is for noobs.\n\nI expect haters will hate. :D",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acgj6t",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acgj6t/im_building_a_desktop_app_that_scrapes_job_sites/",
    "title": "I'm building a desktop app that scrapes job sites for new listings",
    "points": null,
    "comments": [
      {
        "comment": "Would you consider building this as a browser extension? This has the same benefits of scraping on the client (server not required, avoids being IP blocked) but makes it a lot more accessible since I find people tend to not be as willing to install a desktop app as they would be to use a web thing.",
        "points": "1 point",
        "children": [
          {
            "comment": "Not sure how big the market is for chrome extensions as opposed to desktop apps, but would be an interesting idea to explore. One other angle I’m thinking about is to make it a web service completely and do the scraping using my backend servers. But this would mean increasing the monthly fee for users which I’m not a fan of",
            "points": "0 points",
            "children": [
              {
                "comment": "Would it actually be that expensive to host on your own servers? Plenty of services will give you a cloud server for $5/month, you could even potentially make it work on a free service like Vercel (although I wouldn't recommend that). The main thing I'd be concerned about is getting IP blocked if sites aren't so happy about being scraped.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "The IP blocking is the main drawback of going down that route so I would either have to use a scraping API or buy proxy servers for running my own setup. Both options are costly and come with unfortunate limitations like max 50-100 concurrent scrapings. Trying to overcome this by distributing the scraping to the actual users, using their own IPs. Also really want to keep this as cheap as possible for end users since I’m targeting unemployed people :)",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "This app is exactly what I need right now, as I'm on the job hunt myself. Is there a free version or maybe a trial period to test it out?\nKeep up the awesome work, really digging this project!",
        "points": "0 points",
        "children": [
          {
            "comment": "Still working on the MVP which should be out in like a week. Haven’t had time to actually implement a payment system in the app so it will be free to use for a while. This will also help me gather some much needed user feedback so make sure to subscribe to the wait list :). And many thanks for your kind words",
            "points": "0 points",
            "children": [
              {
                "comment": "Great to hear! Signing up for the waitlist right now, and I'll definitely share my feedback once I get to use the app.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acgfcr",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acgfcr/pwa_with_angular_16_how_to_install_via_mobile/",
    "title": "PWA with Angular 16+, how to install via mobile browser?",
    "points": null,
    "comments": [
      {
        "comment": "Most likely in your manifest. Make sure you have all the relevant bits in there the proper icon, etc..\n\nIf everything looks good check your browser settings. I'm not sure off hand but safari might need something specific if that's what your using",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acg8qb",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acg8qb/open_sourcing_webpack_and_storybook_microfrontend/",
    "title": "Open Sourcing Webpack and Storybook Microfrontend Starter",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acg13e",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acg13e/gaming_news_api/",
    "title": "Gaming News API",
    "points": null,
    "comments": [
      {
        "comment": "News sites don't often love the idea of you taking their content and reposting it on your own site, so there won't be many free high-quality APIs available :)\n\nThat said, you could try scraping a news aggregator like https://www.start.gg/discover\n\nBing also has a news search API but iirc it's not cheap and you'd still have to scrape the links yourself: https://www.microsoft.com/en-us/bing/apis/bing-news-search-api",
        "points": "1 point",
        "children": [
          {
            "comment": "Fair enough... I'm trying to implement a scrapper, I have something that can pass some anti scrappers but I'm pretty sure it's not enough...",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acfvbi",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acfvbi/leapcell_a_better_alternative_for_heroku_airtable/",
    "title": "Leapcell: A Better Alternative for Heroku + Airtable",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acfgyl",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://miragecraft.com/blog/scope-emulation-with-revert-layer",
    "title": "@scope emulation with revert-layer",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acfeaj",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acfeaj/cardstack_component_with_animations_similar_to/",
    "title": "Cardstack component with animations similar to Apple Wallet / Passbook:",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acf8u1",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acf8u1/visual_studio_code_removing_types_when_saving/",
    "title": "Visual Studio Code removing types when saving",
    "points": null,
    "comments": [
      {
        "comment": "Check your selected formatter and the format on save setting",
        "points": "2 points",
        "children": [
          {
            "comment": "Currently, my selected formatter is Prettier, i've changed to others but the result is the same unfortunately. Regarding the format on save, it is enabled and set to \"file\". Curiously, i disabled it, and it stills happens.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Is it just for any?",
        "points": "1 point",
        "children": [
          {
            "comment": "Unfortunately no, i've tried other types just for fun and it keeps happening...",
            "points": "0 points",
            "children": [
              {
                "comment": "Ah. I was wondering because (depending on your ts configuration), any might be redundant in that context",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Thank you for the suggestion anyway. I'll leave my tsconfig below, maybe you can find if something is wrong. Forgot to mention this only happens to some files, not all...\n\n{\n\"compilerOptions\": {\n\"target\": \"es5\",\n\"lib\": [\n\"dom\",\n\"dom.iterable\",\n\"esnext\"\n],\n\"allowJs\": true,\n\"skipLibCheck\": true,\n\"strict\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"noEmit\": true,\n\"esModuleInterop\": true,\n\"module\": \"esnext\",\n\"moduleResolution\": \"node\",\n\"resolveJsonModule\": true,\n\"isolatedModules\": true,\n\"jsx\": \"preserve\",\n\"incremental\": true,\n\"baseUrl\": \".\",\n\"paths\": {\n\"@/components/*\": [\n\"components/*\"\n],\n\"@/pages/*\": [\n\"pages/*\"\n],\n\"@/styles/*\": [\n\"styles/*\"\n],\n\"@/lib/*\": [\n\"lib/*\"\n],\n\"@/public/*\": [\n\"public/*\"\n],\n\"@/types/*\": [\n\"types/*\"\n]\n},\n\"plugins\": [\n{\n\"name\": \"next\"\n}\n]\n},\n\"include\": [\n\"next-env.d.ts\",\n\"**/*.ts\",\n\"**/*.tsx\",\n\".next/types/**/*.ts\"\n, \"components/accounting/modal\" ],\n\"exclude\": [\n\"node_modules\"\n]\n}",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acf5fv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acf5fv/showoff_saturday_auto_transport_website_redesign/",
    "title": "[Showoff Saturday] Auto Transport Website Re-design",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acerrv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://boikot.xyz",
    "title": "I am Building boikot.xyz - a Log of the Unethical Practices of Big Companies",
    "points": null,
    "comments": [
      {
        "comment": "React Router makes the site super fast :) please submit amendments or records for more companies if you feel like it and thanks so much for taking a look!!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acem91",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acem91/how_do_i_host_a_wordpress_website/",
    "title": "How do I host a Wordpress website",
    "points": null,
    "comments": [
      {
        "comment": "WordPress can do this just fine. If you throw in WooCommerce you can even sell things there. As to hosting, icdsoft.com works for me. You can buy a domain name from cloudflare.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Wordpress gets hosted on a LAMP/LEMP stack: linux, apache/nginx, mysql/MariaDB, php. You can provision your own over at DigitalOcean, or go with preconfigured shared hosting at any of the legacy hosting providers: bluehost, inmotion, a2hosting, etc.\n\nFor a brochure site like you're talking about, a static site via Jekyll, 11.ty, or Astro seems like it would be easier. That results in a a website that is literally just a bunch of files in a dir which means it's super easy to host: you just need a file server, not even a compute server. Cloudflare, Netlify, even GitHub will host a site like that for free.",
        "points": "0 points",
        "children": [
          {
            "comment": "How does Hostinger line up with those suggestions? Saw a bunch of articles/tutorials suggesting it (suppose they were sponsored) tho it seems like a good and heap option? I'd really like to not have a prefix to my domain and afaik github pages (other option i chekced out after your comment) adds a prefix to it. And I'd mainly want it to be a WP site so they can do all the stuff without involving me",
            "points": "0 points",
            "children": [
              {
                "comment": "All the legacy hosing options are comparable, they all have aggressive discounts for your first term, then they charge you an arm and a leg after that.\n\nIf you're set on WP, I'd recommend a WP-specific host like WPengine or Kinsta. They are a little more expensive, but worth it for their transparent pricing and wp-specific features. Also WPEngine support is really good.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acehuf",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acehuf/showoff_saturday_launched_a_restaurant_site_this/",
    "title": "[Showoff Saturday] launched a restaurant site this week complete with an interactive food menu that is also tied to DecapCMS so they can edit it themselves. Made in html and css with 11ty static site generator.",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acbze8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acbze8/check_out_my_self_learning_chatbot/",
    "title": "Check out my self learning chatbot!",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acdr0v",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://www.reddit.com/gallery/1acdr0v",
    "title": "I built a dashboard to store and share all your online referral codes",
    "points": null,
    "comments": [
      {
        "comment": "The Figma designs look really good!",
        "points": "1 point",
        "children": [
          {
            "comment": "Thank you 😇👍🏼",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hey everyone!\n\nOver the past months I have been building on friendscodes.de as a fun project. Goal is it to keep all your referral codes in one \"wallet\" to make sharing easier and more beneficial.\n\nFor those interested in the codestack:\n\nDesign: Figma\n\nFrontend: Next.js 13 and SCSS\n\nBackend: Supabase\n\n​\n\nHope you enjoy. Drop some constructive feedback or ideas on your way :)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acd5d1",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acd5d1/ariapressed_issues_with_windows_navigator/",
    "title": "Aria-Pressed issues with Windows Navigator",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acczic",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://scientyficworld.org/build-restful-apis-with-node-and-express/",
    "title": "How To Build RESTful APIs With Node.js And Express? • Scientyfic World",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1accwip",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1accwip/i_created_an_interactive_photo_gallery_inspired/",
    "title": "I created an interactive photo gallery inspired by a recent trip to West Africa",
    "points": null,
    "comments": [
      {
        "comment": "nice photos!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Photos aren't loading :(",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1accnuh",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1accnuh/i_feel_like_i_wasted_the_bootcamp_i_took_by/",
    "title": "I feel like I wasted the bootcamp I took by making myself absolutely reliant on ChatGPT and I don't know how to get back on track.",
    "points": null,
    "comments": [
      {
        "comment": "I mean, stop using ChatGPT and just do it yourself. There’s no fast way to learn. It takes struggle. You avoided that at your own peril. Just like you can’t be very fit and muscular by not ever working out. Your brain needs a work out, that work out is gonna suck, it’s gonna be tiring, frustrating, hair pulling at times, but it also comes with great reward. A runners high to continue the analogy.\n\nThere’s no answer other than the one you have avoided. Do with that what you will.",
        "points": "47 points",
        "children": [
          {
            "comment": "Or change the way you use chatGPT. I’m refreshing my knowledge by doing a full stack course and I use GPT, but I ask it to explain the why instead of the how. Often the courses skip over a lot, and leave a lot of question marks. I fill those holes with chatGPT.\n\nAlso, if it’s something I need to google anyway, I might as well ask chatGPT, because it’s a lot better at giving me refined answers and saves time. I’ve learned soooo much better than on my first go round when I did a course without gpt. I specifically use copilot, because I can get it for free as a student.",
            "points": "9 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "At least you are aware of it now and you can fix it heh.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "First, take a break. It sounds like you’re pretty stressed out, and forcing yourself through that doesn’t help anyone. Putting yourself under that kind of pressure isn’t going to suddenly make things better.\n\nSecond, this is all a good thing. ChatGPT is a crutch, and you’ve outsourced your creativity and learning. Now it’s time to actually learn. You’re going to be taking some steps back before you take steps forward. You have some idea of how to ask questions about doing things, so now you have to learn how to answer those questions.",
        "points": "7 points",
        "children": [
          {
            "comment": "That's really good. Thank you",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "How about you attempt the exercise if you don’t succeed ask chatgpt how to do a part. Don’t ask for all the code. If you were able to do the exercise show chatgpt your code and ask how it could be better. Chatgpt is a tool, use it without being reliant on it and learn from it.",
        "points": "6 points",
        "children": [
          {
            "comment": "Perfect answer! I like to use ChatGPT to explain things to me not just generate code for a copy paste",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hey, old school dev here. I know your pain. Been doing this IT thing over 30 years and the struggle can be overwhelming at times for a variety of reasons. Imposter syndrome is real. Learning new things is hard. Staying in \"shape\" is hard. Time management is important.\n\nKeep at it. Just break down a problem into smaller chunks. Really drill down into the specific problem and research the problem. Do your own solution but take inspiration from others approach.\n\nYou got this.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You're okay, you know more than you think you do. Using references is okay, everybody has them open constantly, even for things they're intimately familiar with. Don't feel like a failure when you need to look things up. You'll find yourself doing it less often as you go.\n\nTo be honest, a bootcamp was never going to be enough to have things completely figured out anyways, so you're not really behind. Try a sample project, and don't use any chatGPT.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Take a break from AI, the muscle memory will come back quicker than you think. Also this is normal, sometimes copilot will write a bunch of my unit tests and they all pass and I am like ok, I better proofread before I push this 😂",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You just need to use ChatGPT longer",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Lol, at some point in life you have to put in the effort to learn without ml. It is sad that junior devs will be stuck being juniors if it continues like this.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sorry can’t help you there, I learned my skills on the job after years of humiliating undergraduate and graduate study.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is it ok to use chatgpt to help with syntax? I usually only ask it to simplify topics and to help me with the syntax for things",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I wouldn't feel bad for using ChatGPT if I were you. Before AI many devs were pretty reliant on Googling and Stackoverflow, even for reminders on basic stuff. AI just makes this process more efficient imo.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Attempt the exercise. After 30 minutes of trying then give it to ChatGPT and ask it to “give a hint”(NOT SOLVE) and attempt it again. If you truly can’t solve it then ask it to solve it and go through the solution.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "things others say and for a new project, best way to learn is when things dont work. read docs, google stuff to solve issues",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I was involved in a discussion around how experienced devs think ChatGPT and other tools might end up hollowing out juniors ability to progress into the field and this is exactly why.\n\nYou just do not use code you don't understand from any source, it could do virtually anything. Most importantly if you want to be a professional, its got a pretty good chance of being suboptimal or not a really good fit for the problem and wider codebase architecture. Stuff experienced devs will pick up on sight.\n\nIt does get easier, alot of it simply becomes intuitive knowledge eventually. I particularly remember the trouble promises gave me when I was learning them.\n\nDepending on were you are at, I recommend getting comfortable with array use (and avoiding misuse) and how to write a good well designed class as first steps into a solid understanding.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1accj3p",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1accj3p/is_it_feasible_to_outsource_ux_dev_to_a/",
    "title": "Is it feasible to outsource UX dev to a non-technical graphic designer who will use images or (basic HTML/CSS) then have a front-end coder implement it in code?",
    "points": null,
    "comments": [
      {
        "comment": "If you’re outsourcing why not have them give you an idea of their own processes instead mapping it out for them?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "UX isn't graphic design",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1accbf8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/kd3bwjn1wzec1.png",
    "title": "I made this Atticus Dashboard",
    "points": null,
    "comments": [
      {
        "comment": "😎 - Atticus Dashboard\n\nAtticus Dashboard is a web-based dashboard that provides various information and services in a centralized view.\n\n- Features\n\n+ Real-time clock and date display\n\n+ Cryptocurrency prices (BTC, EURO, USD)\n\n+ Weather information with forecasts\n\n+ #AdGuard Home statistics\n\n+ #Transmission torrent client details\n\n+ #UpTimeRobot monitor status\n\n+ #Glances System resources overview\n\n+ Lightweight, write in #php, #css, #js\n\nIf this project helped you in any way, please consider giving it a ⭐️. Thank you!\n\nGitURL: https://github.com/sandu-bogdan/atticus-dashboard",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acc21k",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acc21k/looking_for_project_collaboration_forums_to_learn/",
    "title": "Looking for project collaboration forums to learn new technologies, any suggestions?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acbx3k",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/9yvi207mszec1.gif",
    "title": "[Showoff Saturday] Tracking workouts is slow, so I made a thing to quick-add my sets with a tap, and adjust with a custom slider",
    "points": null,
    "comments": [
      {
        "comment": "I think there's an error with the gif I uploaded. Here's a vid: https://streamable.com/0zhlm1\n\n[to mods]: FYI adding mp4 says it will be automatically converted to a gif b/c vids are not allowed on webdev, then it won't allow me to submit my post, because my source is is not an image.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acbnc5",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acbnc5/how_would_you_actually_approach_building_a/",
    "title": "How would you *actually* approach building a full-stack app today?",
    "points": null,
    "comments": [
      {
        "comment": "Depends on requirements",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I will say C# and .NET Core on the backend side, for sure. It is a great community. It’s cross-platform, very performant, type-safe. It will be here for a long time. For frontend React (or any other JS based popular framework with an extensive community). Avoid Blazor or anything similar because JS is the king of FE development, and it will be a lot easier to find somebody experienced with JS frameworks than any other alternative. If mobile apps are involved, probably flutter.\n\nFor hosting I’m not sure. I would go with Azure or AWS. They are not the cheapest but they are the best. You can learn about cloud and maybe even get some certificate that you can monetize in future.",
        "points": "1 point",
        "children": [
          {
            "comment": "If OP is experienced in TS on the frontend.. Jumping over to C# is not the move... Plenty of options that you can use TS with.",
            "points": "2 points",
            "children": [
              {
                "comment": "I thought that this was a general, open question, not “what TS tech to use”…",
                "points": "0 points",
                "children": [
                  {
                    "comment": "It’s definitely a general question, though I would probably opt to go for a TS-based solution, but not totally closed off to .net etc. I’ve used .net in the past :) Curious how you’d handle type safety on the front end when querying the api if the backend is .net? Think one of the benefits of, say, TRPC is that’s handled, which seems like it would be a major DX boost?",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Interesting, what about go?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Whatever is free and in demand. Gotta ride the wave.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "LAMP lol but I'm a noob.\n\nR and Python feed the MariaDB database, but otherwise, pure vanilla.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I have the exact same set up as you for hobby projects, except my backend is hosted with fly in a docker container and my monorepo is managed by lerna. Moving forward, i would probably want to tie my database and backend in one service, maybe railway? Or just AWS straight up.",
        "points": "0 points",
        "children": [
          {
            "comment": "If it helps, in my experiences with it, Railway is great! Similar vibes to Vercel in terms of ease of use and UI.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I like Next frontend and API routes, Prisma, Planetscale, and I use my own iron-session auth but next-auth or Clerk are good too (I just like that it’s free and simple with iron-session). Hosted on Vercel.\n\nThis setup is dummy simple to use with decent DX and type safety. You could use the T3 stack, which basically just adds TRPC to the mix for that automatic typing but I didn’t like the extra complication/abstraction and prefer to diy it. Only bits you paying for is Vercel hosting and Planetscale, both of which have a very generous free tier.\n\nReason I chose Planetscale is because I like the way they give you dev/prod branches that you merge similar to Git, as opposed to normal database migrations. It also has a high concurrent connection limit which is good for serverless.",
        "points": "0 points",
        "children": [
          {
            "comment": "Have you found any significant downside to API routes? My concern with them is the speed vs a dedicated always-running server might be noticeable when scaling, plus an increased reliance on Vercel in the longer-term. Can’t deny the DX of api routes is attractive though",
            "points": "0 points",
            "children": [
              {
                "comment": "I’m not sure if I’ve ever really pushed them to their limits, I’ve only hit a couple thousand requests a day which it handled easily. I suppose if I was running some high traffic API heavy application I might swap for a dedicated Node server (probably with Nest or Fastify), but I just haven’t needed it yet.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "That makes sense! I might go this route, it would be quite easy to convert to dedicated should the need arise in the future. Thanks!",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "less is better. Turns out browsers are good now and AWS Lambda / google functions / whatever you actually don't need much to get fully functional very quickly. Grab the tool for the job you need for that day and dont over complicate it.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acbfve",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acbfve/i_have_a_react_and_redux_book_from_2019_will_this/",
    "title": "I have a React and Redux book from 2019, will this still be useful as a base to start with?",
    "points": null,
    "comments": [
      {
        "comment": "Redux especially has changed pretty significantly due to the introduction of Redux Toolkit (also made and maintained by the Redux maintainers). I’d recommend checking out their docs.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Probably, but why not just use online resources? That way, you have access to the latest documentation.\n\nYou can usually find guides on how to do the majority of things on YouTube for free.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Books get outdated very fast unless they are about computer science fundamentals. React has changed quite a bit since 2019, React hooks was released 2019 so there might be a risk that the book mostly covers class components.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "oh no",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acbfcd",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acbfcd/chartjs_with_net_8_mvc_typescript/",
    "title": "Chartjs with .Net 8 mvc TypeScript",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acbdtb",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://github.com/wtframework/sql",
    "title": "wtframework/sql: An SQL statement builder for PHP",
    "points": null,
    "comments": [
      {
        "comment": "~How can you user WHERE queries containing operators (other than =) or SQL functions?~\n\nIt's unclear how you should specify lists of columns (potentially from multiple tables, using aliases, and/or SQL functions).\n\nYou may want to look at how Aura.SqlQuery handles this.",
        "points": "0 points",
        "children": [
          {
            "comment": "WHERE is explained here: https://github.com/wtframework/sql/blob/main/docs/select.md#where\n\nAlso columns and joins etc. along with everything else.\n\nIs the documentation on the main README not clear enough that the list of supported statements are links to specific statement documentation?",
            "points": "1 point",
            "children": [
              {
                "comment": "Ah, I somehow missed that. I blame my oven timer going off. =P",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acb9yo",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acb9yo/showoff_saturday_i_built_a_website_to_generate/",
    "title": "[Showoff Saturday] I built a website to generate SQL queries from your prompt",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1acb7jr",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1acb7jr/do_we_need_a_bff_and_are_we_doing_it_the_right_way/",
    "title": "Do we need a BFF and are we doing it the right way?",
    "points": null,
    "comments": [
      {
        "comment": "The Java backend is responsible for validation of data. Full stop. Anything extra is only for user experience. The more you validate elsewhere, the more you have to add custom and complex logic to handle the case where your layer validated something as correct and your backend rejected it. It can get dicey fast.\n\nThe Java backend is also responsible for sanitizing data. Having it assume everything is already sanitized is a recipe for problems.\n\nHaving a JS API in front of the Java to do early validation is… sorta microservice-y? I could see how this could let you do some stuff faster, but it seems like a fucking lot of work and complexity to run the extra service when you could just learn Java and work in the actual API. It mostly sounds like you’re looking for ways to avoid doing Java.\n\nI do think having a spam detection API could be nice to have, but since you’re already calling out to a third party… adding it to the JS layer instead of Java doesn’t make sense to me. It’s a lot of work and no value add aside from not-being-Java.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Everyone should have Best Friend Forever.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "So you already have astro server for server rendering front end app. And instead of:\n\nBrowser -> java api\n\nYou want to:\n\nBrowser -> astro api -> java api.\n\nIf i get that right, i think it is correct to forward your request from there. You might even not expose java api to public internet, accept only from astro server and only open astro to public. You can do more stuff from that bff layer, it makes it more flexible.",
        "points": "1 point",
        "children": [
          {
            "comment": "yeah exactly, this is what we wanna do, and exactly for that reason (public/private API)\n\nbut what I'm concerned about is business logic code duplication",
            "points": "0 points",
            "children": [
              {
                "comment": "Yeah, there is a risk for that. I don't have much experience with SSR frameworks, maybe someone with Astro or Next.JS experience who uses extra api application behind can answer that.\n\nFor business logic, i would assume you don't write same things twice. I expect BFF to do at most \"auth\" stuff + rate/spam limiting etc. Pass the rest to other services.",
                "points": "",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Possible reasons to use a BFF:\n\nTo use as a token handler,to enable the frontend to make API calls to its own hostname using cookie authentication and keep JWT tokens out of the frontend\nTo expose endpoints specialized for one specific frontend. When I see this 'in the wild' it's usually that they have a set of microservices for their backend, and a layer above that exposes tailor-made endpoints that can aggregate and orchestrate between the different microservices\n\nIt's up to you to decide if those things are worth it",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "[deleted]",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Having two apis for a single post seems very unnecessary.\n\nUsing Astro for a single form seems unnecessary.\n\nPeople love to get distracted by shiny things when refactoring.",
        "points": "0 points",
        "children": [
          {
            "comment": "We want to server render a bunch of pre existing Vue components.. This is why Astro. We have the Vue components, we need pre rendering.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acag3q",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/dcg0udlqezec1.png",
    "title": "I'm a Data Scientist that took a crack at building a website",
    "points": null,
    "comments": [
      {
        "comment": "The design looks very clean. Good one on that color pallet which feels modern, yet formal. However, I tried to paste in a BBC news article and it says \"working on enabling this source to be scanned\".\n\nIs BBC news source not yet covered within NewsCord, because I do see a BBC news article in the trending section on the home page?\n\nIf you need here's the article I tried to see what exactly NewsCord does. BBC News\n\nAlthough I saw what it does through the pinned news posts, I thought I should ask how and why this happens.",
        "points": "2 points",
        "children": [
          {
            "comment": "Thanks for the feedback! BBC News articles are certainly enabled on NewsCord. I'm trying to investigate why you got that error, but it should work now if you are interested in checking.\n\nTo answer your question of how it works, NewsCord uses Generative AI to find similar articles to the ones you've searched for, then tries to find key differences between the articles using a large language model",
            "points": "1 point",
            "children": [
              {
                "comment": "That sounds interesting. I know AI, ML and all is very booming but its just seems so big I fear to get in.\n\nIf you wouldn't mind would you tell how did you get in AI field of software? I would like to learn something in the near future",
                "points": "1 point",
                "children": [
                  {
                    "comment": "I'm basically self-taught, learning Python, classic ML use cases that I could play back to the business until I secured a DS role internally. And from there continued learning on the job. There are so many great resources online. Specifically if you're interested in using LLMs, I'd recommend trying out some of the stuff that's in the LangChain documentation",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I thought this was an interesting idea, so I clicked on the top trending article. According to the tool, this BBC article has a 62 variance score compared to this RNZ article, and it identifies three key differences.\n\nExcept... they're the same article. The RNZ article is a reprint of the BBC article, word-for-word identical other than localization style changes. The AI is repeatedly wrong when it summarizes differences between the two articles.\n\nHave you talked with any journalists before building this? This sort of wire-service redistribution of articles is extremely common. I think a tool like this is an interesting idea, but it has the potential to amplify misinformation and be actively harmful if it's claiming two news organizations are reporting different facts when the articles are in fact identical.",
        "points": "7 points",
        "children": [
          {
            "comment": "Thanks for checking it out and great spot. This is definitely a case of it not doing the right thing! Thankfully we're still reiterating and improving. And this is exactly the type of feedback that'll help us make it as accurate as possible. It's still early days, so there's going to be a few kinks here and there but the aim is that it absolutely cannot create results like the one you just saw - because you're right, it'll have an inverse effect on what we've set out to achieve",
            "points": "3 points",
            "children": [
              {
                "comment": "I appreciate that you're being receptive to feedback.\n\nOne of the core principles of ethical journalism is accountability. When a reputable news organization publishes an error, they print a correction or retraction fixing the mistake.\n\nWill you publish corrections when the AI prints misinformation, like in this case?",
                "points": "2 points",
                "children": [
                  {
                    "comment": "This is a really solid suggestion. I've added it to the backlog and will work on this immediately. I will basically add the functionality for a user to state that the output is incorrect and when this happens, for all other people viewing the comparison, they'll see something like \"X amount of people have found this output to be factually incorrect\". I think that will go a long way in preventing misleading info",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Again, I appreciate that you're listening and taking these concerns seriously. I hope my critique comes off as constructive because I mean it that way.\n\nReputable news organizations do not knowingly print information they can't verify, and then annotate it with \"Many people have found this to be factually incorrect\" if enough readers flag it. That is a good way to lose reader trust and get hit with a defamation lawsuit, and it doesn't do anything to correct all the people who were exposed to the misinformation before it was flagged.\n\nFundamentally, I think it's irresponsible to build a tool that claims to offer the full picture, and then have it print information that may or may not be true. If AI is going to critique journalism, it should at least be held to the same journalistic standard of not printing information with no regard to its veracity.\n\nI would urge you to familiarize yourself with journalistic ethics and talk to actual journalists.",
                        "points": "1 point",
                        "children": [
                          {
                            "comment": "I understand and 100% appreciate your constructive criticism. You've put your points across in a really helpful manner and I thank you for that. I still think there is value in having NewsCord out there in the world but you're right, this sort of mistake made by the AI needs to be mitigated down to zero.\n\nI'll work on making sure the AI doesn't do this. And also have the correct guardrails in place to ensure that the reader can trust it. Your point on talking with journalists is a good one, I actually just came back from an event where I showed this to people in the journalism industry. The key takeaway from this was that AI could be used to help compare publisher content but its outputs need to have the right disclaimers in place i.e. not \"directly disagrees\" without having complete certainty.\n\nPlease do test it out with other articles if you want to. It's gotten a lot better over time and it finds some really good gems. The improvement I've seen over the past few weeks is actually what gives me confidence in NewsCord",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Looks nice! Worked fine on my end. Just a bit cluttered on mobile but that is unavoidable. Great job!",
        "points": "1 point",
        "children": [
          {
            "comment": "Thanks for trying it out!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "IMO looks great, love the logo. Skeleton loading UI too nice touch. Pretty good for a “first timer”.",
        "points": "1 point",
        "children": [
          {
            "comment": "Thanks! I'm glad you noticed the skeleton. I obsessed over making it look identical to the loaded UI haha",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Cool idea",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Your footer column spacing could probably be smaller - it snaps to the next line too early, so it looks weird\n\nYou can fix an overlap, by providing some padding or margin\n\nYou need to give your text some room to breathe, it looks incredibly cramped, and I can't stop looking at \"Enter\" and \"NewsCord\" not being aligned (Which they don't necessarily have to do, but I can't unsee it), so you could probably put that text elsewhere?\n\n\"Why waste time say lot word when few word do trick\" - Kevin",
        "points": "1 point",
        "children": [
          {
            "comment": "Love, love these suggestions! Definitely adding to the TODO",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Looks great!\n\nTips:\n\nset your scrolling list's scroll CSS property to auto instead of visible so that scrollbars pop up only when needed.\nchange the CSS styling of the scrollbars (I could give CSS example if you want)\nin the landing page, set the main content block's height to like 80% leaving room for the top bar and an equal height portion of the bottom footer\n\nThats all I can say for now. Cool site!",
        "points": "0 points",
        "children": [
          {
            "comment": "Thank you! This is great feedback! I'll definitely add these in 🔥",
            "points": "0 points",
            "children": [
              {
                "comment": "Correction on that 80% idea. Change that to min-height: calc(100%-2*[height of top navigation bar]);. Replace [height of top navigation bar] with the actual height of the top bar.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "How does that calculation work? I don't understand it. What if a navbar doesn't have a set height and the height is based on the padding of the nav links?",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Well, the assumption is that the height of the nav doesnt change or need to? Inspecting the page, you can see OP is using TailwindCSS and set the navbar element to a fixed height of h-16 (4rem)\n\nI also see that in OP's site, the navbar/header is included in the main content container so in this case, OP should set the min-height of that container to something like min-height: calc(100% - 4rem);\n\nIt is not super necessary that the amount of the bottom footer that shows (when scrolled to top) be exactly the same as the top but I recommend a height that shows only the top row of text elements (centered vertically in the visible portion) like: https://ibb.co/RQBqt06\n\nEdit: To make sure the footer doesnt overlap the main content when window is smaller, I would change the CSS property to: min-height: max( 60rem, calc(100% - 4rem));\n\nSo the behavior now is that when the window is larger than the main content, then only a small portion of the footer is shown and you can scroll down for the rest. I think for the main page, this looks nicer imo.",
                        "points": "1 point",
                        "children": [
                          {
                            "comment": "This has been a super helpful discussion, thanks both ❤️",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I've seen a bunch of these \"compare news articles for better information literacy\" sites get developed over the years. They never seem to get lasting traction, but good luck with yours :)",
        "points": "-1 points",
        "children": [
          {
            "comment": "Thank you!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Off the back of u/CPstyle observations, I've just pushed live a change that should completely mitigate the chances of NewsCord incorrectly finding \"key differences\" between articles that are duplicates. This is why I love this community, it's a safe place to put things out there and quickly iterate and improve. Thanks for all your support ❤️\n\nP.S. About that BBC article, it now can't find any similar articles anymore which in my opinion is better than what it was doing before! Instead, have a look at this as an example of what the AI now generates: https://newscord.org/results?url=https://www.politico.eu/article/russia-plane-crash-ukraine-prisoners-of-war-putin-accuses/",
        "points": "0 points",
        "children": [
          {
            "comment": "I appreciate that you're taking feedback and updating the tool so quickly, but your linked example here is a pretty good illustration of the perils of AI new analysis.\n\nIn your link, Newscord compares a Politico article to a BBC report, finds high variance, and reports there's a different narrative between the two articles because the Politico article has claims made by Putin that are not in the BBC article.\n\nThe missing context is that the BBC article was published on Jan. 25, the day BEFORE Putin made the public comments that the Politico article is based on.\n\nIn other words, the AI is claiming the BBC is spinning a \"different narrative\" because it doesn't include details that literally had not happened yet at the time the article was written.\n\nThere are other issues as well -- one of the points in the article summary is just flat-out incorrect -- but the fundamental problem here is that the AI is making claims about narrative and missing information without any real-world context or ground truth. I don't know how you solve that without human review and insight.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Looks like Reuters is blocking the AI from scanning the page.\n\nError message: Sorry! We could not process this article. It is possible that this news source is blocking us from retrieving their article contents. Please try another one.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1acafbm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://www.plotteus.dev",
    "title": "Plotteus | The JavaScript library for data storytelling",
    "points": null,
    "comments": [
      {
        "comment": "Basically:\n\nPlotteus is an open-source JavaScript library designed for data storytelling. It allows full control over animations, enabling more natural and engaging data-driven stories. The library supports seamless transitions between different chart types and elements, including colors. It includes six chart types like bar, bubble, and scatter, and offers features like config-based operation, grouping support, and theme adaptability to any background color. The focus is on empowering the audience to interact with the data at their own pace, making stories more memorable.\n\nIf you don't like the summary, just downvote and I'll try to delete the comment eventually 👍",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aca5er",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/5739abvmbzec1.gif",
    "title": "I built a playlist player component for React (free, opensource)",
    "points": null,
    "comments": [
      {
        "comment": "The component is called ListPlayer and it is available in a package called react-list-player which I recently made public and opensource!\n\nCheck it out! I would love feedback on this!\n\nGithub repo\nIntroduction demo\n\n(note that the tracks listed in the playlist in the demo are royalty-free)\n\nAdditional features:\n\nAbility to remove controls (if you have your own playback controls you want to use)\nTurn keyboard shortcuts on/off\nAbility to loop, stop, or \"continue on\" when you reach end of playlist (if you want to avoid interrupting music when the end of the playlist is reached and want the player to move on to additional suggested tracks for example)\nPackage comes with the header, controls, and header-card components if you want to use them by themselves\n\nPlanned features:\n\nSeek bar (with a desktop and mobile mode)\nShuffle button\nEmbedded lyr-ix component (optional)",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Awesome! How does one go about starting to design such stuff, without any prior knowledge of react?",
        "points": "3 points",
        "children": [
          {
            "comment": "This could be built without react or with other frameworks like solidJS. However, I would recommend learning one of the frameworks because they can teach a lot about approaches/patterns and different ways of accomplishing things!\n\nWhats great about react and some other frameworks is that they push you to break things up into pieces (called components in react). The header is a component inside which are other components like the controls (play/pause, next/prev, and mute buttons) component etc. This allows you to focus on each piece individually. These components can often be elements that vary. For example, each row in the playlist is a copy of the same component but with different information (inputted). So I had to create only one component and then just provide different info for each copy/row.\n\nI think one of the key things that turned out to be really really important for appearance and behavior is CSS. CSS has some powerful properties that make containers and their contents self-adjusting. In this player component, I used a lot of `flex` boxes that automatically center (or right/left adjust) the content inside. I also used CSS transitions to make size adjustments happen smoothly and things appearing and disappearing gradually. I also used powerful new CSS features such as CSS container queries and units (supported by all major browsers as of 2023) that allows for adjusting based on changes in parent container. Note that for the very new stuff, I implemented CSS fallbacks just in case.\n\nBasically, getting very familiar and comfortable with CSS can really make things possible that you may not have been aware of.\n\nIf you decide to learn React or another Javascript framework, then I recommend you familiarize yourself with CSS, HTML, and of course, Javascript beforehand. Step by step and build things that you find interesting along the way! Dont forget to have fun on your journey :)",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The music player, while looking great, could use a seek bar or progress bar.",
        "points": "1 point",
        "children": [
          {
            "comment": "That is planned (will be added to the inner controls component). Just the details are being figured out!\n\nQuite a bit of interesting stuff is planned. Im working on how to embed my lyrics component as well.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Very cool!",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Really nice design, impressive stuff!",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Oh nice",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It looks pleasant and amazing!!!",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Ohhh. Do you use Rэreact native or just a react?",
        "points": "",
        "children": [
          {
            "comment": "This is really beautiful design*",
            "points": "",
            "children": [
              {
                "comment": "I used just react. But I did build it so that it would work on mobile. I am interested in making this component compatible/usable in Native apps, but I have zero experience with React Native unfortunately. Maybe in the future...",
                "points": "",
                "children": [
                  {
                    "comment": "This is amazing, and I want the same! I have also been using react as a basis recently and am actively learning it.",
                    "points": "",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I like it. Why not publish on npm?",
        "points": "0 points",
        "children": [
          {
            "comment": "It's already on npm\n\nhttps://www.npmjs.com/package/react-list-player",
            "points": "4 points",
            "children": [
              {
                "comment": "Very nice. Thank you!",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aca18t",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://amcharts.com/editor/map/",
    "title": "[Showoff Saturday] Online Map Editor - add markers, lines, animate markers along lines, generate pixel and heat maps. Download as JS code, static image, or embed directly into a website.",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1ac9zag",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac9zag/was_finally_able_to_get_my_agency_website_live/",
    "title": "Was finally able to get my agency website live - would love to see what people think!",
    "points": null,
    "comments": [
      {
        "comment": "Very nice. I'm not crazy about the color scheme and scroll snap feels a bit off in featured works but I love the speed and design. Good job!",
        "points": "5 points",
        "children": [
          {
            "comment": "Appreciate it!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Looking at this on mobile, the title text “In today's competitive business world, a captivating digital presence is crucial. Custom website development can provide a distinctive and memorable experience through appealing visuals, interactive elements, and well-structured content that accurately represents your business's philosophy and nature.”\n\nTakes up way too much of the screen. Idk I feel like the title text should be shorter",
        "points": "2 points",
        "children": [
          {
            "comment": "Good feedback :) Have reduced it a little now. Thanks!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Our services button: Make it full width on mobile and Also take off the menu button and keep it top right so that it doesn't come and destroys the website scroll and aesthetic.\n\nOverall a nice build.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I like the content and the layout.\n\nWhat id change is the featured projects section. It different image sizes look unprofessional.\n\nAnother thing im a lil confused by is the pricing scheme. Feels a lil confusing😅",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It’s too messy, the colour scheme is off, you don’t need that light/dark theme toggle set it from the browser preferences, the buttons are too bulky, the featured cases, either make them the same size or do something else entirely to show them because it looks off when they’re not the same size, the toggle switch for monthly payments or lump payment takes the attention away when it’s position is set to sticky, you don’t need the user to be able to switch between that on a whim, if you do need it put that option on each offered service instead.\n\nThe menu CTA is off on mobile at least, you open the site and it’s party covering the “our services” button, maybe consider a hamburger menu instead? Or change the colour of it, your menu button shouldn’t have the same priority as your other buttons at least not when it’s overlapping them.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I don’t like it.\n\nThe fonts, the colors, also the different sections are not separated enough. The CTAs are not coherently spread across the page. The „Dark/Light“ mode switch is completely out of place.\n\nOn the „About Us“, it’s just you, and then totally irrelevant „HTML JS CSS“, that‘s for people that just graduated from college or bootcamp. No customer will care for this.\n\nAll the pictures look too random. „People with computers“… bit boring\n\nI started to like the portfolio section until I scrolled down and you just pasted the full webpage as a single image to the website. Looks completely off.\n\nWhat I like: the descriptions in the portfolio sections, nice to read how you and the customer worked together for a satisfying solution. The accolades are also a nice touch and you seem like a great person to work with.\n\nI would also rethink the name. „Test valley“ sounds like you accidentally released a test build. Why „test“? For someone that adds technical details to their About Us page, you should know that „test“ is super overloaded and mostly means „not final“ or just „testing“.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sizes and spacings are to be improved, by much. Everything is too big, yet some text is too small. Not everyting is aligned corectly, ex. contact info next to form looks like it shouldnt be there. \"Discuss the project\" don't look as good as you might think",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Looks solid! You could add a little more life - make that round logo spin, on scroll maybe. Also I’m not a fan of stock photos with happy people.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Site is cool but not gonna lie most won't notice but some of your copy has chatgpt signature phrasing in it.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac9r8z",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac9r8z/html_template_suggestions_please/",
    "title": "HTML Template suggestions, please.",
    "points": null,
    "comments": [
      {
        "comment": "Building something big like that; I wouldn’t use a template at all. I’d go for a framework like React and use Tailwind with Tailwind UI or another component library.",
        "points": "1 point",
        "children": [
          {
            "comment": "Tbh, I want the template mostly for the UI/UX. I'm good with React (not with Tailwind, though that's something I've wanted to learn for sometime now), but I'm not so great at designing UI/UX.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "GitHub list of templates: https://github.com/bradtraversy/design-resources-for-developers\n\nI am also struggling to find high quality free html templates so if you have a website you find which you can single out and highly recommend let me now. For now all I can offer you is a list of resources you can look through",
        "points": "0 points",
        "children": [
          {
            "comment": "Thanks! Those are really helpful.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac99ei",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/2ogaoo4w1zec1.gif",
    "title": "I built a programming assistant that searches the web to help integrate packages into your code",
    "points": null,
    "comments": [
      {
        "comment": "Check it out here: https://useadrenaline.com/\n\nI built this because alternatives like don't have the best interface for dealing with code snippets, and also let you attach multiple snippets of any size to a question. With this, it's a lot easier to questions about integrating packages or libraries into your code and get answers grounded in search results.\n\nPlease let me know what y'all think! Showing attached code snippets inside the question box was an interesting design problem, and I'd love some feedback.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac92e7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://traintocode.com/courses/react-typescript-conversion/1-1-jsx-to-tsx/",
    "title": "I made an interactive TSX tutorial using Monaco editor",
    "points": null,
    "comments": [
      {
        "comment": "little styling bug: https://imgur.com/a/rs2uLR6",
        "points": "1 point",
        "children": [
          {
            "comment": "Great catch thanks!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I know there's a ton of these CodePen-style tutorials but I haven't come across many that support both TSX and React, so I made one. There's 12 lessons including using TypeScript with styled-components, NextJS and Redux.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac8y8p",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/7yu5n1mayyec1.png",
    "title": "What's the point in SEO when stuff like this happens?",
    "points": null,
    "comments": [
      {
        "comment": "I could be wrong, but I think SEO is just to get your site near the top of the search results.\n\nTechnically, these are paid ads that fall outside of that.\n\nOn a personal note, I usually scroll past the ads when I'm searching for something anyway.",
        "points": "530 points",
        "children": [
          {
            "comment": "You're not wrong. A major complain about google in recent years has been the amount of ads they'll stuff at the top now. It makes it so on many devices, your first organic results are now below the fold. Whether this truly makes google a worse product or not is up for debate, but as far as perceived performance, it's definitely hurting them when the average person notices they always have to scroll down to find something relevant to their search.",
            "points": "34 points",
            "children": [
              {
                "comment": "The other complaint is that the search engine sucks and it’s impossible to get relevant results that aren’t stores",
                "points": "16 points",
                "children": [
                  {
                    "comment": "It's definitely gone down hill",
                    "points": "3 points",
                    "children": [
                      {
                        "comment": "To be fair, so has general content across the internet.\n\nIn the early days of search, everything it found was relevant. Now 99.999% of the internet is spammy garbage, so search results are inherently poisoned by this.",
                        "points": "",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "only to click the first link which was the same as the ad anyway.",
            "points": "104 points",
            "children": [
              {
                "comment": "If you searched bet365 and virgin games was still top of the search after the paid ads then their SEO is better... There's your point",
                "points": "37 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Pretty much everyone I know scrolls right past the ads, the only time I click them is by accident",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Bet365 was the next sponsored ad (off screen), followed by the non-sponsored link.\n\nI don't work for them or anything, I was just surprised that a massive company got ousted from the top spot from a direct search of their company name.",
            "points": "-25 points",
            "children": [
              {
                "comment": "Do you know how ad sales work?",
                "points": "37 points",
                "children": [
                  {
                    "comment": "it's pretty gross that Google will allow you to buy your competitor's name as a keyword.",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Uhh why is that gross? It's a free market.",
                        "points": "-5 points",
                        "children": [
                          {
                            "comment": "Nothing that happens under free market conditions is gross?",
                            "points": "3 points",
                            "children": [
                              {
                                "comment": "You right, got me.\n\nNow explain specifically why it's gross to allow competitors to buy ads on searches for b365.",
                                "points": "-3 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "Yes I do, the question is about the benefits of SEO when a mobile user doesn't even see their search target above the fold because of the sponsored links above them.",
                    "points": "9 points",
                    "children": [
                      {
                        "comment": "So you can rank for searches, which does not count the sponsored ads",
                        "points": "25 points",
                        "children": [
                          {
                            "comment": "He literally said that bet365 have also a sponsored ad off screen. That's the point he's asking, why the sponsored ad is the last one, in a direct search?",
                            "points": "-3 points",
                            "children": [
                              {
                                "comment": "Uhh so they bid less on their own name because it's their own name?\n\nCompetitors trying to take market share from b365 would naturally bid more to take the top ad spot on a search for b365?\n\nI guess you don't know how adsense works?",
                                "points": "1 point",
                                "children": [],
                                "isDeleted": false
                              },
                              {
                                "comment": "Because the others have paid more to have their listings placed higher in search. It's got nothing to do with SEO.",
                                "points": "1 point",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "Paid ads aren't the same as organic results. They've been around for ages, to the point most people are conditioned to gloss over the top one or two seeing it's paid. If I've got one complaint, it's that google is no longer displaying one or two paid ads, but several.",
                        "points": "10 points",
                        "children": [
                          {
                            "comment": "I think you're giving \"most people\" too much credit. Most of the people you know are probably more educated on this sort of thing than the average person.",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "Sponsored ads are totally separate from SEO listings.",
                        "points": "15 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "Most companies understand that ads are pretty popular on the internet these days. The fact that you just discovered them is the most fascinating thing here",
                        "points": "1 point",
                        "children": [
                          {
                            "comment": "The fact that he learned SEO means shit is quite a discovery. A useful thing to remember when a client starts with all that SEO crap. I mean, why giving effort into this when you get pushed out of searc result by ads?",
                            "points": "2 points",
                            "children": [
                              {
                                "comment": "Idk anyone who doesnt use an adblocker",
                                "points": "1 point",
                                "children": [],
                                "isDeleted": false
                              },
                              {
                                "comment": "You are not pushed out, it's just that the search results are not even shown unless you scroll.",
                                "points": "1 point",
                                "children": [
                                  {
                                    "comment": "Yes, the wording was wrong. You get pushed out of (under) first page. A useful thing to keep in mind, specially because it will probably get worse with time.",
                                    "points": "0 points",
                                    "children": [
                                      {
                                        "comment": "Yeah, that's true.",
                                        "points": "0 points",
                                        "children": [],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              },
                              {
                                "comment": "Because PPC costs money to keep going, SEO doesn't. Also, the better/more relevant your landing page is, the less you need to spend on ads.",
                                "points": "0 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "above the fold\n\nThat this phrase ever transitioned from being about newspapers into webpages is a travesty. Never use it. It means nothing. There is no \"fold\". You have no idea how big my screen is (matron).\n\nAlso, this isn't anything new. Sponsored spots have appeared above organic search results since the very earliest days of Google's existence. How is this news to you?",
                        "points": "-6 points",
                        "children": [
                          {
                            "comment": "christ, thank you",
                            "points": "-1 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "You’re getting downvoted but this has been written about and studied. There is no fold! https://www.lukew.com/ff/entry.asp?1946=",
                            "points": "-2 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "😂 Thank you. Many of us have seen this phrase and never associated it with newspapers!",
                            "points": "-2 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "SEO and SEA are separate things\n\nIn cases with crazy SEA going on, SEO investments are indeed less effective.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Ya, you’d think putting the sponsored ad by the actual sponsor, which the user was specifically searching for, would be beneficial to everyone, especially the paid sponsor and Google themselves.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "In my country they have even removed the \"sponsored\" tag, so you don't know what's ads and what's organic",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "SEO isn't really going to do that, it's just going to make it easier to find. Creating content that gets engagement from people gets your site near the top of the search results. e.g. video posts gets more engagement than text and picture posts.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "On desktop at least Google will give you the card on the right hand side telling you about the company Bet365, which is probably what you were looking for anyway",
        "points": "28 points",
        "children": [
          {
            "comment": "True, but in this example I'd say a large majority of gamblers are mobile users (for sports gambling at least).",
            "points": "2 points",
            "children": [
              {
                "comment": "",
                "points": "",
                "children": [
                  {
                    "comment": "Speak for yourself. Baltimore -5.5, book it 🔒",
                    "points": "-7 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": true
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Most people skip past the sponsored postings",
        "points": "180 points",
        "children": [
          {
            "comment": "...looks at Google's annual revenue...\n\nAre you sure about that?",
            "points": "163 points",
            "children": [
              {
                "comment": "I'll sometimes click on a sponsored link when I know I want to visit that website, just to make the company have to pay for my visit.",
                "points": "72 points",
                "children": [
                  {
                    "comment": "I do the opposite so it makes the company think the ad is useless",
                    "points": "55 points",
                    "children": [
                      {
                        "comment": "They’ll see what keywords are working for the ads and realise they’re all the brand name and hopefully give up 😉",
                        "points": "7 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "And thus, balance is achieved.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "If you want to fuck people over, search for personal injury attorneys and start clicking the sponsored links- apparently it can cost over $500 per click on very specific searches.",
                    "points": "9 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Google Stonks 📈",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "I do that too. Fuck 'em.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Sometimes I'll click when I'm not interested, just to make them pay anyway, then leave without clicking anything on the page so they see their conversion rate shrink.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "I'm pretty sure a huge part of their ads revenue is them selling our data to other companies, not actually users clicking on links. I mean, using google search in 2024 ? Without an adblock?",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Can you explain the what “selling data” means here? In a way that makes clicking on a paid search ad unique from clicking on an organic link?",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Google collects literally everything about you. Things you would never think of, they collect. Shit like \"the amount of time that elapses between the search results first being displayed and you first start to scroll down the page\" and even deeper metrics than that. They have this information for millions of people. All that data for millions of people is worth a lot of money. Companies buy it so they can analyze it and figure out better ways to advertise/market to you and/or so they can spam you via email, phone, and snail mail. And you implicitly agree to it every time you use a Google product.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "The commenter’s point was differentiating paid ads vs organic listings, and the data generated from clicking on each. I was challenging how that would differ for Google - either way, you clicked on a link in their ecosystem.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "And I am unable to completely explain it to you because I'm not a super smart Google engineer or a psychologist, but rest assured, Google has data that differentiates between the two.",
                                "points": "0 points",
                                "children": [
                                  {
                                    "comment": "Sorry mate, unless you can explain, I'm gonna go with Occam's Razor. I work for a large F100 (specifically in a digital marketing function in our industry), and the amount of times the interwebs makes the most outlandish assumption about how/why we do things is wild. That whole german? phenomenom about how we scoff at news articles written on subjects we're experts in but take everything else they write for gospel with minimal challenges.\n\nYes they can differentiate between someone clicking on a paid/organic link, but the assumption that it grants them a new set of data to use (and to explicitly \"sell\" - that word is so loaded btw) doesn't seem apparent to me.\n\nI do agree with the final premise of it all - everything is in service of finding a population of users who'll have a higher likelihood of responding to marketing... and the entirety of our usage of the internet is more and more becoming ads space ):",
                                    "points": "0 points",
                                    "children": [],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "But that's not the point I make. The point I make is that I think Google makes more money selling your data than they make by having you clicking on an ad.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "… looks a Fortune 50’s google analytics …\n\nyes!",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Yeah I just assumed most people do this, who purposefully clicks a sponsored link!",
            "points": "12 points",
            "children": [
              {
                "comment": "I click the hell out of my competitors’ ads.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Lmao right that’s what got me and my friends talking about it cause one of them clicked one of the ads by accident",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "No they don't. The more techy ones might, but if a regular user searches for something and a relevant sponsored link appears first in the list, that's what they'll click.",
            "points": "47 points",
            "children": [
              {
                "comment": "I agree. Otherwise companies would not spend big money in this way",
                "points": "16 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Yes, there is a reason these ads only get 1-3% CTR",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Mine has an average 45% ctr across 1mil clicks per month. Depends on niche, ad quality, kw intent, etc",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Of course. I just threw out some general numbers. 45% is not indicative of most ads though.",
                        "points": "-3 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "1% ctr on a search for something like betting is huge",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "But according to OP, all non-technical people click on these. And I was speaking in generalities, not about betting specifically.",
                        "points": "5 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Yes they do, I just had this conversation with my friends the other day, they all agreed they never click the sponsored links, they’re always some bullshit ad, never what your looking for",
                "points": "-16 points",
                "children": [
                  {
                    "comment": "And your group of friends is representative of the entire population of internet users? A varied selection of generations from different walks of life, cultures, backgrounds?",
                    "points": "13 points",
                    "children": [
                      {
                        "comment": "No",
                        "points": "2 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "Lmao as opposed to your 1 person experiment with bet365?",
                        "points": "-3 points",
                        "children": [
                          {
                            "comment": "No, as opposed to the reams of user experience research conducted over the last few decades.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "And what did those researchers conclude?\n\nThat it’s best to put ads where they are easily seen if you want to make money from them.",
                                "points": "-1 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Usually hate Redditors that screech \"source?!!11¹\" at every minor little thing but in this case... got a source for that? I can see techie people doing that, but that's not most people.",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "That's a bold assumption not true",
            "points": "7 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "And then skip through the 3 pages procedurally generated garbage articles with ads in them.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Absolutely not. The average user has no concept that those clicks have a cost associated with them, and will click the one they're seeking.\n\nNow imagine that you're in a space that is not allowed to have a remarketing/exclusion list (religious, medical, etc) to avoid advertising to your returning customers, and 40% of your advertising costs is your daily customers getting back to the website.\n\nIt's absolutely organized crime level of shit.",
            "points": "1 point",
            "children": [
              {
                "comment": "We somehow live in a world where a lot of people have been convinced that the way you open Facebook is by typing \"Facebook\" into Google and clicking the first link. None of this surprises me.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Most people like us. But my mum cannot make the difference",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It seems like lots of people here are echoing the “you don’t know how ads work” comment.\n\nI think it’s fair to assume that just because someone complains about them doesn’t mean they don’t understand, perhaps too many people not taking this post as lighthearted/jokingly as OP intended",
        "points": "11 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Virgin Games is a gambling company now?\n\nRIP",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Not answering your question but last time I used \"Ublock origin\" it removed those ads.",
        "points": "3 points",
        "children": [
          {
            "comment": "It's crazy how few people use ublock. Whenever I help someone with their computer it's the first thing I install; Firefox and ublock\n\n[ Insert robot meme ]",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Many people like me use adblockers and never see those sponsored sites. And anyway almost everyone that is familiarized with internet will avoid sponsored sites",
        "points": "3 points",
        "children": [
          {
            "comment": "I'm surprised this had no upvotes. Some sites are unusable without adblockers.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I said it once and I say it again: SEO is scam",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What’s your question? You are searching bet365 but didn’t get your result? Or your ads bet365 didn’t appear at sponsored?",
        "points": "15 points",
        "children": [
          {
            "comment": "It's a rhetorical question, implying that no matter how good your SEO is, Google will fill your potential visitor's mobile screen with unrelated (competitor) sponsored ads.",
            "points": "44 points",
            "children": [
              {
                "comment": "Of course they will. That’s their whole business model.\n\nSEO is good to make sure you are findable though. At all.\n\nWrite good descriptive content for your site In schema structured ways and it will help.",
                "points": "21 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "You can ask google to stop someone advertising on your brand name if you have a trademark, you can submit the form and stop someone from bidding on your trademarked terms.\n\nall you need to do is fill some form.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "There are plenty of businesses where you need to be visible, but you wouldn't have the need for ads.\n\nE.g. made a website recently for an equestrian club in a mid-size town. There aren't many competitors there, so if people search for a horse club nearby, they aren't going to get relevant ads anyway.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Yes it's a business.",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I think it makes sense for Google to priortise paid ads at the higher up after all those search engine doesn’t come free. Beside these sites paid for the keyword “bet365”. If bet365 has the capacity to pay for their own keyword, they will be here as well. In SEM (Search Engine Marketing), the highest bidder will always get the highest priority.\n\nIf the bet365 do their own SEO (Search Engine Optimization), they can get ranked up naturally on their own keyword. And it’s free unlike SEM. So it matter how good your SEO.",
                "points": "-4 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "How do you think Google manages to pay their gigantic servers? With goodwill and donations of websites?",
                "points": "-2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "If they are direct competitors then the ads are directly related. If you search for gaming sites and get ads for fishbowls, then you'd have a point.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "He searched for bet365 but competitors are running paid ads for that keyword. Companies can always ask google to stop “brand bidding” which means if someone tries to run an ad for bet365 or {brand name} google will not approve their ad.\n\nSometimes companies run their own ads just to stop competitors from brand bidding.",
            "points": "4 points",
            "children": [
              {
                "comment": "As far as I know, Google allows brand bidding as long as you don't mention that brand in your ad. That's what Virgin Games did. Not a single match of the keyword inside the title or description.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "It is the core of their business. \"Protecting the brand\" is a major advertisement spend for any well-known website that relies on traffic from search.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Devs and techs scroll pass the ads. The majority of people just click on the first thing they see. It's Google's business model. Can't blame them.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Nothing. SEO is not a magic pill. It's just a way to follow Google's search rules.\n\nA lot of SEO is bullshit anyway.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "do you work in seo for a gambling company",
        "points": "2 points",
        "children": [
          {
            "comment": "No, I was going to put money on my team winning today (despite the odds) and remembered that I had £2.50 left over in my bet365 account.\n\nI'm a developer who occasionally has to deal with SEO-related crap, which is why it struck me as odd that my phone screen contained only unrelated sponsored ads.",
            "points": "5 points",
            "children": [
              {
                "comment": "The truth is these gambling operators pay a lot of money to 3rd party affiliates to deliver new customers. That creates a very strong incentive to spamify the search results for gambling keywords as much as possible, whether it's through paid ads or organic SEO.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "which is why it struck me as odd that my phone screen contained only unrelated sponsored ads\n\nSo you literally never search for anything via a search engine ever on your phone? All results are like this and have been for years.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Those companies paid to be on the top of search results and google makes money off ads. I don’t see any problem here lol",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I don't even use Google anymore",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Not everyone clicks on the ads and not every query has ads.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Should be pretty easy to write a plugin that removes any sponsored results. But yeah google is pretty shit these days.",
        "points": "0 points",
        "children": [
          {
            "comment": "Ad block?",
            "points": "1 point",
            "children": [
              {
                "comment": "Does it remove ads on Google results as well? That's nice in that case. But I like to roll my own sometimes. It gives me a little more insight into what's happening and let's me learn stuff.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Yeah. Ublock Origin I think gets rid of most of them automatically, and is pretty easily customizable for anything it doesn't catch out of the box. You have to get comfortable with the filter syntax, but that shouldn't be an obstacle to people in this sub.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "People usually skip the sites that have a \"sponsored \" tag I think. I'm that kind of person. The label is a red flag to me.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "These are paid search ads so aren’t related to SEO which is aimed at driving relevant traffic through organic listings. Also paid ads tend to see a much lower click through rate. While it varies depending on query, the top organic listing tends to see around a 28% CTR while paid ads will have around a 2% CTR.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Easy: stop using Google.",
        "points": "-8 points",
        "children": [
          {
            "comment": "You seem to have missed the point.\n\nOver 80% of searches are done on Google, and you can't tell all of your potential visitors to use a different search engine so they can find you easier.",
            "points": "7 points",
            "children": [
              {
                "comment": "I know, it was more of a PSA than advice just for you. If everyone would stop using Google though it would work. I could understand the top result being sponsored, but the first three? The whole bloody page? No fucking way",
                "points": "0 points",
                "children": [
                  {
                    "comment": "That's what surprised me, I've never seen it that bad before.\n\nThe non-sponsored link I was after was 5th, with a direct search of not only the full company name, but the main portion of the domain name as well!",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "This is much more of a problem for competitive searches. Betting companies are of course heavily competing with one another.\n\nIt’s how Google makes money.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "No point at all just pay for the ad placement and get #1\n\nNot like Search Engines even return actual results anymore",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Welcome to capitalism. Is this your first visit?\n\nOn a serious note, a little work with uBlock origin will get rid of all this stuff pretty easily. I use it with :has-text() to filter out links to garbage sites that never give me any useful info anyway.\n\nWhat I hate most is an entire page of results to sites that look like they're relevant, then give you three introductory paragraphs about the topic you're looking with \"Register for free to read the rest\". No, thanks, you can sell someone else's PII, I already get enough spam.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Those ads are still SEO optimised\n\nEdit: grammar",
        "points": "-2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It is how it is nowadays. And it seems like nothing can be done about it.",
        "points": "0 points",
        "children": [
          {
            "comment": "That’s just rubbish, if you don’t like Google’s search results then there are plenty of better options out there that don’t cram ads down your throat.\n\nOn DuckDuckGo you can literally turn the ads off if you don’t want to see them.",
            "points": "0 points",
            "children": [
              {
                "comment": "I am aware of that but I can't force people that are looking for my site to use specific browser or search engine. That is the problem.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I really, really wanted to like DDG. It just was returning few, no, or irrelevant results to too many of my searches. I was spending twice as long searching because I kept having to go back to Google to look for things DDG couldn't find.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "just pay more\n\nunless there is trademark for bet365 but I have no idea how trademark works for keywords in ads.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is this why people can't be bothered with search engines?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There’s a paid listing, and there is a free site listings.\n\nIf you want to be at the top with the sponsors, you need money.\n\nIf you want to use SEO, then your listings will show up depending on how good, underneath the sponsors.",
        "points": "0 points",
        "children": [
          {
            "comment": "If you want to be at the top with the sponsors, you need money.\n\nTrue on Google, true in life.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "So you're trying to open a casino ?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There are 2 types. SEO, In a nutshell means you have to configure and optimize your site to be the top on searches. SEM is what your seeing. It means they paid to be the top. Free and Paid",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You are using the following mentality, why eat if you are going to shit out the food. Why sleep if you gonna wake up again. Good SEO will get you right under the ADs bad SEO and your users will never see you.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Former marketer here. You will not believe the amount of people who intentionally skip ads and click on the first organic links.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "SEO = F2P\nAds = P2W",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Adblocks exist\nWhat you are seeing here is unfair competition. Advertising in this way is reason for civil lawsuit and for google to take down those ads. I have written many C&D letters for this reason.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "PPC in competitive sectors (gambling, hotels, law, insurance, financial services, etc) can be crazy expensive. A good organic ranking will get you traffic for ‘free’ (beyond the time and effort to get there in the first place obviously). A mixture of both is probably best.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The point of SEO is to make our customers compete over who can pay us the most money. -- Google",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What if it doesnt happen ? Then bet365 is the nr 1. and if it happens, bet365 knows about that and does marketing on meta / television / real life etc.\n\nDo you think little bit of good SEO is enough to become a company like tipico or bet ? Nobody will find your website if u dont do both, ads and seo to be at least on the first page",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Skip sponsored content, use other browsers?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Competition is a thing, and it's not gonna play fair either.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "SEM != SEO",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Money",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Usually my brain just ignores anything that's under sponsored 😂",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It’s still beneficial to work on seo related strategies even if you’re not paying ads. Pending industry being top ten could still mean millions of visitors a year.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Nobody clicks on ads first",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Google blows. I googled a url without .com the other day and had to go to page 2 to see it. Google is slowly becoming an add riddled ask jeeves.",
        "points": "0 points",
        "children": [
          {
            "comment": "I don't know why this doesn't have more upvotes. It's true.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Sometimes I just click the ads to cost the company money",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yea I just skip those results. I assume almost everyone does to",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Youve just discovered Google’s business model, congrats",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I've been using kagi search engine which has no ads because it's a $5 subscription.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Google is trying to squeeze every last penny out before the adpocolypse. It's why Youtube has so many ads now. People will increasingly switch to AI chat to lookup information.\n\nGood riddance, Google has gotten gradually worse over the years.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Exetentions people extensions!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Having used ad blockers all my life, I forgot the search page even had ads. Life is great without ads",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "SEO isn't very helpful in most scenarios; however, there are a few cases where it is:\n\nSomeone is searching for your company/product but there is something else with the same name/abbreviation. It happened to me once where a game I was working on got drowned out by someone who happened to choose the same exact name for a sloppy game jam game and manage to outrank the game we had been working on for months\n\nYou are going for a marketing campaign and are targeting very specific keywords such as \"best vegan budget apple pie recipe\", which most apple pie recipes aren't\n\nIn most cases though SEO doesn't do much",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac8y88",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://www.reddit.com/gallery/1ac8y88",
    "title": "Why does the width on website no fit full screen ?",
    "points": null,
    "comments": [
      {
        "comment": "Max-width: 1440px. Margin-inline: auto.",
        "points": "11 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "1440 what? 1440 humans? 1440 plants? Don't forget your units. 1440px.",
        "points": "7 points",
        "children": [
          {
            "comment": "1440 bananas",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "1440 Aircraft Carriers",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Search for boxed view.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "For some reason that screenshot as is looks pretty catchy. I'd actually make it like that with the scribbles and gradient.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Check out the bootstrap container for a sensible width",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I usually add margins to left and right and gradually reduce them with media queries.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "First, you need to specify the correct units of measure. In your case here, it looks like the desired max-width would be 1440px. However if the actual screen width is greater than that, you will see the content have a side margin to fill in the difference.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is called a container, and the container width is usually dependent on the viewport width (responsive for different breakpoints). Check Bootstrap or Tailwind how they do their container.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac8wqk",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac8wqk/connect_gige_camera_such_as_basler_ace_to_chrome/",
    "title": "Connect GigE camera such as Basler ace to Chrome, Safari, Mozilla etc",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1ac8nt9",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac8nt9/sharpapi_aipowered_swiss_army_knife_api_for/",
    "title": "SharpAPI - AI-powered Swiss Army Knife API for Programmers",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1ac8bkc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://mysterysearch.lol",
    "title": "I made Mystery Search - Google, but you get the last person's search",
    "points": null,
    "comments": [
      {
        "comment": "love the idea! (your personal website is also very nice)",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac84zm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac84zm/api_design_advive/",
    "title": "Api design advive",
    "points": null,
    "comments": [
      {
        "comment": "I'm not fully aware of your deployment strategy (e.g. are there external vs internal APIs?)\n\nHowever, personally I don't feel comfortable with tenant and/or site information being part of API invocation - as long as those are externally exposed APIs. Basically, caller shouldn't have any knowledge of which user/booking belong to which site/tenant - or even about existence of site/tenant.\n\nMy guess is that externally exposed API (i.e. exposed to external caller) will only ask for user/booking info (without any knowledge of existence of site/tenant) - and then there will be some API-gateway-kind-of layer which will figure out (based on some mapping) details about site/tenant. Further, this layer will invoke internally exposed API with this additional knowledge (i.e. request enrichment).\n\nAs long as APIs you've mentioned are internally exposed, I think those are OK. If those are externally exposed APIs, then IMO that's not OK (i.e. external client requiring to have knowledge of tenant/site).\n\nFurther, I hope you've done due diligence w.r.t. to REST URL convention (assuming that those are REST APIs) - e.g. /users, /users/{userid}, /users/{userid}/<additional user details> and pagination etc. (e.g. what if /users return data of thousands of users which is too much to be handled by frontend).\n\nI hope this helps.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac7186",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac7186/problem_in_serving_css_statically/",
    "title": "Problem in serving CSS statically",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1ac6x3i",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac6x3i/whats_the_point_of_wasm_and_howwhen_should_i_use/",
    "title": "What's the point of WASM and how/when should I use it?",
    "points": null,
    "comments": [
      {
        "comment": "Never use WASM just because you want \"speed\" unless you can justify this. The use case for these performance benefits are uncommon in most web apps, only when you repeatedly make heavy mathematical operations (like in DSP or rendering applications - even then AudioWorklets or GL shaders can already help you). A new dev trying to sweet talk his PM that their eCommerce shop needs a WASM rewriting for speed is worthy of a Batman slapping Robin meme. Wrong solution for wrong problem.\n\nThe best use case is portability of libraries. For instance if you want a client side PDF generation functionality you can benefit from heavy binary operations (font rendering for instance) executed outside of the JS VM using existing solutions in lower level languages.\n\ncan I pull it off together with Svelte or Vue or any other framework?\n\nYes, your JS layer posts messages to the WASM VM which you can consider requests to perform an operation. This is framework agnostic.",
        "points": "13 points",
        "children": [
          {
            "comment": "Hmmm I see thank you for explaining!",
            "points": "1 point",
            "children": [
              {
                "comment": "I would like to add that it doesn't hurt to experiment with the technologies anyways, if only just to get an understanding of how to interface between JS and the WASM world. :)\n\nWASM itself isn't a \"thing to learn\" btw, you're writing code in a lower level language (Rust, C(++), etc.) which is compiled to a .wasm binary. You could learn those languages individually or just enough to solve a true problem, (to me) the true understanding comes in how to use it within the context of a web app.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The main advantage is that it's a binary compilation target, which means you can write code in other languages and compile it for the browser. I've ported C++ and Rust code to web projects by compiling it to WASM and interfacing with JS code.\n\nThere are some performance benefits too, because WASM is closer to the machine code that the underlying CPU uses, but I don't think it's the main advantage of the technology.\n\nIn the cases I used it, the code I compiled to WASM was mostly mathematics or heavily calculation-oriented code, so maybe that's more appropriate to seek performance on. Most web code doesn't really do much computation, and wouldn't gain from the performance improvement.",
        "points": "3 points",
        "children": [
          {
            "comment": "So Wasm is like a niche kinda thing? Well it happens that I have performance issues with my (probs too much) JS animation going on where it just cranks the cpu usage to max. It's quite literally some bubbles moving around and their props are calculated 15 times a sec. (In hindsight I should've probably just made a few css animations but the JS ones look more alive). Is this a use case for Wasm? To get lower usage for the same effect?",
            "points": "0 points",
            "children": [
              {
                "comment": "Probably not.\n\nWhen animations are involved, the problem will usually be on the display end.\nIf you're animating style properties of DOM elements, that gets expensive quickly. Animating transform and opacity usually isn't much of a problem, but most properties will trigger layout recalculations, and that will tank your performance.\nUsing WASM wouldn't change anything here, since the performance issues come from the work the browser has to do to render the changes you've asked for",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Ah, I see. So I really should ditch my JS alive touch to go for a more stable css approach instead.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Purely CSS animations can be a problem too, it's more about what properties you animate",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Well I'm animating the top and left properties for the bubbles. I've been experimenting with css and it's definitely better in performance yet it doesn't feel so alive, feels dull but I can tweak some things around.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "Right, don't animate top and left, animate transform",
                                "points": "1 point",
                                "children": [
                                  {
                                    "comment": "Now what the hell was that performance improvement?!\n\nWent from like 20 fps to a full smooth 60! Thank you!",
                                    "points": "1 point",
                                    "children": [],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "Nah, I don't think that's the takeaway. If you can do the transitions or animations in css it's definitely more performative.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Yeah that guy either doesnt know what hes talking about or you understood him wrong. Basically webassembly converts your high-level language code, wether it be JS, C+ or any other language, and converts it into machine code (i.e binary) that web browser can understand. Standard JS is interpreted line by line at run time.\n\nEdit: I think what the video might have been trying to say is JavaScript is used to load WebAssembly modules and to provide an interface between the WebAssembly code and the web page's DOM.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "WASM isn't about speed or performance, but a compilation target. The idea is to be able to run C++ (or other) routines within a web browser and expect a normalised performance across browsers in the same machine. The normalisation term here is relevant, because you could optimise JS-only routine to be very fast in Chrome, but it wouldn't be very fast in other browsers. Always keep in mind that JavaScript by itself is very fast.\n\nTL;DR You don't make websites with WASM, you run C++ routines. That's the use-case.",
        "points": "1 point",
        "children": [
          {
            "comment": "Some of this expectation may change over time. Once WASM GC work is standardized and WASM threading support and use becomes more prevalent, it might become a go-to solution for performance issues where the complexity is justified.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The guy may have been confusing WASM and asm.js. The latter was a subset of JS that’s designed to be really fast, so other stuff can compile to it.\n\nWASM is a bytecode standard, and the there’s at least one interpreter written in Rust, though you could write an interpreter in any language. The point is to have a standard fast VM allowing native-like performance in the browser. Or at least Java-like performance. I like to think of WASM as the new JVM.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is it useful to try wasm to solve crash browser issues when trying to create pdf with hundreds of pictures ? I want to create the pdf on the wasm side with Rust, but I'm not sure of the result regarding the previous comments...\n\nThank a lot.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac6jsu",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac6jsu/can_a_frontend_developer_build_a_website_without/",
    "title": "Can a front-end developer build a website without a back-end developer's assistance?",
    "points": null,
    "comments": [
      {
        "comment": "absolutely! you can totally build websites with just front-end skills… start with cool portfolios or blogs (static websites)… Full-stack is awesome for more advanced stuff like e-commerce",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You dont need any courses or classes to build websites or become front end developer.Having certificates will not help you in finding a job as a developer.You will be able to build basic websites with just front end, anything complex requires backend.if you have any questions - shoot.\nEdit:\nThe thing youll miss the most with frontend only will be storing data securely. Its required for payments , implementing user account functionality (register / login / email verification etc).",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "yes, a front-end developer can build a website without the assistance of a back-end developer, depending on the complexity and requirements of the project.\n\nFor static website a front-end developer can handle full project development without help of back-end developer, static website don't need dynamic data to show on website.\nFor more complex website and functionality where your wanted to show dynamic data and authenticate user, then their is a need of back-end developer.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yes, you don’t need a back end for static sites. You can even make dynamic sites, using other people’s data and obtaining it through API calls.\n\nThere are plenty of free apis to use, such as pokemon or cat facts.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yes, you can but you're going to have a tough time if all you know is the frontend. But you're in luck! Learning the backend is super easy!\n\nTry out some of these resources:\n\nhttps://developer.mozilla.org/en-US/\nhttps://web.dev/\nhttps://github.com/matheusfelipeog/beautiful-docs\nhttps://stripe.com/docs/api\nYouTube: Full Stack Web Development Tutorial Course",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There’s no such thing as a certified front end developer, find a project you wanna make don’t think about if you’re actually able to complete it, start working on it, even if you fail making part of the project you’ve learned something",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you can do programming on the front end, try doing whatever programming you need on the back end, and boom now you are now full stack",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Absolutely. I only know html and css. None of my client sites have a backend. I made this in html and css.\n\nhttps://www.mapleandyolk.com\n\nYou can do it. It’s easier than you think.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac69ib",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://codepen.io/mburakerman/full/GReMeOL",
    "title": "🖤 ❤️ heartwave",
    "points": null,
    "comments": [
      {
        "comment": "this is cool! (though maybe add an explanation because it took me a while to figure out what this does)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac617o",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac617o/help_me_pick_a_stack/",
    "title": "Help me pick a stack!",
    "points": null,
    "comments": [
      {
        "comment": "I would recommend SvelteKit for the frontend. It has good SEO features, smaller bundles, and loads only what is needed on the current page. It also has simpler code and generates vanilla JavaScript from the code.\n\nSvelteKit is also very good for SSR with the right adapter.",
        "points": "2 points",
        "children": [
          {
            "comment": "Ty! I'll give that a look",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "https://fresh.deno.dev/\n\nI think you might find this approach intriguing.",
        "points": "-1 points",
        "children": [
          {
            "comment": "Looks interesting. Like the security aspect.",
            "points": "0 points",
            "children": [
              {
                "comment": "It hits all your requirements except the use of Go, however, you can always use wasm with Rust to bring down execution times. Deno deploy has a 10ms execution time limit per request.\n\nWhat I find nice is the islands architecture. You have really fine grain control over where JavaScript is delivered to the browser forcing you to think about how you're using it.",
                "points": "-1 points",
                "children": [
                  {
                    "comment": "Go isn't a requirement. Just something I want an excuse to play with.",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Next.js and Remix are very SEO friendly and have tiny payloads. So you're wrong about that. They aren't SPAs until they are first rendered, before that they are SSR.\n\nMy preference is Remix, it's more flexible and just overall nicer to work in. Remix doesn't have React Sever Components yet, which more or less allows a single component to work both in SSR and CSR, but they are coming.\n\nThese frameworks generally don't work well as main backends due to limitations of connections on DB connections. It's better to have your Next/Remix/SvelteKit/Nuxt call a backend API, which you can write in Go if you want. If I were you, I'd roll out a couple smaller microservices using Go before going all in. I've worked in Go quite a bit and I really dislike the language and ecosystem a lot.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac5lcc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/sp4gh874txec1.gif",
    "title": "Navigation in Print Media Style",
    "points": null,
    "comments": [
      {
        "comment": "TUTORIAL, CODE & DEMO: HERE",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "ok, that is seriously cool.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac5isa",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac5isa/web_app_customer_account_login_template/",
    "title": "Web app - customer account login template",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1ac5hab",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac5hab/too_many_layoff_recently_so_i_created_an_app_to/",
    "title": "Too many layoff recently so I created an app to help write cover letter in under one minute",
    "points": null,
    "comments": [
      {
        "comment": "How about adding pdf upload and then generating letters from that content? I'll try this version when I get back to my office.",
        "points": "1 point",
        "children": [
          {
            "comment": "thanks for paying attention, actually I am making a quick one to validate the need of the market. I wil ship more if it gain more traction",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac5h5j",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac5h5j/does_a_web_development_job_have_no_growth/",
    "title": "Does a web Development job have no growth?",
    "points": null,
    "comments": [
      {
        "comment": "There is a lot of growth. Junior developers become senior developers. Front end developers become full stack developers…. You can go from making $40K to over $100K and more realistically it will take you a year or 2 to find a junior role",
        "points": "14 points",
        "children": [
          {
            "comment": "thanks for clearing my doubt... imma start learning web development from 2nd april right after my exams end.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "40k that’s sad. My sister in law got a 100k job just coming out of college working with C in a company specialized in aeronautical engineering",
            "points": "-15 points",
            "children": [
              {
                "comment": "Junior dev salary is highly variable, and 40k shouldn’t be taken as an industry standard. Or even common tbh. Really depends on where you are and what company hires you",
                "points": "4 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "You can't really compare niche language/industry with general web development.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "What does your dad do for work? Sounds like he doesn’t have much experience with tech.\n\nSoftware is a huge part of nearly every job in every company.\n\nIf you learn how to build software that makes or saves a company money, there is no limit to your growth.",
        "points": "4 points",
        "children": [
          {
            "comment": "he works in a small software company with like <5 people that handles export billing and stuff... i think he is like tech support and does demos for client and stuff",
            "points": "0 points",
            "children": [
              {
                "comment": "What does he think your first option should be if not web development?",
                "points": "0 points",
                "children": [
                  {
                    "comment": "in the AI department as it is moving forward really fast right now",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "idk what the term is so i said AI department lol",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "I better understand now.\n\nIMHO the web is the default presentation layer for software, so having a healthy understanding of web tech will be valuable no matter where you end up.\n\nAI is certainly trending and will have an impact on the future.\n\nBut when you’re just starting I think the most important thing is to follow your own interests and curiosity. Build things for yourself and people you know.\n\nFocus on solving real problems and learn whatever stack or specialty necessary.",
                            "points": "1 point",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "Ask him how he thinks people are going to communicate and interact on the internet and through application? Those don’t write themselves and they probably won’t ever. He probably uses dozens of applications every single day that collectively employ thousands of developers. The world is only getting more software centric imo. But no one has a crystal ball.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "Try to not get into fomo, I don't think there will be that many strictly ai/ml jobs. And the ones that will open will ask for phds on good universities.\n\nTreating ai jobs like web is a mistake",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Web dev here, 14 years of experience and a Bach Science in CS. I’ve worked at a number of big companies whose names you know, and had some years where total comp including vesting stock was >400k. Not trying to brag or make comparisons, just trying demonstrate that there aren’t really many limitations on what you can do or make as a web developer.\n\nI’ve bounced around through product work (making features / websites / applications), platform work (build tools, testing frameworks, CI/CD, observability, etc), and a lot of architecture work. In all of those roles, my focus is on building websites, whether it’s thinking about end users or developers at my company. I like building things that people use, and making the things they use easier/better/faster. My current role is pretty much just architecture — helping hundreds of developers figure out best practices for browser and backend API design patterns, optimizing, etc. Designing software so that they can ship faster and more reliably.\n\nI’m not a full stack engineer, despite all of that. I don’t do ML, I barely understand SQL or anything about databases, and DevOps / microservices / hosting / etc is all Greek to me. My job involves doing many things, but at the end of the day, the goal stays the same: ship better websites, with a focus on users.\n\nYou absolutely can start going with 6 months of learning, which I love about web dev — how accessible it is. But I can also say that the more time you spend learning about engineering in general (with a degree, maybe, or something similar), the better set you’ll be for your whole life. The only one who will limit your career is you; don’t let anyone else stop you from doing what you want. Definitely don’t spend your life doing work that isn’t interesting to you, because that shit will eat you up.",
        "points": "4 points",
        "children": [
          {
            "comment": "thanks for that it kinda motivated me to become one even more... i do have a few questions which i'll be realllyy grateful if you answered them for me (its okay if u dont i dont wanna take up ur time)\n1. If i dont have a much of an artistic mind can i still be a front-end developer\n2. is college worth it? cuz ive heard that it really isnt for CS but it just helps build networks and the degree makes u more inclined to land jobs(which i can understand)\n3. where can i build network online cuz there isnt many programming events nearby my place(ive watched on youtube that mentorship can help you learn even more so will probably look for one)\n\nprobably have a few more but cant remember atm and dont wanna bombard u with question... thank you again :D",
            "points": "0 points",
            "children": [
              {
                "comment": "You can definitely be a front end dev and suck at design. Those are two separate roles in most companies now.\n\nA CS degree will build better fundamentals and give you a higher ceiling but a bootcamp or similar course will teach you more practical skills out of the gate. I would do both. University affords you tons of free time. Skip some parties and write some Python.\n\nIf you want a coach, mentor or whatever you need to get into a degree, bootcamp or something. It’s unlikely you’ll find people to do it for free given how valuable the skill is. That said, there’s so much material out there and plenty of projects to work on so I wouldn’t worry about this aspect too much.",
                "points": "3 points",
                "children": [
                  {
                    "comment": "thanks for answering appreciate it alot",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "I’m a terrible artist; some folks I know are far better about design stuff. I tend to be more aware of user experience stuff, trying to think about how people will use it. Everyone is different. Design is often a separate role at larger companies.\n\nObviously I’m biased, but I’m glad I did college. It was a fantastic way to get a generalized education on software, and gave me a great base of knowledge when I got jobs. It’s also necessary for doing a lot of more complex software jobs (like ML), so you could think of it as a choice to learn as much as you can and make more informed decisions once you’ve figured out what you like. You might hate web development! College is a great way to learn to write software, regardless of what you end up doing. I had never really done much of any web dev before my first job, I just knew I wanted to work on stuff that people use (as opposed to more backend stuff).\n\nI don’t have an online network aside from old coworkers or people I follow/chat with on Mastodon (formerly on Twitter). I don’t find YouTube accounts helpful for learning, because they’re often hype driven or working on views rather than delivering deeper knowledge or thoughtful commentary. Someone else might have different ideas, though!",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Web is a excellent place to learn programming, but programming websites isnt where the big money in software is. start with it and have a plan to progress so you dont get stuck doing old tech management like half this sub kicking some dead 25 year old lamp stack around.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I would say, as much as it’s grown, there are for sure a lot of uncharted waters in this world. The explosion that will come with AI as it gets better seems scary, but to be honest I feel like it will help us chart these waters quickly.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Depends what you mean by web development.\n\nThis touches on a discussion that I have been meaning to raise in this sub. Web Dev can be broken down into three main areas.\n\nWhat most people think of as web dev and what your father was probably referring to is building public brochure service and ecommerce sites. The bread and butter of the web. The digital presence that every business needs these days. The glorified product list and contact us site. In my opinion, this part of the web is likely declining. It's a solved problem. You have WordPress, Squarespace, Wix, Shopify, eBay, Amazon, Etsy, Facebook and tiktok. These services have been slowly chipping away at the need for trained developers to allow SMEs to gain a presence on the web with minimal need for technical expertise ( you still need some design oriented work). And then you have the new GPT LLM kid on the block. I think the era of chat bot services is finally here, and this is an interface consumers like once they get good enough.\n\nThen there is the dark underbelly of the web, the back office systems. These are the internal tools, the more complex B2C applications, the B2B systems that power the supply chains for the first part. This is where myself and a lot of other old school web developers lurk. There is still a lot of work in this space, but the platform is also starting to see encroachment from things like native apps - mainly on mobile devices, but also more traditional desktop platforms (the company I work for has standardised on OSX so I've built a few native apps for people in the office cause it's easier and offers a nicer experience for them), as well as the dark horse VR, which has potential, yet to be realised.\n\nThen you have the fringes of web development. Wasm, embedded, browser based games, ChromeOS, etc. This is the wild west and nobody can predict how long it will hang around or what it will be used for.\n\nThe web as a core set of technologies has a lot invested in it and is pretty solid, but the days of making a quick buck with a to-do list bootcamp under your belt are over.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Maybe your Dad means web design. Like building a basic Wordpress site or even a static html/css site. I'm assuming what he's trying to say is \"Anyone can build a website for a small local company. Takes 20 minutes on Wix\". But that's not what webdev is.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac4jcd",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac4jcd/static_blog_with_freecheap_hosted_cms_for/",
    "title": "Static blog with free/cheap hosted CMS for non-coders",
    "points": null,
    "comments": [
      {
        "comment": "Maybe Netlify CMS?",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Here you go\n\nhttps://github.com/CodeStitchOfficial/Intermediate-Website-Kit-SASS\n\nWe already built it for you. Follow the doc go get the site live with a working blog in a minute. Then just change the html and css to your needs for the site. Client can edit the blog in a Dashboard created by decap cms. Enjoy!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I generate my blog from markdown files in my GitHub repository. I use cloudflare to build it on commit and host it. Totally free 😊",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you know your way around Svelte, try Primo CMS, it's open-source (MIT license), but they have a paid cloud option if you don't want to manage it yourself.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Blogger",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Prismic.io free tier for your CMS (this is cloud hosted though) + Next.js or Nuxtjs and deploy to Netlify.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac45ja",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/xxrfbembcxec1.jpeg",
    "title": "What is at bottom right",
    "points": null,
    "comments": [
      {
        "comment": "it's just the webpage html being displayed in the textarea.\n\nThe base64 in the screenshot (OP) is the base64 encoded jpg of the FBI seal.\n\nTo trigger the page loading you have to hit a bunch of vault pages in succession for it to prevent further access\n\nhttps://vault.fbi.gov/",
        "points": "62 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Pack your bags and be ready to leave at 5am tomorrow.\n\nAlso, don't be overenthusiastic - waterboarding only sounds fun when you don't know what it is.",
        "points": "102 points",
        "children": [
          {
            "comment": "It's obviously that thing where you stand on waves. OP's going to have a great time, I can feel it.",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I laughed so hard I shouldn't have",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It’s a puzzle. Solve it and they’ll hire you as a cryptographer and code breaker",
        "points": "38 points",
        "children": [
          {
            "comment": "Cicada 3301",
            "points": "6 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Share the URL if you want anything other than wild and inaccurate speculation.",
        "points": "56 points",
        "children": [
          {
            "comment": "What do you mean? That is EXACTLY what I came for.",
            "points": "33 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "The link is in the picture?",
            "points": "6 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "It’s in the screencap - vault.fbi.gov",
            "points": "-66 points",
            "children": [
              {
                "comment": "",
                "points": "",
                "children": [
                  {
                    "comment": "My condolences to whoever needs you to review their PRs",
                    "points": "104 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "No need to be a jackass.",
                    "points": "45 points",
                    "children": [
                      {
                        "comment": "Do you want to have a conversation with a \"web developer\" who doesn't know what a URL is? I sure don't.",
                        "points": "-77 points",
                        "children": [
                          {
                            "comment": "Sure don't want to have a conversation with anyone who is an asshole for no reason. You would never last a week on one of my teams with that attitude\n\nIt's not what you say, it's how you say it.",
                            "points": "43 points",
                            "children": [
                              {
                                "comment": "I’d take solid frankness over sugar coated bullshit to be fair. Gotta start being adults here though.",
                                "points": "-53 points",
                                "children": [
                                  {
                                    "comment": "Being frank ≠ being a dick, the guy was being frank when he said \"thats not x its y\" he was being a dick when he finished it with \"you idiot\".\n\nDon't enable this kind of behaviour.",
                                    "points": "47 points",
                                    "children": [],
                                    "isDeleted": false
                                  },
                                  {
                                    "comment": "Calling someone an idiot is not what an adult does when they’re mildly annoyed.",
                                    "points": "23 points",
                                    "children": [],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          },
                          {
                            "comment": "Please take your meds",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "bonk go to mean jail",
                    "points": "16 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "It’s in the screencap - vault.fbi.gov",
                    "points": "-3 points",
                    "children": [
                      {
                        "comment": "Ehhh sometimes phone browsers only show the domain and tld, hiding the directories and URL queries until it's clicked on. However the above comments were pretty unnecessary 😅",
                        "points": "25 points",
                        "children": [
                          {
                            "comment": "But is this even an URL atm? Or is it just an URI in that case 😗 and even with the URL you would still need to replicate the behaviour before it freezes on you (most likely can find the portion that is responsible for the popup in the js of the site)",
                            "points": "-9 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "watch what you say around /u/clonked he is sensitive",
                        "points": "6 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "😂",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": true
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "That looks very much like a recaptcha token",
        "points": "42 points",
        "children": [
          {
            "comment": "Things encoded in base64 look like things encoded in base64.",
            "points": "158 points",
            "children": [
              {
                "comment": "I can read base64 encoding like how I can read scrolling Matrix code.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "no What are you doing",
        "points": "6 points",
        "children": [
          {
            "comment": "Step brother?",
            "points": "7 points",
            "children": [
              {
                "comment": "Step website.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Do you like it in the subdomain?",
                    "points": "2 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It's an ARG you have to solve it to get the flight logs",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Nuclear bomb codes",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If we told you then we’d have to kill you.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Whoops that’s my SSH private key 🤡",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Cookie clicker save export code kek",
        "points": "-2 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac1deq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac1deq/how_to_capture_a_long_scrolling_screenshot_of_a/",
    "title": "How to capture a long scrolling screenshot of a website which uses lazy load?",
    "points": null,
    "comments": [
      {
        "comment": "Firefox > Scroll entire page > Right-click > Take Screenshot > Save full page",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I’d look to downloadable software solutions for this rather than trying to roll your own. I highly recommend Cleanshot X if you’re using mac and fully replace the built-in screenshot tool. Not sure what tools are available and high quality for other OSes nowadays.",
        "points": "0 points",
        "children": [
          {
            "comment": "Thank you! Looks like this may work for the long screenshots, I will test it out. Seems like there is no way to record like that though… guess it’s a niche problem.",
            "points": "0 points",
            "children": [
              {
                "comment": "Is there any reason you wouldn’t want to use a dedicated screen recording tool for that? I’m pretty sure the built-in screen capture tools can do that, you just have to record the screen and then use your mouse to interact with the website. Quicktime on mac can do this, I’m fairly certain windows can as well with its built in tools",
                "points": "0 points",
                "children": [
                  {
                    "comment": "I need to record the whole long site at the same time so it’s one really tall video",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Oh I see. Hm, I can’t really think of a way to record the elements of the site not actively being rendered by the browser other than using video editing skills to essentially stitch things together and fake it. Or zoom waaaaaaay out so the whole thing is visible on your desktop but teeny-tiny 😂 good luck!",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Yep, the stitching is how I’ve been doing it, it’s terrible lol! I probably need to get a 32:9 monitor and rotate it vertically lol.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "Dang, sounds rough!",
                                "points": "0 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac16jh",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ac16jh/in_relational_database_how_do_i_decide_what/",
    "title": "In relational database, how do I decide what should be a table?",
    "points": null,
    "comments": [
      {
        "comment": "Yes, columns should be its own table.\n\nAnytime you have a relationship that is 1:M you need a separate tables. If you have a M:M relationship then you need a table for each thing plus a 3rd join table.\n\nEven sometimes for things that are 1:1 you would still want to separate them into separate tables. Take a User table that has country they are from. It would be better to have a separate countries table than just repeating the same data in the Users table.\n\nRead up on data normalization which will help with how to efficiently design relational databases.",
        "points": "1 point",
        "children": [
          {
            "comment": "In that case how do I structure my query so that when I do GET request for boards, I get the board but also columns associated with it? I have a boardID in each the column schema, and when I select the column based on boardID i do get it. Im just wondering if these two queries need to be separate or is there a way I can do within one?",
            "points": "0 points",
            "children": [
              {
                "comment": "Your GET request doesn't change. It is always just going to be to something like GET /api/board/ID or whatever. The backend endpoint is what is going to have to get the board and columns and return it all to the frontend.\n\nFor the backend It depends on how you are doing your SQL queries. If straight SQL then Look into SQL JOIN statements. If you are using an ORM like Sequelize then look up the documentation. Most if not all ORMS have an easy way to get an object and populate the relalations.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "From looking at your question and replies, I think the answer is “you should find a book, ecourae, class, or video series to learn this”\n\nSQL and database design and management is not a trivial thing (being a database admin is literally its own job). You might get the answer you need to your OP here, but it appears there are fundamental concepts you need to learn about.\n\nThe Odin Project has a section on DBs I think; Hackerrank had a pretty good one at one point. I self taught initially with an O’reilly book, but later took a college class and studied and practiced a lot.\n\nTake this seriously. Reddit, chatgpt, quick answer places are not going to be the way. Dive in to some meaty content and get ready to learn a really cool topic that will benefit you for years! Find the right learning material in whatever format you learn best in, and dive in.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "One thing I’d suggest is not to get too worried about getting it perfect first time, you know you’re not sure, if you can’t see a clear answer up front, go with one!\n\nIf this is the first project you’ve worked on for yourself, chances are it will never get finished, or be replaced by another.\n\nLet’s say you aren’t sure, so you decide to put boards in users, eventually you’ll come to a point where you’ll see it isn’t working as you want, so this brings you the opportunity of going back, refactoring, splitting it out, and improving.\n\nI find with coding there’s a lot of things that are hard to tell people why, but once you learn from doing, it makes so much more sense and sticks much better",
        "points": "3 points",
        "children": [
          {
            "comment": "Agreed. Assume youll make mistakes, and thats ok",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Does a Board only ever have just one Column? Probably not, right? A Board can have one or more Columns. That's a 1:n relationship, which cannot be appropriately modeled using columns in an RDBMS without resorting to extended data types like XML or JSON (which would be anti-pattern for this use case).",
        "points": "0 points",
        "children": [
          {
            "comment": "Yupp it is a 1:n relationship, in that case what would be the best solution here? Its literally my first fullstack project so I am open to resources which would explain me this in depth",
            "points": "-1 points",
            "children": [
              {
                "comment": "Okay, so if it's not columns, then what's the only alternative left? Tables, right?\n\nWRT learning resources on this topic, I highly recommend focusing on relational modeling and data normalization. Sorry, no, I don't have any links, but there are lots of freely available resources on the web just a Google-search away.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "You could always use one of the json like array structures offered by pg. If a column doesn't have many related properties, and isn't queried independently. That is a decent solution.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "That's what I meant when I referred to \"extended data types like XML or JSON\". Nevertheless, using them would be an anti-pattern in this scenario.",
                        "points": "",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I agree with others that column should be its own table in a relational model, but what about using a NOSQL model? I don't have much experience with those but since many support storing pure .json it seems like it'd be a more natural fit for a starter web dev project :)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "i’d have column as it own table. With a foreign key to boards. So i could get all columns by board id.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ac035e",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://www.seroundtable.com/google-html-structure-seo-rankings-36789.html",
    "title": "At last, its official: Google: HTML Structure Doesn't Matter Much For Ranking",
    "points": null,
    "comments": [
      {
        "comment": "I'd like to hear more of the context around \"doesn't matter much\". And what structure they're talking about. Like, are they saying div soup is OK or are they saying semantic markup is irrelevant to Google? Because those are two very different things.\n\nThough it won't change my behavior. Semantic markup is as much about accessibility as it is anything else and I just like making well-built sites. Until it starts hurting I'm going to keep doing the best work I can.",
        "points": "80 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Makes sense. Poorly designed websites with <div> soup (been there) encourage search engines to optimize for them, which disincentivizes developers from putting effort in markup.\n\nBtw I would love to find a good, thorough guide on using semantic HTML for various web site designs--from landing pages to news aggregators, admin pages, and full-blown desktop-like applications.",
        "points": "146 points",
        "children": [
          {
            "comment": "I have been looking for a guide just like that, but I always find they are fairly specific to certain semantic element use cases so it feels like I have a hobbled together understanding",
            "points": "20 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Highly recommend this course by Tony Alicea. He goes in-depth about semantic HTML and is very much against div soup in modern web. You won't regret it.",
            "points": "27 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Studying accessibility and it's relationship to semantic HTML would be a place to start.",
            "points": "5 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I mean they might be right, but I'm not sure I'm going to take advice on semantic HTML from a blog that can't spell semantic correctly.",
        "points": "88 points",
        "children": [
          {
            "comment": "While they might be right, search isn't the only use-case for semantic HTML. Anybody who decides to write div soup because of this article would be a fool.",
            "points": "40 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Or use English grammar.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "This is a sloppy article but Barry is an OG who is very tapped into the SEO community and frequently interviews big search players at Google.\n\nHe’s a trusted source when it comes to reporting on ranking factors.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Or a site where I can read half the sentences because they are cut off on mobile.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I highly doubt this. But even if it were true. It does matter for A11Y and ADA laws.",
        "points": "58 points",
        "children": [
          {
            "comment": "But you won't get jailtime or anything, just don't put your email on the website so they can't send you a sue letter. It's not my job to add superfluous aria-labels when its the screenreaders that need to innovate. AI is here, OCR is better than its ever been, why do I have to do it when its already my job to build the whole site. Enough work as it is.",
            "points": "-11 points",
            "children": [
              {
                "comment": "You accommodate users where they are, not where you think they should be. Add those aria labels and stop being lazy",
                "points": "9 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Is this a troll?",
                "points": "8 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It takes little to no effort to use semantic HTML and at the bare minimum helps users of assistive technology. Regardless of what Google may or may not say, there’s no excuses. Div soup helps nobody",
        "points": "28 points",
        "children": [
          {
            "comment": "Not only for accessibility, the developer experience is improved greatly when everything has a clear defined structure.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "“It doesn’t matter that much” is NOT the equivalent of saying it doesn’t matter. There are over a hundred ranking factors in search, so in the grand scheme, each individual item “doesn’t matter that much”. It’s the sum of its parts.",
        "points": "50 points",
        "children": [
          {
            "comment": "Not really. Actually they've said there isn't 200 hints/factors.\n\nThe point is this: SEO is 2 things: Authority and managing authority and relevance (aka on-site seo)\n\nHTML doesnt improve the value of your pages in any way like putting an author tag doesnt improve it or make it rank better.\n\nDoc fiels, text files, pdfs etc dont have ANY HTML and can rank.\n\nThat's all!",
            "points": "13 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "And accessibility experts screamed out in unison.\n\nThis might be true, but certainly not helpful to semantic Html advocates",
        "points": "13 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "SEO industry : this is important, pay us \n\nGoogle : it doesn't matter \n\n I feel it has been like this for a decade.",
        "points": "6 points",
        "children": [
          {
            "comment": "and OP is part of that problem. taking an out of context quote from some podcast and pretending it's an official Google statement is insane.\n\nalso they keep saying that it doesn't matter when it's right there in the title that \"it does't matter that much\"",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Wait. What!?",
        "points": "12 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "if they have 100 factors for ranking, no single factor matters much ;p",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Lol every source is just another post from the same site.\n\nPretty sure this is not true and just a no-name site pumping out clickbait.",
        "points": "17 points",
        "children": [
          {
            "comment": "Lol every source is just another post from the same site.\n\nPretty sure this is not true and just a no-name site pumping out clickbait.\n\nSEO Roundtable? How is that a no-name site?\n\nGoogle doesnt care about HTML quality - its developer documents state this and have done but so many people push SEO myths that they have to come out and clearly list them.\n\nGoogle doesnt need W3C HTML, it doesnt even need HTML - it will index a TXT file, a Word doc/docx, a pdf, an image...\n\nYou can google Gary Illes\n\nGary Illyes from Google said that the HTML structure for your web pages does not matter much for rankings. He said this on the latest Search Off The Record podcast, saying, \"I know that some people like to think that HTML structure matters all so much for rankings, but in fact, it doesn't matter that much.\"",
            "points": "11 points",
            "children": [
              {
                "comment": "Semantics tags was always for accessibility, not SEO",
                "points": "19 points",
                "children": [
                  {
                    "comment": "I think the point is more that nobody ever truly knew if semantic HTML factored into Google's SEO algorithm or not. While semantic tags were always intended for accessibility, it's not a stretch to imagine a search algorithm giving the HTML structure some impact in its results.",
                    "points": "4 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Exactly and this only proves google don't care about accessibility, or else they would rank accessible sites higher. Imagine being a user who relies on accessibility, and trying to use google as search.\n\nSo .... fuck google?",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Search engines in general, not just Google, have been getting worse and worse anyway. Fucking affiliate marketing spammers/scammers and SEO assholes have been creating endless garbage content that Google has been ranking higher and higher. Searching for something informative is now almost always appended by \"reddit\" if it's not documentation or something, and even that is being gamed now.",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Quick, check the structure of its HTML!",
            "points": "2 points",
            "children": [
              {
                "comment": ":)",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "It’s not a no-name site. Barry’s been clickbaiting untested Googler quotes out of context every day for two plus decades!",
            "points": "2 points",
            "children": [
              {
                "comment": "Barry is the biggest name in making shit up since the early days of the SEO game. His big suggestion is to write \"brittney spears\" in every tag on the page.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Google is pretty trash regardless these days. Any money spent trying to game Google would be better spent just on advertising and marketing in the first place because that's what you're competing against. Not people fiddling with their site to improve their rankings. People paying for ads to be shown at the top.",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Good website structure maybe doesn't matter for google, but it does matter for users. Commercial websites that are unusable for people with disabilities are pretty much automatically losing the profits that those potential customers would generate",
        "points": "3 points",
        "children": [
          {
            "comment": "100% the right answer",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "FYI google is known to be lying when it comes to SEO and there are many experiements that prove it. I'm not sure their lies are intentional tho - it's just that the search engineers are so far in their shit that they don't even know some consequences themselves.",
        "points": "2 points",
        "children": [
          {
            "comment": "FYI google is known to be lying when it comes to SEO and there are many experiements that prove it. I\n\nGoogle isn't notorious - if you dig deeper - its wannabe expert SEOs - like those trying to push EEAT as a ranking model - the debates I ahve with SEOs on twitter who are event speakers with 30k followers AND NO RANK in Google has quietened considerably since Google axed its Quality Reivew program.\n\nGoogle says clearly in every EEAT document that EEAT is NOT about ranking - but where is it pushed: the SEO influencer cohort.\n\nThat's why publishing this publicly and discussing it is critical in a world of misinformation, so thank you for participating!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Use good semantic HTML structure for yourself and your colleagues. The fact that is more SEO friendly is just an added bonus.",
        "points": "2 points",
        "children": [
          {
            "comment": "Use good semantic HTML structure for yourself and your colleagues.\n\n100% agree\n\nThe fact that is more SEO friendly is just an added bonus.\n\nIt isn't and we have to stop thinking this way: there's no scorecard for SEO, there's no bonuses. HTML does make \"seo\" better. Because Google ranks things WITHOUT HTML :) Simple",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I would argue that even if it’s not helpful for SEO rankings, there is still a lot of value for accessibility/people with screen readers and so forth by using proper, consistent structure.",
        "points": "2 points",
        "children": [
          {
            "comment": "This is the right thing and the right reason to focus on!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "At least do it for DX and A11Y then",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Accessibility matters, it’s not all about SEO",
        "points": "1 point",
        "children": [
          {
            "comment": "Nobody said it wasn’t - just joking an SEO myth.\n\nThanks !",
            "points": "0 points",
            "children": [
              {
                "comment": "You’re welcome",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm going to put all my body text in <H1> tags.",
        "points": "",
        "children": [
          {
            "comment": "😂",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Me : ** spend days & days to learn how to make perfect HTML page structure. **\n\nGoogle : Well .. HTML structure doesn't metter..",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When did this sub turn into an SEO forum?",
        "points": "0 points",
        "children": [
          {
            "comment": "When did this sub turn into an SEO forum?\n\nWhere do 90% of websites get their traffic? Feel free to ignore :)",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "late-stage /r/webdev : \"can you find me a free site that does everything semrush and ahrefs do?\"",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Finally I’m vindicated: I only use <u> for everything on my site, to save typing time and now this is confirmation I was right all along. Will send this to my former 7 bosses.",
        "points": "0 points",
        "children": [
          {
            "comment": "Exactly. The only people who care are the handful pushing HTML as somehow giving authority :)",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Maybe google should care bc their search results suck now",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "SEO guy we hired demonstrated that you rank #1 with a blank page using nothing but JsonLD 🤣",
        "points": "-1 points",
        "children": [
          {
            "comment": "Or a video …. With no html - see - works",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "SEO is BS as Goodhart's Law states \"When a measure becomes a target, it ceases to be a good measure\".just look how the recent studies shows that google search are getting worse and it's not just the ads ,people spend much more time on optimizing keywords and all of that bullshit instead of focusing on the actual content ...\n\"semantic\" HTML , the author can't even spell that word jfc ,is crucial for Accessibility , rendering the content properly , all sort of analyzing tools you might need to run , testing ...",
        "points": "-1 points",
        "children": [
          {
            "comment": "people spend much more time on optimizing keywords and all of that bullshit instead of focusing on the actual content ...\n\nYou can't do either of these - there is no word count ratio or ability for Google to understand or appreciate content. Thats why these discussions are critical: people have built up a misunderstanding of google based on a bunch of different ideas, theories and conjectures. Its critical to level set - thats how democracies with free speech work",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "How is it matter how web page created. Are they pushing monopoly?",
        "points": "-5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Isn't it also super important for accessibility?\n\nPlus the developer experience improves greatly when you're not searching through a sea of divs.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What’s important, I think is good structure with schema and micro data, accessibility, and correct syntax for certain things — as it will become apparent with new AI and GPT crawlers",
        "points": "0 points",
        "children": [
          {
            "comment": "This is exactly the myth we need to kill: Google is not a content appreciation engine - it doesn’t understand content t and it cannot and it isn’t going to use AI - content has to make sense to the the user and the users search needs at that time and only that - this idea that you can insist on ranking by structure or htmel or graphics is nonsense",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Don’t ignore it entirely! Screen readers rely on proper html to translate to hard-of-seeing users. There are other reasons for semantic html besides rankings.",
        "points": "0 points",
        "children": [
          {
            "comment": "We’re not discussing what happens when people get to a site - which is the narrow argument I’d love to move web design conversations away from - we’re talking about the mechanism that connect people",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "No it's strictly content quality, reputation and authority. I built a GPT trained on the same docs as the humans who trained their ai that judges these three.\n\nhttps://chat.openai.com/g/g-fAoXCbzTN-content-seo-sensei",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "\"Much\" just if you want to outrank someone who has similar results on the other factors. So it matters... just not \"much\".",
        "points": "0 points",
        "children": [
          {
            "comment": "No it doesn’t. There are now thousands of millions of pages with schema with no rank. Schema doesn’t give authority, it gives relevance - it helps Google pick data from strings without knowing how to parse it.\n\nThis idea that html makes you rank is up there with the duplicate content myth - it’s doesn’t make a scam not a scam, he’ll quality and schema can be used in pay day loans - it doesn’t make them not penalized\n\nHTML quality is the same nonsense as content structure. Yes there are the long boring recipe pages but they are now being targeted too - but that’s not why they rank. Short content ranks incredibly well and that immediately undermines both rest and html quality\n\nHTML quality doesn’t help the user and doesn’t make content better\n\nHTH",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The irony of reading this article on a website with all of the ends of the sentences cut off is not lost on me.",
        "points": "0 points",
        "children": [
          {
            "comment": "Because it’s form a podcast but feel free to take the ideas and set a case against them if you have evidence",
            "points": "0 points",
            "children": [
              {
                "comment": "I don't understand. I mean the website is broken. I'm on mobile and all of the sentences are cut off. The irony is the website is about HTML structure.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Huh but it ranks? That’s interesting",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "What do you mean it ranks? I'm reading it on Reddit. Idgaf if it ranks or not.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Because you can Google it and it ranks? And that’s the point of the article?",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "Not for long if you open the site and 75% of people bounce because they can't read the words.",
                                "points": "0 points",
                                "children": [
                                  {
                                    "comment": "If that’s what you think happens but that’s just a claim?",
                                    "points": "0 points",
                                    "children": [
                                      {
                                        "comment": "Question for you: Do you think saying everything in the form of a question makes you sound smart? That's interesting because it makes you sound condescending to me.\n\nBounce rates absolutely affect ranking. It is clear to me that you are coming to this community to drag traffic to your poorly constructed blog.",
                                        "points": "0 points",
                                        "children": [
                                          {
                                            "comment": "Nope - im dealing with argument and logical debate structure. You said that 75% of people will bounce - that’s a claim\n\nSaying that bounce rates matter is an entirelyy different statement. Bounce rate does absolve matter and is critical to how SEO works. But what you did is smuggle in bounce rate as a cover to the claim that you don’t have evidence for which is the %\n\nAnd that’s how lost arguments and debates in SEO and other aspects go - especially in debates between theists and atheists for example. They are just bad debating arguments and they are academically referred to as logical fallcys - like the No true Scotsman argument.\n\nNo - I don’t think it makes me sound smart - what it does is allow me to separate debates on ideas vs peole starting debates against the person. When peole start calling out peole it’s the end of an objective discussion , it always makes them look weak because it’s a sign they’ve run out of. Logic and are only left with emotional based ad hominem attacks usually because their ego has stepped in\n\nThat’s all",
                                            "points": "-1 points",
                                            "children": [
                                              {
                                                "comment": "",
                                                "points": "",
                                                "children": [],
                                                "isDeleted": false
                                              }
                                            ],
                                            "isDeleted": false
                                          }
                                        ],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abz4y5",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abz4y5/are_there_web_developers_who_mostly_work_with/",
    "title": "Are there web developers who mostly work with only HTML and CSS?",
    "points": null,
    "comments": [
      {
        "comment": "I believe that normal, everyday people are also web developers. I know because I've worked with them. I've been one of them. I meet them at BBQs, and often - they don't want to talk about work. Not everyone is as intense as new developers seem to think. We're not all tastemakers and Git heroes who just grind leetcode all night. Maybe there are other jobs besides that 120k SWE job\n\nThat's a fundamentally different argument than the claim that you can get a modern \"web dev\" job with only HTML/CSS. You're presenting a false dichotomy focusing on people's character rather than their knowledge.\n\nYou also keep presenting this as a question about what people do in their day to day jobs. That's not the question, though. The question is, are those technologies by themselves enough to land a job as a developer? And I simply don't buy that the answer is yes. I'd like to see what kind of jobs you're talking about.",
        "points": "0 points",
        "children": [
          {
            "comment": "This is what ChatGPT had to say -\n\nWhat is a list of jobs someone could do if they only knew HTML and CSS\n\nWeb Designer: Focuses on website aesthetics and user experience. You'd work with visual layouts, color schemes, and typography.\nFront-End Developer (Entry-Level): For simpler projects that don't require advanced JavaScript or back-end skills. You'd create basic websites and web pages.\nEmail Template Developer: Specializes in creating and maintaining email templates. This often involves dealing with various email clients and their quirks.\nCMS Theme Developer: Customizing themes for content management systems like WordPress, which often requires just HTML and CSS.\nUI/UX Designer (Junior): Assists in designing user interfaces. Requires a good eye for design and user experience, but coding might be limited to HTML and CSS.\nFreelancer for Small Projects: Taking on small projects or gigs for individuals or small businesses. Could include website updates, creating simple sites, or converting designs to HTML/CSS.\nWeb Accessibility Specialist: Ensuring websites are accessible to all users, including those with disabilities. Involves understanding of HTML/CSS and accessibility standards.\nEducator/Trainer: Teaching HTML and CSS to beginners, either in a formal education setting or through workshops and online platforms.\nDocumentation Writer: Creating and maintaining documentation for web development projects, which often requires a good understanding of HTML and CSS.\nQuality Assurance Tester: Focusing on the front-end, ensuring websites look and function as intended across different browsers and devices.\nTechnical Support for Web Products: Providing support for web-based products or services, where understanding HTML and CSS can be crucial for troubleshooting.\nWeb Content Manager: Managing and updating web content for organizations, especially where content management systems are used, requiring a basic understanding of HTML and CSS.\nDigital Marketing Assistant: Assisting with online marketing efforts, including email campaigns and landing pages that often require HTML and CSS knowledge.\nWeb Administration Assistant: Assisting with the upkeep of websites, which can include content updates, layout adjustments, and basic SEO tasks.\nFront-End QA Engineer (Junior): Focusing on testing the front-end part of applications and websites for bugs, layout issues, and cross-browser compatibility.\nE-commerce Site Manager: Managing and updating e-commerce platforms where knowledge of HTML and CSS helps in customizing layouts and resolving display issues.\nHTML/CSS Content Integrator: Integrating content into web templates for large sites or content-driven platforms.\nWebsite Auditor: Reviewing and providing feedback on websites, focusing on design, layout, and compliance with web standards.\nLanding Page Specialist: Creating and optimizing landing pages for marketing campaigns, relying heavily on HTML and CSS for design and layout.\n...",
            "points": "0 points",
            "children": [
              {
                "comment": "This is what ChatGPT had to say \n\nIs chatgpt hiring? Also, note that the vast majority of its answers amount to \"graphic designer.\" And the others may require more skills. Like I said...",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abys6f",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://medium.com/expedia-group-tech/candidate-generation-using-a-two-tower-approach-with-expedia-group-traveler-data-ca6a0dcab83e",
    "title": "Candidate Generation Using a Two-Tower Approach with Expedia Group Traveler Data",
    "points": null,
    "comments": [
      {
        "comment": "Here's the Lowdown:\n\nThe post explores the implementation of a two-tower approach to candidate generation using Expedia Group's extensive traveler data. This technique aims to enhance the personalization and efficiency of travel recommendations. The method involves using separate models for query and item representation, allowing for more precise matching between user preferences and available options. The post details the benefits of this approach in improving the accuracy and relevance of travel suggestions, demonstrating its effectiveness in the context of the Expedia Group's extensive travel-related datasets.\n\nIf you don't like the summary, just downvote and I'll try to delete the comment eventually 👍",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abyk9r",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abyk9r/please_stop_me/",
    "title": "Please stop me",
    "points": null,
    "comments": [
      {
        "comment": "Benchmark to see the difference — if any.",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It’s not weird to .filter(…).map(…). They’re optimized to the nth degree.\n\nBut, if you find you’re doing this a lot, you may want to look at why you’re getting data in a format requiring so much manipulation.",
        "points": "5 points",
        "children": [
          {
            "comment": "They’re actually not that optimized. Iterators aren’t lazy so you’re looping over the data twice.",
            "points": "0 points",
            "children": [
              {
                "comment": "Chaining array methods is not really as bad as all that, it's nesting loops that really mess things up most of the time.\n\nIf one found that there was a major pain point with some filter().map() -style chain then there's probably a way to express it as a for (const needle of haystack) { } loop instead, where all the logic can be expressed in a single loop, but really before even considering this stuff you'd do well to evaluate perf because a filter().map() or similar arrangement really isn't likely to be the culprit barring some very wild circumstances",
                "points": "1 point",
                "children": [
                  {
                    "comment": "I know. But I’m also upset every time I use them because of that.\n\nI’m used to rust where it’s actually faster to use iterator methods compared to writing the loop because they’re lazily evaluated.",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "[deleted]",
        "points": "0 points",
        "children": [
          {
            "comment": "I see, thank you!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Maybe look into using Array.reduce, you can can basically do a filter and map in the same callback function without iterating multiple times, it's also a pretty good practice to use those built in functional type iterators instead of trying to concoct a hacky solution.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I think the correct course of action would be to get a referral to see a psychiatrist so that you can get assessed to see if you have OCD /s",
        "points": "0 points",
        "children": [
          {
            "comment": "Bro I have much more than that 😎",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abyiv9",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abyiv9/nodejs_getaddrnfo_eai_again_error/",
    "title": "nodejs: getaddrnfo EAI_AGAIN error",
    "points": null,
    "comments": [
      {
        "comment": "rate limit on cloudfront. more than 20 consecutive calls in 30 seconds will get blocked",
        "points": "0 points",
        "children": [
          {
            "comment": "Does Cloudfront have some built in throttling? WAF is not set up for for cloudfront.\n\nAny ideas on how to work around this (other than lower the frequency of calls).",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aby7lv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aby7lv/why_does_js_dominate_despite_frameworks_like/",
    "title": "Why does JS dominate despite frameworks like Django, Flask, & Rails?",
    "points": null,
    "comments": [
      {
        "comment": "Because JS is the language for the frontend.\n\nFor users, it's easier to just learn a single language and stop learning forever.\n\nFor companies, it's cheaper to hire one \"JS guy\" instead of one JS guy and one Django guy.\n\nWould it have been Erlang instead, everybody would be writing Erlang on frontend and backend now.",
        "points": "298 points",
        "children": [
          {
            "comment": "The answer is actually browsers. JavaScript has always come supported across browsers. You don't see Python and Ruby scripting support with browsers. But I hope OP isn't comparing web frameworks with the JavaScript language itself.",
            "points": "53 points",
            "children": [
              {
                "comment": "The fun thing is that the w3 specification for scripts doesn't hinder you from writing your own language and use it in the script tag. You just had to add the compiler/exe via plugin and boom, you can use whatever language you like in a browser.",
                "points": "14 points",
                "children": [
                  {
                    "comment": "Some tried and failed in the late 90s and early 00s",
                    "points": "14 points",
                    "children": [
                      {
                        "comment": "Is pyscript still a thing?",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Hype definitely died down, but they just released a new version this month: https://github.com/pyscript/pyscript",
                            "points": "2 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Maybe OP is talking about using, in the backend, the same language used in the frontend (that would be JS)? But I'm just assuming: assuming that the frameworks mentioned are for the backend. Like, I'm trying to start to learn how to work with Node.js and use JS in the backend, I presumed it is a similar situation.\n\nP.S.: My bad: yes, it doesn't make sense to suggest otherwise, I basically explained to you why you were right.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "I agree. I'm a Frontend developer. I want to study backend and it's easy for me to jump on Node.js and Nest.js without worrying on syntax or new language keywords and focus on how a backend works",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "You can do it with elixir. Live view is pretty nifty",
            "points": "10 points",
            "children": [
              {
                "comment": "No matter what you use on frontend (transpiler, wasm, etc.), when you need to debug an issue you WILL need to deal with JS - there's no way to avoid it.",
                "points": "25 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "I'm both, hire me xD",
            "points": "-5 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Same reason as its always been - to use the same language on the frontend and backend",
        "points": "88 points",
        "children": [
          {
            "comment": "And in a lot of instances, the same code on both too.",
            "points": "16 points",
            "children": [
              {
                "comment": "What are you building that uses the same code both in the browser and in the backend? In my experience this has never been the case for 99% of the code.\n\nMaybe some libraries like lodash and minor utilities… other than that the backend code has absolutely nothing to do with the frontend code.",
                "points": "4 points",
                "children": [
                  {
                    "comment": "Having common validation logic and messaging in both is insanely useful. You could potentially share things like a dictionary of regex definitions and messaging between languages, but then you need to consider that many languages have varied levels of support for regex operators. And also regex can't always validate everything, especially when dealing with things like numbers, date, etc.\n\nDitto with things like routing logic if you're doing SSR and then rehydrating to an SPA frontend. There's a lot of places where being able to share common code is useful that people usually don't consider since it's not possible with other languages.\n\nSome people strike a compromise by making an API gateway in JS for things like the direct user facing examples above, while offloading the heavier lifting to a different backend in a lower level language behind the API gateway level so they can skip maintaining those sorts of rules in multiple languages and places.",
                    "points": "18 points",
                    "children": [
                      {
                        "comment": "Yeah, and that’s like 0.01% of my total application code.\n\nI get using a single language is an advantage, but more due to developer cognitive load than to actual code shared in both sides. It’s never the case in my experience.",
                        "points": "-1 points",
                        "children": [
                          {
                            "comment": "It's not a question of what percentage of your codebase it is. It's a question of how much effort and coordination is needed to keep these things in sync and consistent, how many bugs occur when that falls through, and how much complexity is added by making your backend do work that has literally already been written and figured out in another part of your application. The scale of this also increases dramatically if you have complex validation logic beyond basic pattern matching and comparisons.\n\nTo be clear, I'm not saying there's no downsides, and I'm not making the argument that this is the sole benefit. Cognitive load is another, yes, but resource management is arguably the biggest one, as having a single large pool of devs that can all work on all of your repos is way easier for management to organize and restructure than having to worry about who knows what language and how proficient they are and if they're willing to work on something else. It also means that teams don't have to be as rigidly siloed or interdependent, since the frontend dev doesn't need to wait for a backend dev to make an API change, etc.",
                            "points": "12 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "These industry standards aren't built around you working in your rinky-dink codebase.\n\nThey're built around companies with codebases so big that navigation is someone's full-time job",
                            "points": "-3 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "Having common validation logic and messaging in both is insanely useful.\n\nIs it though? Separation of concerns and all.",
                        "points": "-3 points",
                        "children": [
                          {
                            "comment": "How exactly does separation of concerns apply here in any way?",
                            "points": "2 points",
                            "children": [
                              {
                                "comment": "exactly the way it applies to any two systems that are responsible for two different things.",
                                "points": "-1 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Following this logic, Blazor would be the next big thing, as C# is quite popular as a backend language, .NET 8 is quite the cross platform SDK, and Blazor offers both SSR and SPA capabilities as well as JS interoperability",
            "points": "3 points",
            "children": [
              {
                "comment": "Except that it can't be combined with any other backend language and we already have a lot of js developers. It may become more popular but I don't see it taking over the next 5 years.",
                "points": "11 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Not really. Blazor has A LOT of issues that just make it less of a good choice for front end. One of which that you still need JS for any semi complex front end.\n\nI’ve been working for 3 years with blazor now and I can’t recommend it over any popular js framework.",
                "points": "5 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "It's just a shame that language ended up being JavaScript.",
            "points": "1 point",
            "children": [
              {
                "comment": "I like it. 🤷🏻‍♂️",
                "points": "7 points",
                "children": [
                  {
                    "comment": "Have you tried many other languages? Or raw JS with no framework?",
                    "points": "-11 points",
                    "children": [
                      {
                        "comment": "Yup. I really like where the industry is going with large adoption of TypeScript. Exciting times and the dev experience is pretty good.",
                        "points": "5 points",
                        "children": [
                          {
                            "comment": "My first language was C++ when I was ten. Then I learned everything from pascal to F# while I grew up. I've built windows apps, mobile apps, and web apps professionally over the last 23 years.\n\nJavascript (well typescript) is my go to language for 80% of projects, rust for the other 20%. I haven't found a need for another language.",
                            "points": "3 points",
                            "children": [
                              {
                                "comment": "My man. 🤜",
                                "points": "0 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "It's got its share of issues, but the language is a pleasure to read and the runtimes are so unreasonably performant these days that I don't really see why people are upset about it being the dominant scripting language.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I've got you back JS was shit and still is but it has drastically improved since ECMA 2015 and I suspect most people here never used it before then or else they would be forever jaded like us older devs.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Even if you learn Django, flask, or rails, you still need js/ts to survive. It's not a hard rule, but sometimes it is nice to to finish a project without have to learn a whole new language... then frameworks and best practices with a limited budget.\n\nIf it is a personal project, than who cares. Sometimes, I use the latest trend just for exposure, but most times, l drop it.\n\nI like to think of myself as a code wanderer. A Ronin...",
        "points": "45 points",
        "children": [
          {
            "comment": "I do rails. I never write TS and only minimal JS, as needed. I dont use any JS framework.\n\nAt my day job, we maintain several raiks apps. One of them has a Vue app but thats just because we had a vue dev and he wanted to write it in Vue. It could have been built in just Rails w minimal JS. We had a bunch of jauery code but have been incrementally replacing it with vanilla js.\n\nyou dont NEED js/ts, at least not frameworks. I do agree that knowing how to write vanilla JS is useful because sometimes thats the right way to solve a problem.",
            "points": "10 points",
            "children": [
              {
                "comment": "A little off-topic here, but...\n\nI'm a backend Rails dev at heart. But for the last 5+ years I've taken on almost exclusively pure leadership roles. The itch to get back to coding has been growing stronger, especially after I took on a medium/large Rails project for a former colleague about a year ago.\n\nWhat's your impression of the USA Rails job market presently? Are there still good jobs to be found for senior rails devs? Is the pay still strong, or has waning demand combined with all the tech layoffs started to result in downward pressure?",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "I like that take, I like to wander too. :-)",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I’m in between jobs, and was going to start a side project in Rails to renew those skills (did my first 5 years in Rails, and haven’t touched it in another 5).\n\nBut after dealing with local development woes and a hodgepodge of hosting providers, today I decided to just do Supabase+Next+Vercel. I don’t love it because I kinda hate Nect and Vercel these days, but I can actually start building rather than playing tech support.",
            "points": "5 points",
            "children": [
              {
                "comment": "Is anyone hiring rails devs anymore? I thought rails was dead",
                "points": "-1 points",
                "children": [
                  {
                    "comment": "It’s not used for new stuff but a lot of big companies adopted it back in the day. So it’s still a marketable skill.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Why would you have to learn a whole new language for a new project?\n\nThe way JS frameworks change, it seems you need to learn a new one every few years. Doesn’r really seem that much better.",
            "points": "3 points",
            "children": [
              {
                "comment": "The way JS frameworks change, it seems you need to learn a new one every few years. Doesn’r really seem that much better.\n\nLearning a new framework and an entirely new language are very different. Switching between frameworks isn't hard. They all do the same basic thing.\n\nAlso, I've solely been using react professionally for the last 10 years or so. Framework churn is not what outsiders make it out to be.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The Vue documentation tries to explore the advantages of SSR and using the same language back and front .\n\nTL/DR: isomorphism and a unified mental model.\n\nIt also discusses disadvantages.",
        "points": "9 points",
        "children": [
          {
            "comment": "I'm still quite shocked that the js community decided that SSR was a good idea. It is, which is why I'm shocked.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "When I started web development in the 1990s there was JavaScript and VBScript for client-side scripting. Microsoft and most of the world moved to server-side heavy solutions such as ASP.NET but JavaScript stuck around.\n\nLater in the 2000s, there was a sudden flurry of client-side functionality enabled by more features in web browsers. JavaScript was there to fill the need for client-side scripting. REST APIs, Ajax and jQuery all began shifting more focus to the client. JavaScript got so popular that eventually people started using it on the backend. Most notably with Node.js in 2009.\n\nJavaScript was there when a tool was needed and it’s been riding that wave.",
        "points": "17 points",
        "children": [
          {
            "comment": "That's a key factor, too. Age. So easy to find devs who know JavaScript. It's been around forever and you can use it on the front and the back and picking up a framework is a breeze.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I can't discuss specific frameworks, but in most of the places I've worked, they've migrated to TypeScript for pretty much everything, and the reason is straightforward: types.\n\nYou can configure a monorepo housing hundreds of projects, including full-fledged back-ends, front-ends, microservices, lambda functions, and more, and effortlessly share type-safe code among them. Especially with something like tRPC.\n\nThis is not something achievable with Ruby or Python, for instance.\n\nIn general, strongly typed languages contribute to more maintainable and scalable codebases in the long run. Sure, you can accomplish anything with either, but that doesn't guarantee an enjoyable working experience. Plus, you'll be catching bugs before your code ever gets the chance to run.",
        "points": "62 points",
        "children": [
          {
            "comment": "tRPC is definitely a game changer, I don't see it get used enough.",
            "points": "16 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Python typing is pretty solid nowadays with Pydantic. Pydantic+FastAPI is a pretty great backend setup. The flip side of the “FE developer uses TS/JS, so TS/JS backends make sense” is “the ML engineer/data scientist knows Python, so FastAPI/Pydantic backends make sense.”  (And at least for demos, Streamlit for the frontend)\n\nAnyways, Pydantic is awesome, though still not at TS’s level yet.",
            "points": "9 points",
            "children": [
              {
                "comment": "FastAPI is what brought me back to Python.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "python type annotations are great",
            "points": "9 points",
            "children": [
              {
                "comment": "Yeah, but they're called type hints for a reason.",
                "points": "6 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "This is not something achievable with Ruby or Python, for instance.\n\nit is, you just need to use Graphql",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "in most of the places I've worked, they've migrated to TypeScript for pretty much everything\n\nMay I ask what kinds of projects you've worked on? Making websites for clients? Making software for a SaaS type place? Making web apps? I'm curious what type of job uses the JS ecosystem the most.",
            "points": "1 point",
            "children": [
              {
                "comment": "Mostly SaaS and video game companies, which is pretty much the whole web nowadays haha.",
                "points": "-9 points",
                "children": [
                  {
                    "comment": "So no huge enterprise codebases with tons of different technologies etc.\n\nAka smaller stuff.",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Large codebases are significantly more challenging and riskier to migrate. Plus, the cost of migrating might just be too high.\n\nAt one point, it is better to continue working on them, even if the technology is considered legacy.\n\nThough, that doesn't mean new work can't see the light from newer frameworks. In fact, it is quite common to simultaneously maintain legacy systems while developing new services using the latest technologies.\n\nBut generally speaking, you won't see big companies with huge codebases migrating to something newer, it's just unfeasible.",
                        "points": "-2 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Yeah it’s really freakin nice to use one language for everything.\n\nIt is at least possible to do the same thing using something like rust’s leptos library. I haven’t really gotten into it yet since rust confuses the shit out of my very typescripted brain, but I’m super interested to see more wasm-powered full stack frameworks in other languages",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Why would you want a repo housing hundreds of projects?",
            "points": "0 points",
            "children": [
              {
                "comment": "https://dl.acm.org/doi/fullHtml/10.1145/2854146",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "JS isn’t dominating enterprise grade backends by far.",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "JS/TS's dominance is partly because of its widespread use and vibrant ecosystem. But diving into Python and Django can be eye-opening. Django's comprehensive nature simplifies many tasks. I've used Js frameworks, Flask, Rails, Django and more, and I actually stuck with Django because of how fast I move with it. I'm now building a Django-based tool that significantly cuts down development time even further for SaaS projects - a complete boilerplate.",
        "points": "13 points",
        "children": [
          {
            "comment": "is your django boilerplate available?",
            "points": "5 points",
            "children": [
              {
                "comment": "you can find it here",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Ease of deployment and small footprint. You can cram about 800 dockerized/container microservices running 800 small Node REST APIs on a single 32gb server.\n\nThat is very powerful. Some stacks, you'd be lucky to run 20 to 30 on the same hardware.\n\nAnd stuff like async.Upload a video file. Process it as it is being uploaded, not having to wait till it is finish. That type of workloads really shine.",
        "points": "11 points",
        "children": [
          {
            "comment": "I'm curious for someone to explain why this comment is downvoted for the sake of documenting it for others to learn because it sounds like an interesting small / medium sized solution to ship an application.",
            "points": "2 points",
            "children": [
              {
                "comment": "PHP love.\n\nUse the tool/stack for your use case. E.G. We use Flask with every AI/ML projects we work on. Because Python is defacto Data-science ML preferred due to ecosystem. If someone wants small footprint high I/O bound workloads, asynchronous node is hard to beat.\n\nNeed something with strong typing because you need to make sure the 6 point decimal float is accurate and required for some \"regulated\" industries, strictly type typescript would be my choice.",
                "points": "7 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Wow, that is an incredible amount of micro-services, for sure. I do enjoy working with Node, I hadn't considered it from that perspective before.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "JS also has a battery included framework like Laravel, Rails etc.\n\nIt's AdonisJS.",
        "points": "2 points",
        "children": [
          {
            "comment": "Nest JS is also industry leading",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm not convinced JavaScript is dominant; I see plenty of python, java, c#, go, and so on, both in my own dealings with companies and when I scan job postings.\n\nWe got here because Google wanted to compete with traditional software companies, which meant making good interactive web apps. Java applets and Flash weren't great forward paths, so they invested heavily into JavaScript engines and tooling. That eventually lead to JavaScript being considered \"a real language\", and the creation of Nodejs so you could run JavaScript outside of a browser. Shiny new things being shiny new things, the hype-chasers picked it up and it was good enough to establish a lasting community even as the hype moved on.",
        "points": "6 points",
        "children": [
          {
            "comment": "It's hard to think of a language that has had so much rehabilitation as JS. And still it has the most smelly congenital defects. The type coercion fuck ups are inexcusable.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "There's a hype cycle built around what \"The latest and greated JS library/tool/framework\" that has captured all the attention in the last few years while all the mature frameworks get ignored",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Because some times you don’t need a whole framework. I’m curious when JS wasn’t dominant in webdev? 🤷‍♂️",
        "points": "5 points",
        "children": [
          {
            "comment": "PHP was dominant before JS and is still widely used",
            "points": "15 points",
            "children": [
              {
                "comment": "Truth 👍 the interwebs are littered with WordPress sites.",
                "points": "6 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "JS Has only become dominant relatively recently.\n\nJS is also only dominant with a small subset of developers. SPA's became all the rage a few years ago and JS got way out of hand, which is why we're seeing the turn back toward server rendered.\n\nIf you're going to do SSR, my opinion is that it's better to use a server-side framework/language and let the server do the heavy lifting instead of offloading everything to the client.",
            "points": "-6 points",
            "children": [
              {
                "comment": "Agree on the client v server-side work, but I remember my company (at the time) signing a $10 million dollar contract with the US Army with nothing more than JS 🤙🏽\n\nEdit: and AJAX",
                "points": "4 points",
                "children": [
                  {
                    "comment": "Take me back to the simpler times of AJAX please  I took it for granted!",
                    "points": "3 points",
                    "children": [
                      {
                        "comment": "Ya know, I still work on (and write shiny new code for) not just REST but plenty of old web services sending SOAP 😂 it ain’t much but it’s a living 😎",
                        "points": "5 points",
                        "children": [
                          {
                            "comment": "Can confirm that SOAP ain't dead, but it does pay the bills, lol.",
                            "points": "5 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "A few years ago? SPA’s have basically been the go to since the mid to late 2000’s.\n\nEdit: I guess I was an early adopter. They became more popular mid 2010’s which was still a decade ago.",
                "points": "3 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "If you're talking about the front end JavaScript has been dominant since day 1 of the internet. If you're talking about the backend then Node has probably been dominant for about 5 years. Before then PHP and Java would the main ones. No one likes PHP and the Java tooling is too bloated.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Let's assume you mean day 1 of the web. That's late 1991. Mosaic came along on January 23, 1993 and was the first popular web browser.\n\nJavaScript didn't come along until about 1995. Back then you also had applets, action script, flash. I wouldn't say JS was dominant till the iPhone (which killed flash)",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Ok but did Mosaic have a scripting language 1991?",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "JS in what sense? Cause JS has been a big part of the internet for like 20+ years",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Before jQuery came along. Js was a huge PITA. If you wanted to work in all browsers you had to implement a lot of things twice.\n\nYou'd do a bit of validation but anything requiring more UI would use flash.\n\nOf course now JS is a PITA for a bunch of new reasons, but at least there is a consistent DOM",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "ease of use and deployment I'd imagine. Web browsers didn't support any of those on the front end, generating tons of people familiar with JavaScript who back-ported it to server-side. thus making it so they didn't have to learn another language.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There’s loads of great web frameworks about, many of them arguably better than things like NextJS. The problem though is that when it comes time to server side render your React components or whatever, you need to run the same code as the client. So then you need to use js. That means there’s a whole class of features your other-language framework literally can’t implement in that language. There are exceptions to this like Blazor but it’s not very popular and has a bunch of trade offs - I can see it growing though.\n\nIf you’re not using React or its ilk then there’s still an argument to be made that using a single language for all your code makes things easier, and makes it easier to recruit staff and move their capacity around. There’s also a LOT more js developers around, although the skill level of the vast majority is debatable.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Because it doesn’t matter which backend framework you use, the FE will be JS.\n\nSo for smaller companies and personal projects, it is so simple to have everything being the same language. BE/FE can share the same code, API types can just be imported, it is convenient.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Javascript is a programming language that dominates in the fronted.\n\nThe others are frameworks - not programming languages - used in the backend.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "They don't. Most of the Nodejs server projects that I've seen are backend-for-frontend projects. Yes they run code on a server, but they're really implementing front-end/display logic and are managed by the frontend team who needs finer control over their HTTP servers. \n\nThey're rarely the actual backend that implements the actual meat of the business logic.",
        "points": "2 points",
        "children": [
          {
            "comment": "It depends on the company. The last job where I saw a backend without JS was a bank about 7y ago, and that was bc they had tons of legacy code in some IBM servers. The BFF was in Java.\n\nAll other projects after that have had their core logic in JS/TS for me.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Front end devs too lazy to learn anything else.",
        "points": "3 points",
        "children": [
          {
            "comment": "real talk",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "JS is both the most common programming language and the one needed for fromt-ends. Easier recruitment is a big deal.\n\nDjango and Rails are MVCs, designed for CRUD servers for specified rsources. Pass-throughs and other kinds of servers need something else.\n\nJS works with JS packages. There are rendering options, and there are SDKs. JS SDKs have the advantage of working from both front-end and back-end, so most SDK-writers go for JS.",
        "points": "0 points",
        "children": [
          {
            "comment": "If you're using Django/Rails for CRUD servers, you're doing it wrong.",
            "points": "-4 points",
            "children": [
              {
                "comment": "Rails is fantastic for CRUD. The scaffold sets it up.instantly. Nesting gives you higher-performance CRUD. Running resource logic through the save / destroy callbacks and workflow logic through controllers quickly gives you clean code and avoids common bugs.\n\nCRUD, though, is a very loose thing. For example, e-commerce suites, user-data management, and a whole pile of other stuff are almost entirely CRUD under the hood. I just put together a Gem to validate data before passing it on to an off-the-shelf CRUD server with ActiveResource to add client-side validations. (I will be overwriting Save and Destroy to run write operations through Kafka, but the application logic will be ~ the same.)\n\nHow do you use MVCs?",
                "points": "3 points",
                "children": [
                  {
                    "comment": "100% with you.\n\nAnd, I will be forever grateful that I learned Ruby and eventually Rails *before* I learned JS. The mental models I got from building CRUD apps (typical Dev Bootcamp grad stuff like a Wikipedia clone) with Rails are what guide me toward clean Express code. It was like learning how to cook with really nice knives. 🙂 I miss those knives.",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "Fire up some Koa, Prisma, Next/React, Socket.IO, and maybe another couple tools, and enjoy something close to your old knives again.\n\nIf you import your models and make Prisma save-wrappers, you can get the functionality of ActiveRecord callbacks and nesting, but possibly better: The Prisma callbacks can run around bulk SQL writes.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "That second paragraph sounds awfully nice...\n\nDo you happen to have (or know of) any repos that show a well-implemented CRUD w/ auth app using this stack?",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "Off the top of my head, nothing published. It was just something I started playing around with at my last job. It should be fairly simple to build the Prisma side of things. You just need to follow the example in the Prisma docs and make save-wrappers with their logic wrapped in an if-block depending on the table being updated.",
                                "points": "0 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "I miss those knives too! Also a Ruby > Rails > JS career path.\n\nHowever I got frustrated this week with Rails and setting up a new project and eventually gave up and switched to JS anyway.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "All good points!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Here's what I've experienced having used many backend languages. Beyond the super obvious:\n\nNode is very good at doing simple things. Getting data into and out of databases. Python is not as fast. Also, node breaks down very quickly if you try to mash really complex business logic into the backend. So people don't do this as much.\n\nPython is better at complex things. This is also its weakness. It is then tempting to mash a bunch of complex business logic into the flask portion, and this turns into a nightmare very quickly.\n\nNode is very easy to put in containers. I find flask is a bit harder to put into containers.\n\nAlmost any tech is perfectly serviceable for simpler sites. But, once data starts dancing around the backend in complex ways, getting the architecture right is fantastically important.\n\nSome people will use this to justify their favourite framework. But, to me it is choosing the correct tech to solve the correct problem.\n\nThus, a combo I personally like is node on the backend, but to keep it super clean of business logic. Then, I have python(not flask) doing complex business logic things which either runs on timers, or responds to messages to do complex things. It will send out messages in return. Then, the node will simplistically process these messages.\n\nThis has evolved from doing many ML projects, and of course, the ML has a fairly high chance of being in python, and by its nature, is going to be complex business logic. There is exactly a zero percent chance I am doing ML in js. It can be done, but this is far from an industry norm.\n\nThis all said, I have some projects where the back end is in C++. I could make a long winded argument about it, but a simple example is that unencrypted response times are not measured in milliseconds, but microseconds. I've noticed some rust web crates are significantly faster than what I am using in C++; thus would benefit in the same way.",
        "points": "1 point",
        "children": [
          {
            "comment": "I'm getting off topic here, but as a C# guy, I don't understand why Python devs tolerate interpreted code for ML projects. Do you ever convert to Python, or rewrite in a faster, compiled language?",
            "points": "0 points",
            "children": [
              {
                "comment": "Most of the legwork is done in compiled modules so there isn't a speed hit and the frontend being interpreted makes it easier to try different things out.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Yes, I either do Python, or I do C++. I am exploring rust for ML when I really need the speed as I would like to move most of my C++ to rust.\n\nExcept. Some of my ML moves to embedded and it will either be C or C++. Rust is not getting the level of embedded support I need; close, but not enough.\n\nC# is too closely associated with MS in my mind and I reject MS entirely.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Believe me, most JS devs don't even like JS it has a strong hold on the web, frankly I really wish blazor would get better so we have a choice",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "A big issues with Django, Flask, Rails... is that they dont scale well to big organizations with complex multi tier projects. This is why all the big tech orgs dont use it so much.\n\nThat doesn't mean Django is bad or that you can build great stuff with it. Its just that figuring out the ownership boundaries for 6+ engineering teams contributing to a single Django app is hard.\n\nIt ends up being that having:\n\nA dedicated front end layer\nA backend domain layer composed of microservices\n\nIs the least bad model for organizations that want to scale their engineering teams to more than a single team with a single product.\n\nNow why do people outside of big orgs end up following the same pattern? My guess is just that it gets popularized by the big players, people learn a certain set of skills, then they just stick with what they know... since adopting your skills for a particular use case is hard.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I started 20 years ago and have worked with many backends. To me it's about brain drain. I have to work with JavaScript anyway so as soon as I could use it on the backend it was a no brainer. Even when node wasn't that good I was still using it just because I hate context switching. Now node has progressed a lot and I see no drawbacks whatsoever. It's actually faster and offers better async syntax than many of the others. For this reason it's a no brainer for me to use JavaScript / TypeScript whenever possible. I even use JavaScript for mobile - react native. It just makes me more efficient.\n\nThere are a handful of JavaScript quirks which people always point out, but honestly they are way overstated. Pretty much anyone knows how to make sure you limit your equivalencies and use very specific flow statements. You'd have to learn the quirks of any language anyway. One funny thing about JavaScript is that it looks almost identical to C so it's not like Brendan Eich just made it up with no context.\n\nToday I see it just like verbal languages. What is the language of business? English? What do pilots speak in the sky? English. It just makes things more efficient when everyone can talk to each other. Yeah it's good to have context and other languages to draw from, but it's also really good to have a universal language.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You still need JavaScript if you plan to have any interactivity using these frameworks. JavaScript is the only frontend language for the browser, so you need it for client side interactivity\n\nDjango can be used to make non-interactive pages",
        "points": "0 points",
        "children": [
          {
            "comment": "Well of course, I'm talking more about modern JS frameworks like NextJS and Remix which have been pushing SSR heavily. There's a new JS ORM out every week.",
            "points": "-1 points",
            "children": [
              {
                "comment": "Once you're using something like React for the frontend, if you want SSR with the same code for search engines or performance, you need something like NextJS.\n\nTheoretically, even if you're using a framework like NextJS for SSR, you could use it strictly as a \"backend for frontend\" and have a separate backend providing an API as you were if you were only using normal client-side React, but once you're running javascript on the backend, it's not that surprising that people decide to just go with that and access the database from there rather than building a separate API in another language.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "2 reasons mostly...\n\n1) Allowing the browser to do more of the work significantly reduces hosting costs\n\n2) Most JS projects are using multiple legacy systems, so sometimes 3 or more backends, so a tech that allows all the backends to work with a single frontend is in very high demand",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "for django and flask i think front end js devs are intimidated by jinja2 templates. they're like \"ahhhh, it's too simple\".",
        "points": "0 points",
        "children": [
          {
            "comment": "UXEngineer / Front End Engineer here - and jinja2 and mako templating with a python back end is my personal happy space. Simplicity is not a bad thing.\n\nIt separates concerns in a way that makes everything clean, tidy, and small.\n\nI have used it on huge e-commerce sites that scale and perform really well.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I’m not intimidated, I just don’t like it. It really clutters the code, especially when you absolutely have to end {% endif %}\n\nThough it would be nice to have autocomplete when I was iterating over some array",
            "points": "0 points",
            "children": [
              {
                "comment": "i also find it too simple and prefer vanilla js",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "10 years ago this was not the case, the oposite was true, rails, Django, Laravel, etc. were the dominant and node.js was used by almost no one.\n\nSeveral things were happening that ultimately made node win:\n\nThere was a big shift from server first to client first web apps, because users demanded better UX these apps were more complex to build, but easer to use. In order to make their development easier tools emerged, usually written in js, so you run them with node\n\nThere was a need for better performance, handle more request per minute, node had non blocking IO and an async programming model, with this suddenly it was ease to write web servers that could handle multiple request per tread, as opposed to popular frameworks of only one request per thread. Also JS was a much faster language when compared to Python, Ruby, PHP, Perl, about 20x faster\n\nNPM, it was by far the easiest package manager to use. pip -r requirements.txt was painful to use\n\nNode was simple to deploy on a linux server when compared to Python, Ruby, PHP",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Java dominates where JS doesn't. If you're not making isomorphic apps, there's no reason to go with two different interpreted languages.",
        "points": "0 points",
        "children": [
          {
            "comment": "Thats an interesting choice of words as Java is in interpreted language.\n\nFollowing your logic would rust be a better option?",
            "points": "0 points",
            "children": [
              {
                "comment": "Java is compiled and interpreted. It's performance is more in line with compiled languages, but it's easier to learn than most compiled languages.\n\nI'm not a fan of Java, personally, but it's 'good enough' to be the de-facto standard for enterprise back-ends.",
                "points": "",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Familiarity\nGiven TypeScript, the language is actually quite good\nV8 is somewhat fast. At least faster than Python or Ruby\nIt's single-threaded garbage-collected language, which is simpler to write\nAbundance of libraries and relative simplicity of dependency management with NPM\n\nNow, I also love Rust, but it's a newer language that's more difficult to learn due to the borrow checker and support for concurrency and multi-threading. Rust makes development feel really good and encourages code quality, but because it's not as famous and not as easy, and because TS/JS is widely considered good and fast enough, it's not much of a mystery people prefer it",
        "points": "-1 points",
        "children": [
          {
            "comment": "Bun has been promising as well in regards to #2.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Your user name is very fitting. I may somewhat buy 1-2, but the rest is looney toones",
            "points": "-1 points",
            "children": [
              {
                "comment": "What the heck are you talking about? I listed the facts basically",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Those are all worse DX",
        "points": "-3 points",
        "children": [
          {
            "comment": "Django/Rails are cool when you have a very clear cut and narrow problem space. If you know exactly what you want to build, and need like 10 engineers at most to build it. Sure just throw everything into Django models and let it figure out how to map that to a SQL table for you.\n\nOnce you scale to a more compelx organization structure. Where business goals are subject to change, and you need to support 100s of engineers. A single Django app becomes an awful experience.",
            "points": "0 points",
            "children": [
              {
                "comment": "The orm fails hilariously early if you need to do any complex joining and you spend all your time writing raw queries anyway",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Lotta good answers here. Another I haven’t seen yet is a downstream effect of the browser needing JS, which is separation. Web apps used to be very hairball-like w/ the backend merging into the client code. Which meant changes effected the entire apps codebase.\n\nSeparating means the ability to upgrade/rewrite a section of an app(like the client) while maintaining the backend’s infrastructure in place.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That's like asking why the car is so popular when you could just drive a Mustang...",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It’s not a full circle moment. Those other frameworks suck at client side.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "A big reason is because bootcamps shifted to it because (1) React was HUGELY popular at that time and a little of places were demanding that skill, and (2) you can teach it with literally just a browser; no IDE needed.\n\nI love ruby with all my heart but it is more challenging to bootstrap a rails app than a JS app. Not impossibly harder, but enough. Or rather, it is SIGNIFICANTLY easier to setup a js app than a rails app, and that creates a friction in using rails for bootcamps. Most bootcamps used rails before switching to react.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There a few other reasons JS dominates that I don't see mentioned yet:\n\nthere is a reinforcing cycle where because javascript is already so widespread (out of necessity for web apps), it has a lot of staying power as answers are easy to find on google, stackoverflow, and now chatGPT (LLMs favor more popular languages as there is more data to train on)\nmost bootcamps stick to javascript so that you can learn frontend and backend w/o having to learn multiple languages (well besides html/css)\nsame for small teams - it's easy for 1 person to build a fullstack javascript app w/o having to jump between languages. And it offers the flexibility of replacing parts of the stack as team/org/company expands (e.g. replace front end .js with typescript or backend with go)",
        "points": "0 points",
        "children": [
          {
            "comment": "You also need to add. Rise/Proliferation of Containerize Workloads. Docker/Kubernetes gave a big boost to nodeJS. It is simple and easier to deploy node APIs at volume.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Rails (and perhaps some of those other choices) is not mutually exclusive with JS frameworks, at work we have a hybrid, slowly evolving website, with some legacy pages in full ERB, some with some Vue components mounted within ERB, some pages where the entire page is a Vue app, closer to SPA style but without front end routing.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's like asking why does CSS dominate when there's web frameworks.\n\nJS is the only option for client side programming.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I feel like it’s dominating certain use case (SPAs) rather than everywhere.\n\nPlus while you can build stuff pretty fast with it the amount of churn in the JS ecosystem means long term maintenance is a bit of a headache.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It was the language that was picked for browsers. The rest is a little bit \"obvious\".",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Because some people learn JS and never want to learn anything else. And instead of learning a new language, a bunch of enablers made it possible to put JS everywhere because they love the smell of shit blasted everywhere so much.\n\nJS has the one advantage that it runs on web browsers. That's IT.",
        "points": "0 points",
        "children": [
          {
            "comment": "I disagree and I've used frameworks in other languages before. I'm currently using Nuxt for my projects and the experience of having the frontend and backend in a single framework is amazing.\n\nDocs are all in one place\nI don't have to worry about random updates to the backend causing consequences ever again (CORS errors popping up out of nowhere)\nsharing types between client and server code is very convenient\nLocally, I only have to run the single framework vs running multiple programs at once\nsetup is really easy, I can pull my code to any machine and start working on it within minutes\n\nI would not say that I'm choosing to develop in only JS because I like JS. I'm developing in only JS because right now the enablers out there figured out how to get rid of a lot of the headaches and make it enjoyable.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Reading the comments, it feels like a watching ladies picking fruits are the market, everyone has a favourite and you just can’t please everyone.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Think it’s easier to just dispel the myth you claimed to start with.\n\nJS does not dominate. It’s just newer and shinier which means you see and hear more about it.\n\nIf most of the web is powered by php, java and python. (Yes others like c etc)\n\nIt dominates frontend because it’s the language of browsers. There is no competitor. Ruby doesn’t (get out wasm lovers) run on your browser.\n\nThe appeal of using one language for back and front is promising for some teams problems.\n\nBut it doesn’t “dominate” the web, it enhances it :)",
        "points": "0 points",
        "children": [
          {
            "comment": "It may not \"dominate\" the web, but in certain regions, it definitely \"dominates the job listings.\" And the average higher salaries in Glassdoor, Indeed,etc indicates this as well.\nIn Big Tech and Silicon Valley, it is heavily skewed. In other regions of the US and other countries, this may not be the case.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I am fullstack dev, but I never use JS/TS at backend.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "People start with JS on the frontend and then it's easy to stick to it on the backend.\n\nI agree that the trend towards SSR is quite ironic, it feels like some of the \"innovations\" that Vercel is doing with Next.js are just the same thing we had 15 years ago.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "People have covered the single language for back and front-end development, but I will add something else: Because all that work to make JS run fast on the front-end across billions of browsers has made it super fast on the back-end too. Python and Ruby are slow in the beck-end, and painful to manage and deploy too.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Because all browser have to support it",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I don't think js is dominating on the back end. Do you have data?",
        "points": "0 points",
        "children": [
          {
            "comment": "Not sure, I do see Node ranks highly here. https://survey.stackoverflow.co/2023/#most-popular-technologies-webframe",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abxchj",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://graphite.dev/blog/how-to-give-accurate-eng-estimations",
    "title": "Accurate eng estimations: predicting and negotiating the future",
    "points": null,
    "comments": [
      {
        "comment": "One thing that frustrates me about communicating ENG estimates to cross-functional folks is that there is more to it than just coding. There's review, debugging CI, maybe a merge-queue, deployment, dogfooding, getting late edits from design, carefully ungating a feature flag, getting tagged on two bugs, adding alerts to watch for regressions, and finally calling the feature launched. This time adds up, but it's hard to get roles to appreciate.\n\nShoutout to all the kind folks fighting for quality craftsmanship in their work, despite pressures to compromise.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abxbrt",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://open-web-advocacy.org/blog/apple-dma-changes/",
    "title": "Apple's plan to allow browser competition dubbed unworkable - Open Web Advocacy",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1abwkry",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://sphuff.dev/how-letterboxd-creates-pixelated-skeleton-images",
    "title": "How LetterBoxd Creates Pixelated Skeleton Images",
    "points": null,
    "comments": [
      {
        "comment": "I don't recognize this syntax, is it pure .js.html??\n\n<img\nsrc=\"https://a.ltrbxd.com/resized/sm/upload/9u/5h/ey/it/there-will-be-blood-1920-1920-1080-1080-crop-000000.jpg\"\nclass=\"absolute w-full h-full opacity-0 transition-all duration-500 delay-500\"\nonload=\"this.style.opacity = 1\"\n/>\n\n​\n\nVery neat way to achieve that :)",
        "points": "1 point",
        "children": [
          {
            "comment": "Thanks! Yup, that's just regular JS. I'd definitely recommend creating a separate function, but it worked well for keeping things concise.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hey guys! I recently came across this cool loading effect on the letterboxd website. I thought some other people might be interested in how it works, and how to replicate it on their own sites.\n\nI used TailwindCSS to keep things succinct, but let me know if there's any interest in vanilla CSS",
        "points": "0 points",
        "children": [
          {
            "comment": "I think theres something wrong with the first video, it 404s for me.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Never heard of the image-rendering property. Thank you so much for sharing. I think blur.io is doing something similar.\n\nI've been using blurhash for the last couple years but this effect may make me change my approach.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abwh59",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abwh59/tips_for_freelance_web_development_with_local/",
    "title": "Tips for freelance web development with local communities and what/how to present myself?",
    "points": null,
    "comments": [
      {
        "comment": "Anything you’d ever wanna know about that and how to freelance small businesses i wrote here. Hope it helps!\n\nhttps://codestitch.app/complete-guide-to-freelancing",
        "points": "4 points",
        "children": [
          {
            "comment": "Solid guide. OP give it a read (and then you could Google any of the specific topics in it if you want to go deeper).",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abw8et",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abw8et/should_i_use_wix_or_godaddy_as_a_website_builder/",
    "title": "Should I use Wix or GoDaddy as a website builder?",
    "points": null,
    "comments": [
      {
        "comment": "Absolutely stay far far away from GoDaddy. If I HAD to use a website builder it'd be SquareSpace or Wix temporarily then move off it to a dedicated site when you've the funds to hire a developer, because long term both platforms are a bad idea.",
        "points": "9 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "No, you should not use Wix or GoDaddy as a website builder.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Do everything you can to never have anything to do with GoDaddy.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Neither. But of the two, choose Wix.\n\nSquareSpace is better than Wix. Either SquareSpace or Wix is going to be a low quality website. If you're considering anything interactive, I suggest looking at WordPress. There are several WordPress hosts worth looking at. You could get pretty far with one of them without having to hire a real \"developer\"",
        "points": "0 points",
        "children": [
          {
            "comment": "Tbh it really just needs to be a landing page with an about us section. Its not going to be a \"real\" in depth website.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "i remember like 5 years ago when i did web dev stuff, wix was so agressive with their ads, thats how i knew they are bad, and i was right...stay away...",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Fck gofather. Don't use it. Just don't.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Neither, but definitely not wix.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Nope",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Simvoly is is a great alternative",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abvj0o",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abvj0o/render_server_payments/",
    "title": "Render server payments",
    "points": null,
    "comments": [
      {
        "comment": "Here's the fallacy most new business people make. You're directly passing on costs to the end client in a very transparent way.\n\nAsk yourself one question. What business are you in? If you're in the business of just providing development services, then show them the admin panel and allow them to take it over for payment, etc.\n\nIf you are in the business of recurring hosting services, then suck up the $7/month and bill them accordingly for your time, effort and work so far, and future work to come. No one says you have to detail out every little aspect of the hosting side of things if what they are paying for is a continued online presence.\n\nThe path you choose is up to you. I price out my work both ways, depending on situation. For one-off work, it's by the hour if its fairly small. For recurring work, I charge a package deal and then the yearly renewal fee(s).\n\nIn either case, I'm well paid for my time and effort, keeping it simple.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abv0xy",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abv0xy/has_anyone_on_here_used_aws_nexrad_to_implement_a/",
    "title": "Has anyone on here used AWS NEXRAD to implement a weather radar map?",
    "points": null,
    "comments": [
      {
        "comment": "Never used the specific service but are you building your site on AWS or hosted elsewhere?\n\nAre you familiar with AWS at all if you’re hosting elsewhere?",
        "points": "0 points",
        "children": [
          {
            "comment": "I'm just developing locally right now. I haven't put much thought into hosting. If it means easier NEXRAD implementation I'd be open to going the AWS route. I'm semi-familiar with AWS but haven't used it extensively.",
            "points": "0 points",
            "children": [
              {
                "comment": "AWS is its own beast and realistically this question is more of a hosting/infra question which is why I think you haven’t gotten any other responses.\n\nYou can either host on AWS, or host elsewhere and deal with sending the data somewhere else. No right or wrong answer just personal preference. All the service likely is is just putting the data into an S3 bucket so there’s nothing fancy there.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Gotcha, I'm gonna do some more research. Liking the handle btw, mid 2010's Giroux was a killer.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abutor",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abutor/any_recommendations_for_a_website_builder_for_a/",
    "title": "ANy recommendations for a website builder for a boat charter",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1abuegl",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abuegl/how_would_you_read_a_binary_file_with_front_end/",
    "title": "How would you read a binary file with front end JavaScript?",
    "points": null,
    "comments": [
      {
        "comment": "You can get the File Object from the HTMLInputElement via the input's .files array property.\n\nThen you can use the FileReader API (or the file's .arrayBuffer propery) to read the file into an ArrayBuffer.\n\nYou can then read binary data from that ArrayBuffer using the DataView API.",
        "points": "19 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Js isn't great for binary you can do it but it's painful.\n\nIf the files are going to be big or complex and require a lot of processing you could look at using webasm for it. I'd wager that if it's a popular format there are libraries that support it.",
        "points": "2 points",
        "children": [
          {
            "comment": "MOD files, for music trackers. Usually <1MB, historically popular enough because they date back to the Amiga days, but not exactly mainstream. A niche within a niche.\n\nThere are libraries already, but I’m deliberately reinventing the wheel for the sake of my own learning.",
            "points": "1 point",
            "children": [
              {
                "comment": "Looks like there are some js libs already there https://atornblad.se/js-mod-player\n\nI don't know if you want to implement your own anyway. But you should be able to integrate this with a file upload fairly easily.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Sorry but, did you even read his second paragraph 😅",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abtvrq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abtvrq/how_can_the_qa_team_test_error_states_dependent/",
    "title": "How can the QA team test error states dependent on 3rd party APIs?",
    "points": null,
    "comments": [
      {
        "comment": "Yeah that’s a difficult one, test date in general btw. I think you have a few options here. Personally I would prefer to cover this flow in automated E2E tests where you spin up a version of the app with deliberately broken third party connections. No need for manual testing and gets the job done.\n\nIf you really need a person to regression test it (I know lots of companies require it) it really depends on what type of application you have. For example, we do a lot of things based on a given address. We included code (with a feature flag) to trigger certain errors when a specific address is given. Problem is tough that you are still testing custom logic in that cases and not the actual failure. So another option, but again depending on the situation if feasible, would be to proxy the their party request on the test environment with some middleware you can control. That would be the best way to simulate a failure.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Lookup API mocking. The basic idea is to setup a fake version of the 3rd party API (hosted in your company’s Dev/Staging environments). The QA team has the ability to customize what the mocked endpoints respond with, which allows them to intentionally respond with specific error states, etc. during their testing.\n\nThe frontend in Dev/Staging would ideally also have a way to toggle between the mocked API and the real 3rd party API dev environment. Or another solution would be to setup an independent QA environment that only uses the mocked API.",
        "points": "3 points",
        "children": [
          {
            "comment": "We use Wiremock internally for dev testing. Should work for QA s well.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "This approach works for me as well. However, be aware that all responses you mock really need to be correct. Otherwise your are testing your app against false assumptions. Also keep in mind that you need to actively manage the test data now. Depending on the complexity of your app and the amount of scenarios this really can become a pain in the but.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Could you use a custom hosts file and reroute the domains? https://en.wikipedia.org/wiki/Hosts\\_(file)",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abthsp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abthsp/bombed_an_interview_yesterday_that_left_me/",
    "title": "Bombed an interview yesterday that left me questioning myself",
    "points": null,
    "comments": [
      {
        "comment": "If you don't understand something, ask the interviewer. That's a very senior-level move. A junior-level move is to pretend you understand the question, answer it poorly, and move on.\n\nE.g. \"Are you looking for me to compare the JS class model to other languages? I'm not clear on the question\" or \"Were you looking for more detail regarding click events, or is that sufficient?\"",
        "points": "205 points",
        "children": [
          {
            "comment": "In the back of my head I know I should do this, I assist with interviews where I work currently, but I always forgot when I’m the one interviewing… going to need to keep a post it on my monitor going forward 😅, this whole process is a lot less stressful and anxiety inducing when you’re on the other side of the virtual “table”.",
            "points": "31 points",
            "children": [
              {
                "comment": "For sure! It's a stressful situation. It requires practice and is a skill like anything else. Something to just keep in mind. At least when I'm interviewing candidates, I really appreciate when the interview turns more into a discussion, and I immediately recognize that candidate as having more experience.",
                "points": "10 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "when you click a DOM element, what happens within the browser/javascript\n\nI think he wanted to hear you talking about event bubbling and propagation, not anything too low-level like the stack you mention. Perhaps the render tree being modified as well if the click event changes an element, but mostly about the bubbling.\n\n​\n\nthe difference between \"javascript inheritance and class inheritance\"\n\nYes, he meant the prototypal inheritance in JS, he should clarify that. Basically, he wanted to hear you saying that JS inheritance looks up to the chain to find ex. a method of an array you created when you want to use that method without you explicitly doing anything whereas in class inheritance you need to extend a class with the creation of your class to gain access to methods.\n\nNone of those need a CS degree, though, don't be too hard on youself, you just got unlucky.\n\nMy advice is to give yourself some time to learn some of the basic theoretic concepts of JS and HTML and you'll be good to go next time. You are already doing a great job and a hard one for that, you were chosen to be interviewed for a senior role by a big company and guess what, they knew you didn't have a degree and still chose you as a candidate. So, give yourself some credit for reaching this far and stop feeling down for that degree, unless you want to ex. build a compiler or something. Keep going, you've got it!",
        "points": "129 points",
        "children": [
          {
            "comment": "This was a really thoughtful and supportive response, especially the final words of encouragement. Thank you for taking the time to write this for OP, it helped me too :)",
            "points": "25 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "where does one go to learn about the lower level stuff? such as rerendering? i know about event bubbling and propagation",
            "points": "2 points",
            "children": [
              {
                "comment": "Basically read books about js, or learn everything an extensive website like this offers https://javascript.info/",
                "points": "3 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Read the mdn docs. They can't be beat for developing a real understanding of how the web platform works.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Honestly this is a good use case of chatgpt. It’s surprisingly good at summarising simple concepts like this.",
                "points": "4 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "You said \"ex.\" what does this mean?",
            "points": "0 points",
            "children": [
              {
                "comment": "Example",
                "points": "0 points",
                "children": [
                  {
                    "comment": "I see, that was confusing in your sentence \"JS inheritance looks up to the chain to find ex. a method of an array you created when...\". It's interesting that you would write a detailed answer and abbreviate that word in particular.",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "And not use the common e.g. or i.e.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "At least you're getting interviews. I've been always told to use them as practice, but I never get them so I guess here we are.",
        "points": "35 points",
        "children": [
          {
            "comment": "Unfortunately for all of us I think that’s the state of the market right now, in 7 months and some 1000+ applications I’ve only had two interviews 🥲\n\nI was gifted a subscription to an interview prep site for Christmas, AlgoExpert I believe is the name? One of the features is to do mock interviews with other users though I’ve not used that feature yet.\n\nBest of luck to you and hope things turn around for all of us!",
            "points": "15 points",
            "children": [
              {
                "comment": "in 7 months and some 1000+ applications I’ve only had two interviews\n\nOkay, something is wrong with your resume...",
                "points": "18 points",
                "children": [
                  {
                    "comment": "Honestly I think it’s due to the high rate of applicants to most jobs and companies in turn using easy filters like degree/no degree to cut the applicant pool down with whatever automated screening they may use, it’s hit or miss if you’ll get seen by an actual person.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "I have no degree, and no such issue.\n\n2 interviews in 1000 applications is for sure a resume problem. Something obvious that's getting you filtered out.",
                        "points": "16 points",
                        "children": [
                          {
                            "comment": "For real. Not sure if this sub allows helping others with resumes, but /r/resumes will give some constructive (if occasionally mean) feedback.",
                            "points": "5 points",
                            "children": [],
                            "isDeleted": false
                          },
                          {
                            "comment": "Exactly, I had 2 interviews lined up and I got hired where I first interviewed",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Same to you. I’ve been at it for 1 months and the closest I’ve got is there were better candidates than you. Which seems to make me think that there is never going to be a circumstance in which I’m a solid enough candidate to even get an interview",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I'm also 1000 applications!",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Sorry, do you keep count? Like a log?",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "How do you even know you applied for more than 1000 positions? lol",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "I'd suggest getting in touch with recruiters on LinkedIn, from my experience if they approach you about a role that may be a fit you're pretty much guaranteed an interview.",
            "points": "1 point",
            "children": [
              {
                "comment": "Yeah this would be my advice too. Honestly just update your resume on monster. Every time I do that I get flooded with calls/texts from recruiters for months (even when I don’t want them). Recruiters have been calmer on LinkedIn over the past few months but it’s definitely started to pick up this month.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "At least you're getting interviews. I've been always told to use them as practice, but I never get them so I guess here we are.\n\nI keep trying to tell myself this lol. I'm probably relatively similar to OP (self-taught ~20 years ago, ~7 yoe at current place working on legacy code at a consultancy firm, mostly learn through reading/self-study).\n\nI feel like my callback and interview rate is abysmal which keeps me from applying. But I've applied to ~10 places and have had 3 callbacks. One ghosted me after the first interview, one told me they wanted more modern professional experience, and one the salary range was too low.\n\nI'm pretty open about my shortcomings, which I feel like might not be helping me much too.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I was in the same boat last year! Interviewing for a senior role and one company kept asking questions like this. I found it really strange because they're asking theory questions and expecting you to recall the definition of all these things. It felt like a college exam, not an interview. I learned these when I was first learning, some things I still remember of course but some things you just forget as the years go on. IMO it's a terrible way to interview for a senior role, remembering the little details of how an onclick event work does nothing to help determine if you're able to do things seniors do.\n\nAnyways, like others are saying, forget about them and move on. You'll find something, you're smarter than you give yourself credit for",
        "points": "19 points",
        "children": [
          {
            "comment": "I think this is why the industry has me down bad these days.\n\nProduct owners/managers and clients haven’t changed. You’ll still be constantly challenged to do things you know are wrong for the sake of business goals… and at the end of the day we’re still just building websites which will have a shelf life of 5 years at best.\n\nOn top of that now though, the field is littered with “tech leads” who are focused on minute details of bullshit.",
            "points": "10 points",
            "children": [
              {
                "comment": "100% this. I can tell you've worked at agencies lol\n\nIt sucks but I guess it's what we get to deal with 🤷‍♂️. Keep moving until you find somewhere good, or start your own thing",
                "points": "5 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Don’t worry about it man. \n\nI’ve bombed some and won some, tech interviews always seem like a roll of the dice. Who knows what you’re going to get!",
        "points": "14 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hey, I'm a senior c# developer, been doing it for over 10 years, i wouldn't worry about it too much - there will always be things that you just don't know. Just take a breath and look into the things that they mentioned\n\nYou can extend classes in JavaScript which is inheritance: https://www.w3schools.com/js/js_class_inheritance.asp\n\nThe click one I'm not really sure what they wanted could have been a whole host of things really, buttons can be used for so many things, submitting forms, having a click handler as you say. So I can't be of help there.\n\nBest thing to do is just ask the company (or recruitment agency) for specific feedback and if they say that \"you weren't technical\" enough just know that you probably dodged a bullet.\n\nEveryone has doubts if they are good enough, technical interviews are weird because they can ask you a million different potential questions, ive had some weird and wacky ones in my time. If you dont know, then you dont know 🤷 nothing you can do because how do you even prepare for things you aren't aware of. If youve been doing dev for 6 years then you obviously have some knowledge 🙂",
        "points": "16 points",
        "children": [
          {
            "comment": "Oh click on a Dom element, maybe they wanted to hear about how events can \"bubble\" up, when an event happens in an element and is not handled then it will bubble up to the element parent until it eventually gets to the \"document\". Again without knowing the exact question im unsure 😅",
            "points": "18 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Thank you friend!\n\nInterviewing is extremely difficult for me unfortunately.\n\nThe click question initially came up in regards to what happens when you click a “link”. We had just finished speaking about NextJS so I asked for clarification, “do you mean an anchor tag or a NextJS Link element?”\n\nThe interviewer then changed the question to “let’s say you click a div, a button or any DOM element”.\n\nJust need to dust myself off and keep at it but after the last 6-7 months of applications and my prior lack of interview time compared to others, it’s easy to get myself into a fog.\n\nEDIT: saw your other comment and wanted to add, I probably should have asked a clarifying question regarding if the element being clicked was intended to be “clickable” like a button or a link or if it was just a random div in the page…. Unfortunately for me my ADHD has me take words way too literally and at face value and stupidly and incorrectly assumed he was referencing any DOM element, intended to be clickable or not 😅\n\nAt the very least I did reference if the element had an event listener and what that could potentially do but I believe you’re probably spot on with the “bubble” up comment.",
            "points": "2 points",
            "children": [
              {
                "comment": "It sounds like they wanted to hear about the mechanics of the event dispatch, eg: capture, bubbling, listeners, propagation, defaults.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Is the little imposter syndrome voice in the back of my head right?Do I truly deserve to be where I am?\n\nThey've tested your javascript knowledge and found it lacking. You may not be the developer they are looking for. Yet, you have a job, which means that some people are willing to pay you for your knowledge and skills, and presumably are finding them valuable, or they wouldn't be paying you. They must think you deserve to be where you are now.",
        "points": "9 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don't stress too much about it. We've all been there. If it helps, I usually look at every job interview as a learning experience. If I do well and advance, that's just an extra perk. Otherwise, it's just a conversation about what you know. If you feel like you didn't (or couldn't) answer a question well, write it down and spend time learning it for the next interview. As others have said, you never know what people are going to ask and a lot of times, if you're being asked weird questions it's probably a blessing that you didn't get the job.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sobering moment. Happens to the best of us. Yes, he meant event bubbling and prototype inheritance. Learn from it and do better next time. I would recommend Jake and Surma's videos. Also, \"10 things you should know about JS but you probably don't\" YouTube video series. (Turns out to be 15 things)",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I think for the click event they were looking to see if knew about event bubbling, which is quite a common interview question.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I assume he wanted to know about the event loop and how the click of a button adds a \"message\" to the event loops queue as described here. I think event loop questions are very common in JS interviews. Regarding inheritance, I think he wanted to know about prototype in JS vs non prototype inheritance in e.g. Java as you said.\n\nAs others said don't be too harsh with yourself, its probably really more of a preparation issue. Check for common JS interview questions and refresh some of the basics.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You said it yourself, you were unprepared. Never go into an interview without an idea of what you're going into. You should be asking your contacts ahead of time what to expect so that you may adequately prepare.\n\nOther than that, you just need confidence. If you make excuses and talk about being self taught when you think you're struggling, you're just snitching on yourself. Don't give them reasons to question your ability.\n\nYou said yourself you've been a web developer for 6+ years. You're a web developer by definition. Folks have paid you a lot of money to do high skill work for them for many years. Own it. Understand that there is not a single engineer who knows everything. There will always be questions in an interview you don't know the answer to, that's not a reflection of your skill level.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There are a couple of good courses on udemy specifically covering interview questions like this. I never remember terminology and I've been doing this for 25 years. Every time I'm looking for a new job I brush up with one of those classes.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Buy and rwad the book \"The imposter's handbook\" it's fabulous and really well written and funny as he'll and super interesting.\n\nThe whole idea is filling in gaps you missed if you're self taught. I was self taught and felt intimidated doing college interviews because I didn't understand big o notation.\n\nThis book really helped me. I mean I still don't understand big o notation but now I don't give a shit",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There is nothing wrong with being a self taught developer. One of the best ways to get over impostor syndrome is a few things\n\nKnow your stack and focus heavily on it.\n\nPick a stack that you want to specialize in and really read up on it. Even though I know C# I still read books that teach C# because authors often have minutia or ideas that I didn't see elsewhere.\n\nEven of you know React, read a book on it.\n\nRead more code.\n\nC# and Javascript are great because you can easily jump into the source code and learn how they did something. For example, I wanted to learn why my calculation for Geospatial distance differed between my code and SQL Server results. I decompile the code and really dug through it to get to understanding how it was calculated. It also gave me a deeper appreciation for how things were done.\n\nWhen you read more code you can identify why certain code is bad. You've seen patterns and practices across different teams and identify what's the most maintainable solution. You also feel more confident in what you write because you can identify why other people are idiots.\n\nDon't stop learning.\n\nDevote a 1-2 hours a day (even could be during down time) reading up about a new tool or technology. I have the Morning Brew as my homepage so I can read up on a few articles on c# and stay up to date.\n\nGet a Pluralsight or O'Reilly books subscription. You can get them with an Acm membership for less than $200 (normally they would cost about 5-700/year)",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I always tell my teams that the difference between a senior and a junior is not the technical prowess but the way they behave in the team. You can have a brilliant engineer, but due to a lack of life experience or ego behaves poorly. I expect for a senior to not be afraid of being vulnerable, to know how to admit what’s unknown, to ask questions and clarify information, to help the team and clients, not to cast blame, to be tolerant and understanding, not to be Rambo or anxious or to panic, and to drive the project to success selfesly. Lots of people claim doing that but they actually don’t. You usually find them in the “I’ve been pulling this team forever but I’m not appreciated”, “nobody listens to me” crowd.\n\nEdit: also, OP, when you apply for a senior position think what the other party expects from you. Waaaaay to often techs think that the hiring manager wants some kind of leet genius, but 80% of the time is the other way around. The hiring manager wants to see if you fit easily within a team. Are you a nice person, do you communicate well, are you serious but not too serious? Can you take a joke? Do you panic or shut down when under pressure? Can you integrate quickly? Can you help the other team members? Everything else can be taught if you demonstrate a reasonable tech understanding. Behavioral skills are the hardest to change. Good luck with your next interviews. Be brave!",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I almost had the same situation, being the sole developer for many years of experience something between senior and med level with deep experience in both front and back. The other day I was interviewed for a nice position with Big Buck but I failed to answer a couple of questions that were tricky and required deep theoretical knowledge in JS yet they wasted my time in extra round to create take home test that performed very well in.This stuff is not used in day-to-day jobs. My clients care about performance, user experience, maintainability, scalability, integration, fast delivery, clean code, etc. None of them care or know about vdom, this keyword, or internal gears of js, vue, or react. It seems this kind of question is just to flex knowledge over others and dismiss other aspects of developer knowledge and experience.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "In a course of couple of interviews you'll understand your gaps, learn them and will be more confident",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hey look 👀. I NEED you to feel confident in yourself . Cause if you aren’t how the hell am I supposed to look in the mirror every morning when I have less experience than you.\n\nJust remember you taught yourself to get this far. You bend when others break. Just keep going.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When you don't know something in an interview, just my two cents: own it. Don't fret, scramble, or lie. Remain calm, say you don't know it, and try to navigate it as a conversation point. In this case about JavaScript inheritance or whatever, \"I've heard that term before but to be perfectly honest it's not something I've encountered in the X number of projects I've successfully completed. Could you expand on what kind of use cases it has in your environment?\"\n\nThen they'll tell you something and as you're listening, be thinking in real time back to your own experiences. What they describe might be something you do know, and it turns out it's just a terminology difference. Or if they describe it for a particular problem, say how you instead solved that problem, but that you're always looking for new techniques so thanks for the insight.\n\nThat's the difference between junior and senior. Senior, like half the battle is the conversation. Even if you don't know it, if the interviewer likes your conversational style, how you didn't put up some ego front, how you admitted not knowing something, you may still walk away with a chance.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When I’ve bombed interviews I should not have I almost always find out later that what seemed like a great opportunity at the time would have been a horrible path to go down…or at very least not as great as the opportunity that came up later.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I can't speak to the technical elements, but if you have 6+ years in the business, multiple clients, multiple stacks/technologies/languages then you're anything but an imposter, I think most people would be very impressed by that.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "look i'm all for self taught, afterall that's what we ALL are after college anyway...but sadly there are gaps in your knowledge that you have to work on to remedy. Example, I hired and worked with a self taught guy a few years ago on a project, dude was great in terms of churning out code and getting stuff done, had a real knack for CSS/JS that I lacked too so it was a good parternship. But he had sold himself as 'full stack' (which is meaningless at this point IMO) and once he started doing database/API type shit it was a fucking disaster, like no basic understanding of referential integrity or ACID or the many pitfalls that go along with writing an effective and performant backend. There's a reason we have CS degrees, and while its basically 4 years of shit that could be better learned in 2, it does give you a really strong core of fundamentals to build of off. I have a whole notebook of do's and don't and gotchas on dev that my profs passed along, invaluable for a young dev",
        "points": "0 points",
        "children": [
          {
            "comment": "There's also a reason to have people who focus on different areas of the stack. I've met very few people who call themselves 'full stack' who are actually good at the full stack. Usually it's middle tier folks who suck at the front end but sometimes the other way around.",
            "points": "1 point",
            "children": [
              {
                "comment": "I've met very few people who call themselves 'full stack' who are actually good at the full stack\n\nhence my comment",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Now you know. Your prospective co-workers are not going to care about those past projects and how well you delivered. They are looking for a baseline competency of a mid-to-senior level engineer. That is typical in a process driven engineering organization. I know I would never care about Shopify or Wordpress experience. It is irrelevant to what I do day-to-day. However, javascript fundamentals are important because you need it for many of the current frameworks from Vue, React to Angular.\n\nYou sound more like you are a better fit in a product role.",
        "points": "-3 points",
        "children": [
          {
            "comment": "Knowing the terminology and knowing how to actually code are two different things. I'm a full stack developer and I write pretty decent code imo, but i'd fail any interview that asked me to explain these differences, or memorize mdn documentation verbatim.",
            "points": "14 points",
            "children": [
              {
                "comment": "I interview a lot of developers and I don't care if you know Angular lifecycle hooks, input decorators, or Redux in React. Those are all things someone can learn over a weekend. No experience with Angular? 4 years with React? Fine. You can learn Angular over 2 weekends. But we do care about fundamentals like scopes, closures. We care about async/awaits, promises. Those are things we do on a day-to-day, regardless of the stack. And if you miss one or two things, that is OK as well. So it isn't about flexing some sort of knowledge. We try to give a very broad interview/assessment which includes some simple coding exercises. The exercises are easy enough, you don't need to google. But it shows the thought patterns on how they solve a problem. I will never give you a Fibonacci quiz or reverse a string.\nBut you should know the difference between a let and a var in a practical scenario.\n\nKnowing those core Javascript is more palatable than grinding leetcode for a lot of people.",
                "points": "3 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "This. This is me 100%",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "prospective co-workers are not going to care about those past projects and how well you delivered\n\nTake a look at this statement you made and consider the fact you're probably deprioritizing the most important thing, delivering! Process driven? Is that a euphemism for waterfall development? Talk about missing the forest for the trees. yeesh.\n\nSome gaps (technical) are easy to fill, an inability or unwillingness to explore the problem domain absent \"process\" and \"definition\" is a lot harder to fix and often shows up in engineers who aren't well rounded outside of getting their degree and joining the workforce. To them, everything is a computer problem, but really nothing is, they are real problems the computer is trying to solve. And until they break out of that mindset and realize it as a weakness it creates a burden on everyone else. Because at \"common sense\" and \"clear communication\" become about creating \"process\" and \"defining every scenario.\" And people stop caring because they are cogs in the machine completely alienated from their work and the team stops being agile. It's scary to think this guy who might not be able to solve code riddles off the top of his head might be able to deliver a product at 10x because they can walk and chew gum at the same time. Whereas you might be chewing on more gum, but missing the walking part, stuck in place via gum. I've seen plenty of hotshots chewing gum by now.\n\nYeah, shopify and wordpress aren't going to knock my socks off but if it was a sound decision based on the situation time cost wise, wasn't indicative of any stack-lock in by OP and met the end goal of the end-user and no bugs, that's valuable. That's what it's all about. That's one man wrecking crew if they just smash through whatever is in their way. They didn't learn it from their college professor, they figured it out. Give them some respect.",
            "points": "3 points",
            "children": [
              {
                "comment": "Take a look at this statement you made and consider the fact you're probably deprioritizing the most important thing, delivering! Process driven? Is that a euphemism for waterfall development? Talk about missing the forest for the trees. yeesh.\n\nI am fully aware of what I wrote. The OP is applying for a IC role. Individual Contributor. If it was a lead, product, architecture, it is different.\n\nFor an IC role, co-workers want to work with people who are not cowboys. We've been through that in the past. They had excellent portfolios, great past projects but NO organizational process and could NOT unlearn their bad habits. Senior guys who did not know how to do git commits forcing all the juniors to clean up their mess. Sneaking in code because they did not follow Agile and take Jira. Cybersecurity asked for jira stories assigned to release notes. None given. \"Oh, I can fix that, let me SSH into the server and change some stuff on the index.html\" type of cowboys.\n\nOften, they were very,very sloppy.\n40 lines of conditional if-then statements to do a password form validation when a single coherent one-line regex did the job.\n\nREST APIs? What is that, they did GETs for everything including updates which should have been proper PATCH. We don't want cowboys. Especially spaghetti cowboys.\n\nI don't want junior developers having to clean up the shlock of someone. I've seen it too many times from \"cowboy\" engineers with so-so great portfolios. Their (OPs) client is not gonna care or no but other engineers have to deal with what is created to maintain.\n\nSo again, I am fully aware of what I wrote and I can clearly see through the trees of the forest. People have been burnt so they have these guard-rails., You may not like it. But it is what it is.",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "I’m comfortable with React and have even had to pick up Angular to support legacy projects at my current workplace. I use React Typescript and Next daily at my current job and thought I was doing fine as I always meet deliverables and I’m the only FE dev on the projects I own. Then this interview happened. I knew I had some gaps in core knowledge but it’s never given me any issue in the past 6 years… this was a hard wake up call for me to not be complacent in how well things have been for sure.\n\nI enjoy development and I’ve had to wear the PM hat for projects I was the sole point of contact for at my last employer and didn’t enjoy that truly but I can definitely see your point.\n\nMaybe my issue is being able to articulate verbally the inner workings of these fundamentals or processes, still not a good look for me either way. I’m hoping I pull myself out of this slump over the weekend and hit the fundamental books hard and course correct.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "They are the imposters.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I went through the same situation you have just gone through. I have a similar background. Anyway, i came to learn that interviews really ramp up in difficulty depending on the company.\n\nWhile I don’t think you should feel bad at all - tons of people fails interviews all the time - you should be in a better position to perform for your next ones. The questions you brought up here are found in most “JavaScript interview questions” YouTube videos. That’s the thing - interviewing itself is a skill and requires its own preparation. The higher caliber the company the more interviewing needs to be prepared for. That said I think it would be nice if experience were able to speak for itself but it can’t",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "These questions have nothing to do with CS, school wouldn’t have helped you.\n\nAnyway there’s a million things to know and these don’t seem like fundamental ones. Depending on the interviewer and the few questions they ask, it’s a crapshoot",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Not being able to answer every question perfectly isn't necessary to pass an interview. It depends on the position you're applying for. They may want to see how you think or how you handle situations where you don't know something.\n\nOf course if this was for a senior position, you're screwed.\n\nBut interviewing is a skill and it takes practice. Just keep interviewing and you'll do better next time.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sometimes they want to give you a hard time. Had one session where one in the team wanted to bring in a girl with no experience that he liked and really tried to put the gut with a degree in a spot.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Imho they were pretty shit questions, so I’d be wondering if I wanted to work there.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The more you know, the more you know what you don’t know. Especially in this field. There is so much to learn and new technologies pop-up before you even read about the last one. You can’t keep up with everything. No senior developer does or should think they do. I always look for a way of thinking and problem solving in a developer. If you have that talent plus experience in whatever language, you can always learn the stack you have to work with in your daily job.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don't feel bad. I'm self-taught too, and I failed on a basic question on what the difference between a list and a tuple is.\n\nGranted, I knew what it was. I was just so intimidated by the whole 10 person panel interview, no computers anywhere, etc. It was a very surreal experience.\n\nThat and having to write 100 lines of python code on a whiteboard in front of said panel. Only to be told by their \"lead\" that they could have done it in 5 lines of python.\n\nI'm like, \"Ok, show me.\" and they didn't, cause I honestly knew you couldn't make a program to first convert binary data from a file to hexadecimal \"FF 00 AA\", then draw a window with matplotlib, display the results in one half, then display an ASCII translation in the other half.\n\nFucking dickheads.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abtdnd",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abtdnd/best_way_to_indicate_error_to_frontend/",
    "title": "Best way to indicate Error to Frontend?",
    "points": null,
    "comments": [
      {
        "comment": "Rely on proper HTTP response code. The thing I hate the most is a 200 with what you have above. It is bad for several reasons -- screws up monitoring/observability. It forces the other party to dig in deep and figure out what the problem is. If I see a 400, I don't have to go reach out to anyone. I know, I am sending something malformed. Same with a 405. I know I have access but that method is not allowed.No one is gonna do a regex on server logs to see if you have symptoms of a long-term problem. They want to do a count of 400, 401,403s, 500,502 errors.\n\nIf I get 100 400 errors, I am gonna ignore that. If I get twenty 502s in a span of 15 seconds, I want to find the root cause. So a generic message helps no one if it is wrapped in a 200 response code.\n\nFurthermore, if you provide an API contract like Swagger, they can deduct and even build test cases for that. 400? Swagger spec says I need x,y,z in this format. Oh, so I need to send M or F versus Male / Female in this field. Got it. That is why it is a 400. Swagger is useful.",
        "points": "20 points",
        "children": [
          {
            "comment": "To add to all this, RFC 7807 (Problem details for HTTP APIs) can be a good way of implementing this in a more standarised way.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Worth to mention that this is for REST apis. Graphql for instance, can give 200 on errors.",
            "points": "-1 points",
            "children": [
              {
                "comment": "No. Those response codes are part of the specification of the HTTP protocol. REST is only an architectural pattern. GraphQL is an specifixation that MAY be implemented over HTTP, and when it is it SHOULD respond with appropriate codes where applicable. https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md\n\nYou can handwave it away by saying that most GraphQL requests are OK as long as the server understood it even if the query itself resulted in errors, and most behave that way, but that's not the way things really should be.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Our APIs return 400s for \"no\" responses which is infuriating. Our APIs look to be throwing tons and tons of errors when it's just that the answer is in the negative which is actually a supported response and expected in some cases. For example, the right values are sent, the server understood the request was to validate a user and had all the info to do so, but will still return a 400 saying \"User is not valid\". Drives me nuts.",
            "points": "0 points",
            "children": [
              {
                "comment": "I actively tried to get a guy fired for proposing this very thing. He refused to accept that a 200 response with an empty body could be a reasonable response.",
                "points": "-1 points",
                "children": [
                  {
                    "comment": "I had to fight to make empty list responses not 404s at my current job.",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Well a 204 would be better but yea fuck that guy.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Quick question and I know it may sound strange. I've always been a single developer, never part of a \"shop\" as one finds common nowadays. So my question is, what does Swagger really do for developers that write their own api and know what is expected from the fullstack at all times?\n\nJust trying to justify if I should go further down the swagger rabbit hole because it has some value beyond testing apis, or just leave it be...",
                "points": "",
                "children": [
                  {
                    "comment": "Good question. For your situ probably not much. I like to have documentation or at the very least good comments on stuff because in 6 mos, who knows what you'll remember about WHY you did something in some way. Swagger can help you spot irregularities in the pattern of APIs, like inconsistent naming of paths or expected params. I wouldn't get too deep on it, but it's always good to have practice and good habits for working w others so that when you do find yourself on a team, it'll be second nature. Having good documentation prevents people from having to bug you with simple questions all the time; helps them self serve.",
                    "points": "",
                    "children": [
                      {
                        "comment": "Alright, that's fair. I like documentation and already do that to my codebase. I may circle back to swagger in the future as another testing layer.\n\nThanks for the suggestion and kind words.",
                        "points": "",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Use correct response codes, don’t just munge things together. The codes have meanings for a reason, and they’re worth using.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "No. This isn't clever. It's not creative. It's wrong.\n\nConventions exist for a reason. Follow HTTP Response conventions.\n\nThe framework I use automatically routes non-200 responses to an error handler. If you send everything as a 200, I not only have to parse the response, I now have to code for all of the dumb variations this produces.\n\nBefore I started at my current company, they had a guy who did this for several API projects. He's no longer with the company and the company is refactoring all of the APIs. Seems you can't sell an API that doesn't follow basic conventions of HTTP responses.",
        "points": "-1 points",
        "children": [
          {
            "comment": "they never said they were trying to be creative or clever. there was no need to be a snarky and talk down to someone clearly learning the ropes and asking in good faith.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "It shouldn't exist on prod but he's not asking for that. Try/catch statements exist for a reason.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Maybe tone it down a little, partner. He's not asking for something not using codes. He's just working out his reasoning on how to tackle the general idea of error handling. Obviously he is on a track that will lead to the \"ideal\" answer, as if there were such a thing, but in the end, whatever he comes up with will need to work for his specific use case.\n\nThere is no be-all-end-all solution to anything in development, whether that is programming an application, or developing for the web.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "What is the use case? As you can see a lot of people agree it's a terrible idea on a production environment, but in testing it's perfectly fine. You don't want to expose that kind of stuff to an end user. You could easily store any errors in a database for you/other devs to review and the only reason I can think of for you to want to see that in real time is because you're trying to emulate the end user.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is a decent way of handling it, assuming you're already in charge of all aspects of the frontend.\n\nProbably a good idea to work out in more detail all of the desired objectives other than just an error message handling. How's your API? Can you re-prompt the server if needed? What types of errors do you need to handle? Maybe an error router or event handler that can handle things when you scale up.\n\nJust some thoughts.\n\nedit: and status codes. my oversight.",
        "points": "-5 points",
        "children": [
          {
            "comment": "This is a decent way of handling it, assuming you're already in charge of all aspects of the frontend.\n\nIt's actually the worst way. Use HTTP status codes so you know there is an error, and what the cause of the error is. E.g. 400 vs 401 vs 500, etc.",
            "points": "5 points",
            "children": [
              {
                "comment": "I was just about to say the same thing! This is a horrible practice, use the http status codes, it's what they were literally made for.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Obviously https status codes are the primary trigger. I didn't say otherwise. But when returning an object, it is nice to have more data to work with besides simply the code.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "As others have said, you will want to also use HTTPS response status codes at a minimum.\n\nI alluded earlier to making an error router/handler and this is what you could use to handle those codes approprately.\n\nErrors are going to happen at some point. It's good to both handle them internally and write code that gracefully deprecates the situation, as well as actually indicate to the user something happened in case of utter failure. Ideally all of the code is well tested so that things don't just fall over with no obvious reasons why, but we can't always have it that way in the real world.\n\nDon't mind the angry tone some of these commenters seem to be attacking you with. They mean well.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abshvi",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1abshvi/need_advice_on_loading_database_for_webbased_game/",
    "title": "Need Advice on Loading Database for Web-Based Game",
    "points": null,
    "comments": [
      {
        "comment": "Maybe just get a cheap vps and use your db.",
        "points": "0 points",
        "children": [
          {
            "comment": "Thanks for the suggestion, although handelling a server seems like something someone needs to be knowledgeable in it, I will look into it.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Any decent web host will do for your needs. I always recommend hostinger.com as their pricing, support and service are (imho) stellar.",
        "points": "0 points",
        "children": [
          {
            "comment": "thanks for the suggestion, Im currently using Render, but this looks way cheaper. I will look into this. Thanks again!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Is front-loading a file thats 1.1 MB (my entire database) something that is usually acceptable. That way I dont need to make requests to the server for every time a user enters a name.",
        "points": "0 points",
        "children": [
          {
            "comment": "Yes it is. But make sure you load it asynchronously so you dont block the inital load of your site.\n\nIf you put your data on a CDN (make sure it is served minified+gzipped) then you dont even have to worry about serving this data.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "1MB is small to store, but is way too big to download for something web-based. And your downloaded database is out-of-date as soon as someone makes a new user or edits account info.\n\nWhy are you trying to load the whole database on the front-end? To reduce number of requests?",
        "points": "0 points",
        "children": [
          {
            "comment": "The webgame Im creating does not have any need to create user-account which is similar to dribbe game.\n\nAnd yes, the reason why I would want to load the database to the frontend is to indeed reduce the number of requests. If I do not do that, than every time a user types in their response, their response would have to be validated against the database thats in the backend. Hence there would be alot more requests being made if not loaded in the front end.\n\nThat being said, Im a n00b at this stuff so I don't even know if loading into the frontend is common practice and if making requests to the backend is even that costly. Of you have any recommendation or have experience, I'd greatly appreciate it :)",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I see, I misunderstood what you were trying to store...\n\nSounds like you're trying to build an autocomplete/list of options when you say validating the user response with the database? And the list of options is 1MB long?\n\nA few ideas come to mind:\n\nAs a different comment suggested, gzip your database (which could be a plaintext list like Wordle used) and distribute with CDN\nCache the database in local storage in the browser so you only need to download it once. Keep a last-updated time saved to check with the server if you need to download a new updated version of your database.\nAlternatively, validate using the server, but debounce requests so that you only validate once when user is done typing.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1abrr9o",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/vwsgc13beuec1.png",
    "title": "What is the technical name for these, and how do I dictate them on a SERP for my website?",
    "points": null,
    "comments": [
      {
        "comment": "Site links. Google puts them there automatically, usually only for higher authority domains.\n\nhttps://developers.google.com/search/docs/appearance/sitelinks",
        "points": "23 points",
        "children": [
          {
            "comment": "Actually, any ranking page - doesnt have to be super high authority. I love mine that say EEAT is bullshit :)",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Lol not higher authority domains but high quality sites would be nice word to use. My own site is typically new but shows like that. Searched \"batchnepal\" using different browsers and it was shown on edge, firefox and brave but not chrome lol. The site was first indexed by google in November 2023",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "https://developers.google.com/search/docs/appearance/sitelinks",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  }
]