[
  {
    "id": "t3_1bj9mtf",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj9mtf/sern_stack_with_render/",
    "title": "SERN Stack with Render",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bj9eoi",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj9eoi/looking_for_help_and_suggestions_on_my_website/",
    "title": "Looking for help and suggestions on my website",
    "points": null,
    "comments": [
      {
        "comment": "Your text is just too big for its container, use overflow\n\n.text-box h1 {\n  overflow: hidden;\n  ...\n}\n\n\nAlso your .grid-container isn't really responsive\n\nrepeat( 11, 175px)\n\n\nJust use flexbox with wrap and set the items to flex: 0 0 175px.\n\nBesides that: I don't think your personal portfolio is the right place to start coding. Your designs look solid, don't ruin that by presenting them on something that immediately raises doubt/concern.\n\nEither take more time, or get someone who knows what they're doing and is able to put your designs into code.",
        "points": "1 point",
        "children": [
          {
            "comment": "Ok thank you for your response, I appreciate your help.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "First thing I noticed? Hovering that work together button shifts the text. Keep the border consistent when hovering or use outline style instead.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj8t7b",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj8t7b/top_10_code_smells_every_engineer_should_know_to/",
    "title": "Top 10 code smells every engineer should know to improve their pull requests",
    "points": null,
    "comments": [
      {
        "comment": "You smell for this bullshit post.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I firmly disagree with the repeat code point. Just look at the most successful software project in history the Linux kernel. The kernel is full of reused code because each aspect of the kernel is its own ‘module’ where no code comes in nor leaves. The benefit here is that changes in any module cannot affect the functionality of any other module. This reduces entanglement as any entanglement is necessarily confined to its module rather than the whole project. This is the ultimate problem with DRY, entanglement now has no confines and affects the whole project. When you WET (write everything twice) complexity grows more slowly and in my opinion creates faster to run and iterate on codebases.",
        "points": "2 points",
        "children": [
          {
            "comment": "It is definitely a nuanced issue: knowing when 2 bits of code are the same because they really are logically the same operation, or just the same because at the moment they happen to have converged to have the same sequence of steps (but really represent different actions that are likely to diverge later for their own reasons).\n\nI've worked on lots of gui projects (games) with developers who definitely don't understand that difference, which is how you end up with a library used by 30 projects where a careless change breaks half of them, and the baked in tech debt to undo that mess is huge, so I definitely sympathise with sometime just repeating yourself",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Modularity is great until it isn't.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I agree with most points, but many developers are way to religious with them.\n\nDoing DRY as a default is essentially a premature optimization mistake. Yes, if you repeat something multiple times and it gets in the way of readability, by all means, make it abstract. But DRY code can be messy in of itself just due it all being generic and abstract.\n\nAs u/Inside-Ad-5943 also mentioned:\n\nThe benefit here is that changes in any module cannot affect the functionality of any other module. This reduces entanglement as any entanglement is necessarily confined to its module rather than the whole project.\n\nPlenty of times you'll be repeating some code in contexts that may change over time. And you might end up complicating things trying to achieve a generic system that works for all options, whereas just having similar code in several functions can remain there untouched.\n\nI have the same issue with enforcing method lengths. While it is generally a good idea to keep functions compact and focused. Sometimes you go over it out of necessity, and splitting it up in multiple functions becomes messier than keeping it big.\n\nSo, my point here is: While these code smell guidelines are generally good. You shouldn't just blindly implement because the linter said so. You might end up fixing the smell with something smellier.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj7qgc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj7qgc/how_does_railwayapp_price_database_usage/",
    "title": "How does Railway.app price Database usage?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bj7cy4",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/h31435nysfpc1.jpeg",
    "title": "Lol, pro.sony official website. Someone forgot to remove debug",
    "points": null,
    "comments": [
      {
        "comment": "So this change passed unit tests, integration tests, staging checks.\n\nOr there were none.",
        "points": "3 points",
        "children": [
          {
            "comment": "I mean, more so the problem is it passed code review.\n\nI can easily see why someone wouldn't write unit tests/e2e tests for this type of loading screen. I can also easily see, if you've gone fully into test automation, why UAT wouldn't pick this up.\n\nYou may argue for 100% test coverage to find this issue but even if you did write a test 9 times out of 10 the test you write is only going to verify that there is an element with the \"Loading...\" text rather than verifying that there is no other text on the page.",
            "points": "4 points",
            "children": [
              {
                "comment": "Not need for going with 100% coverage since it's 100% unrealistic. In E2E tests you can simply wait for all network requests to settle and test whether the main DOM elements are showing up and interactive. It's a standard practice in frontend testing and doesn't require much effort.\n\nCode review is the first line of defense, but people can make mistakes. This specific issue could have been caused by a misplaced `!`, which is easier to overlook compared to other types of changes.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I could not post I have to wait for a month to be able to. So Imma hijack this thread 🤖.\n\nYour thoughts about this job offer (copied from a recruiter message )\n\nKNOWLEDGE AND SKILLS • at least 5 years of experience in IT. • Sound troubleshooting skills and ability to think at a systems level. • Critical thinking, proactivity, accountability, team spirit, and availability for continuous learning are highly appreciated personal traits. • Experience of administration and configuration of Atlassian Confluence, and integration with other systems. • Experience in several aspects of the software development process, namely business analysis, software modelling and design, frontend or backend development, and risk assessment. • Experience writing technical documentation in English. • Experience in technical training or user support is considered a plus. • Knowledge of HTML, CSS, SaSS, JavaScript, jQuery, TypeScript, XML/JSON, Velocity, Soy, Groovy, Angular, React, Node.js or Java is considered a plus. • Knowledge of Scrum or Kanban is considered a plus. • Knowledge of Linux systems, Apache/Tomcat and MySQL is considered a plus. • Knowledge of Microsoft 365, SharePoint or Power Platform is considered a plus.\n\nSPECIFIC EXPERTISE Considering the specificities of the projects in which the consultant will participate 5 years of cumulated minimum specific expertise is requested: • Minimum 2 year of experience as Confluence administrator • Minimum 3 years of experience as a Frontend or Backend developer • Experience as SharePoint administrator or developer is highly valuegd",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj4ein",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj4ein/anyone_looking_for_a_project/",
    "title": "Anyone looking for a project?",
    "points": null,
    "comments": [
      {
        "comment": "Love this idea",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'm with you bro ... fullstack developer 🤟",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj3lgm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj3lgm/what_skills_do_i_need_to_host_apps_from_an/",
    "title": "What skills do I need to host apps from an unmanaged VPS?",
    "points": null,
    "comments": [
      {
        "comment": "Imagine an apartment building. You share resources (CPU, RAM) with other tenants (websites). It's easy to set up and manage, but offers limited control and customization.\n\nNow, think of it as your own apartment within a building. You have a dedicated portion of resources and more control over configuration and it offers greater flexibility.\n\ncPanel can simplify VPS management, but it won't be exactly the same as shared hosting cPanels. With a VPS cPanel, you'll still have some control panel features, but you need to handle some server-level tasks like software installation or security updates that were handled automatically in shared hosting.\n\nI read \"The Linux Command Line\" by William Shotts and took some courses on Coursera, Udemy, and edX to learn Linux basics and server administration several years ago. So you may want to check that.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Patience and an ability to read will accomplish anything, depending on the amount of time you have for it. \n\nMost server stuff you need is easy to install. Learning configuration settings will take some time. Add more time for learning the basics of setting up and using Linux. \n\nA person of reasonable intelligence should be able to accomplish it within a weekend, depending on their base experience. \n\nJust give it a shot and post your questions when you get stuck.",
        "points": "0 points",
        "children": [
          {
            "comment": "If you use cpanel, it’s likely to be the same experience, most shared hosts use that.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Docker is the most important skill and your best friend here",
        "points": "-3 points",
        "children": [
          {
            "comment": "Sure, advice the most non-intuitive tool to a beginer ...",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You'll need some linux/cli skills, fortunately there are hundreds of tutorials out there to whip up a webserver, database and what not on a VPS.\n\nIt's a one time thing you'll need to do and - in theory - you wouldn't need to touch it again",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj3bmn",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj3bmn/is_there_a_consensus_on_the_best_current_way_to/",
    "title": "Is there a consensus on the \"best\" current way to incorporate a pre-rendered animation that includes an alpha channel?",
    "points": null,
    "comments": [
      {
        "comment": "GSAP and your standard rendered video file(s) should allow scrubbing etc based on mouseover, scroll, etc.\nhttps://gsap.com/community/forums/topic/25730-scrub-through-video-smoothly-scrolltrigger/",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you can animate an svg you'll probably save a lot of filesize",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Look into Lottie",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj3230",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj3230/django_js_career_development/",
    "title": "Django - JS - Career Development",
    "points": null,
    "comments": [
      {
        "comment": "College doesn’t really prepare you for writing code (vs having raw curiosity and patience), but the 20 years of experience is critical. \n\nIt sounds like you’re a decent generalist. I think you should lean into that. Instead of worrying that it’s a foriegn system, accept that it’s a well architected codebase that you can learn from.\n\nYou probably won’t need to know much about mysql other than writing sql. That’s not to difficult to learn. The framework should abstract it for you so you would need to learn its api to build the back end. Only in weird cases where the framework is can’t do that you need or hits a performance bottleneck do you need to do stuff that’s mysql specific. I’ve had to install and configure mysql, otherwise have spent very little time in my career dealing directly with the database, other than custom sql queries or checking the logs for slow queries. SQL is very valuable though. I was able to bounce between pulling stuff from mysql and sql server no problem. \n\nIn the long run, keep an eye on how these web systems are evolving. I’m a Drupal dev, so similar to Django in a php environment. Both camps have to confront the rising tide of JavaScript frameworks. Do we develop native capabilities in our platforms, or focus on integrations?  I can say with php we have node like event loops and web worker servers on the horizon that will be a very interesting response to where the new ones have an advantage.\n\nGaining a perspective on where the future is going will help you steer the organization towards the right decisions. See if they’ll send you to conferences so you can network with the experts. \n\nI can’t tell you what’s worth learning, but I can tell you that whatever the org needs is worth learning about. I rarely front load learning, but I try to really understand things as I work through them. I do experiments often for fun and curiosity and that leads me to reading docs in my free time. I made a browser extension over the weekend and came back on Monday and gave an overview of how to do it and ideas we could offer our clients. I know I’m not an expert but I can gauge my capability from my progress and feel confident in trying to implement something real and learning as I go.    UX and IA are complementary skills. You don’t need to become a design expert or do hardcore taxonomy work, but the basics will help you ask good questions and check the idea before implementing. It helps when devs can participate in the discussion on how to structure things and organize the front end. \n\nThe fact that you’re asking how to advance means you’re the kind of person who will advance.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "For Django there is excellent documentation and books like Two Scoops of Django and newer by the same author.\n\nFrontend JS can be split into two categories - vanilla/jQuery scripting, widgets and the second SPA JS frameworks/npm which is a way bigger and it own thing. You can have a dashboard made with Django with a bit of JS and frontend widgets but you can also have Django/Flask/FastAPI exposing a REST API for a dashboard written in Vue.js/Ember.js and other SPA JS frameworks.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj2ij7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj2ij7/good_technical_interview_questions_for_web_devs/",
    "title": "Good Technical Interview Questions for Web Devs?",
    "points": null,
    "comments": [
      {
        "comment": "What's the difference between =, ==, and ===?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Here is a good catalog of Web Dev interview questions (Angular included)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj158v",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj158v/free_programming_courses_recommendations/",
    "title": "free programming courses recommendations?",
    "points": null,
    "comments": [
      {
        "comment": "I can’t remember the last time I saw a dev course with a completion certificate that pulled much weight. I honestly have found great tutorials on YouTube that helped me prep for both my AWS and Terraform cert exams",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bj0x47",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj0x47/getting_started_with_a_complex_project_to_clone/",
    "title": "Getting started with a complex project to clone",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bj0ckt",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bj0ckt/google_business_profile_api/",
    "title": "Google Business Profile API",
    "points": null,
    "comments": [
      {
        "comment": "This may not be helpful, but I’m in the exact same boat. I had to fill out a request (Google form) to get the API enabled. The client said they got an email it was enabled, and I can fetch their business info in the playground. When I try to access the reviews it says the api has not been enabled for a gcp project that nobody has any idea about. They showed me all the IDs of their projects, none of them matched their business profile.\n\nI sent a support ticket to Google and they passive aggressively told me to read the docs and to fill out the form correctly. I mean I thought I did, but I guess not. I certainly didn’t put that gcp project ID on there so 🤷‍♂️.\n\nWanted to commiserate with you, because it’s been a total drag.",
        "points": "0 points",
        "children": [
          {
            "comment": "so you do have to fill out the form then? Thanks- I appreciate reply, this is total pain.",
            "points": "0 points",
            "children": [
              {
                "comment": "Yeah you do have to fill out the form. It’s a 4ish page Google form (as in the product Google form) where they ask you how you intend to use the information, etc. It seems wild in today’s age that you’d need to do this to access reviews, but yeah. I think this enables the api that can be misused, so I assume that’s why it’s needed. I wish the reviews were not part of this category.\n\nI apparently filled it out incorrectly, even though there are not specific instructions (that I could find) for a successful submission.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Can't you create wordpress plugin for that? Authenticating OAuth2 is not that hard in PHP.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bizssm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bizssm/getting_an_intership/",
    "title": "Getting an intership",
    "points": null,
    "comments": [
      {
        "comment": "Find more local companies and find someone’s direct email. Email them. I thought it was bs at first but that’s how I ended up landing my internship and ultimately my job. (I’m part time and will be full time in May after graduation) it’s a small local firm and I happened to directly email the “yes man”",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Recently, I came across this really interesting article Web Development Services talking about the newest stuff happening in web development. Maybe it could help, they teaches from basic stuff like HTML and CSS.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Look at volunteer-based Nonprofits in your area, especially those you may already have some relationship with OR feel passionate about their mission.\n\nMany are desperately in need of free/low cost web help.\n\nThey may not advertise the internships on the sites you are looking at, but would welcome a direct inquiry via their volunteer intake process.\n\nSmaller organizations (commercial or nonprofit) would have more flexibility to create an internship if a qualified, eager candidate presented themself.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bizeua",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bizeua/does_web_hosting_technology_improve_over_time/",
    "title": "Does web hosting technology improve over time like other technologies?",
    "points": null,
    "comments": [
      {
        "comment": "Push towards using Smarthost and dedicated outbound email services for improved email deliverability, no more blacklisting!\nHigher cpu IPC, core counts, Ram means we can get far more performance/accounts per server/rackspace/watt of energy\nSSD’s were a game changer for performance and reliability\nCloudlinux and ability to restrict resources has reduced noisy neighbours to some degree on shared hosting\nCDN’s becoming mainstream is a plus\nSSL Certs are practically free & automatic\nCPanel/whmcs being bought by venture capitalists and screwing over the industry has allowed new competitors\n\nOtherwise over the past 15 years in the industry it’s pretty much unchanged. Still php and MySQL for the most part.",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Other than VPS and cloud, web hosting has been a solved problem since the mid-90s.",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Cloud hosing replaced owning your own server. JS application servers are taking over apache. Vite/Vercel is a radically different type of back end than a shared host.",
        "points": "4 points",
        "children": [
          {
            "comment": "JS application servers are taking over apache\n\nNow that's a name I haven't heard in a while",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Cloud hosing replaced owning your own server.\n\nLOL yeah, got it",
            "points": "-10 points",
            "children": [
              {
                "comment": "Facts hurt some kids I guess.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Only in VPS world, shared hosting apache is king!\n\nI would say Nginx is overtaking apache is more accurate",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Something important to keep in mind is that \"web hosting\" spans the gamut from \"I run a food truck and want to build myself a website\" to \"We are Google\". The biggest changes have been on the higher end, because that's where the money is. Plus, frankly, hosting has been probably the easiest part of the whole shebang for the small end.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Well, in the world of HTTP servers in the past 30 years we had two major shifts: in 1995 away from NCSA HTTP toward Apache, then from 2004 toward nginx.\n\nApache is still used a lot in PHP world, but the speed and scalability gains you get from nginx are massive.\n\nEven if your web server is not based on nginx, maybe is an Apache with PHP, a rails or node.js app, chances are you’re using nginx as a reverse proxy.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biz4a6",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biz4a6/anyone_else_contacted_by_recruiters/",
    "title": "Anyone else contacted by recruiters?",
    "points": null,
    "comments": [
      {
        "comment": "Make sure they're legit. I've worked with firms like this, they never asked for the upfront fee.",
        "points": "9 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Search for Job Scam on r/Scams - A LOT of examples like yours and how many all those people lost.",
        "points": "5 points",
        "children": [
          {
            "comment": "Oh I just looked it up and yea seems like a scam lol",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Sounds like a scam. That's not a recruiter first of all. This is an industry that will prey upon people desperate for a developer role, especially people just starting out. You don't need a training program if you're a developer. They're just selling you something. That's not what a recruiter does. You can literally train yourself for what they'll provide you. Probably just PDFs with coding challenges and interview questions. You can make up your own questions, find some online, or use AI to generate some.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Want to invest in tulips?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds pretty scammy. Most recruiters who have reached out to me are for interviews with their clients as they are trying to fill roles not make tutorial sales.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That doesn’t make sense. Recruiters make money when they place people. They should pay people to be on standby and take the job they offer, otherwise they’re basically charging a fee for submitting an application. If you pay them and they can’t find you a job, what service are they providing you?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That’s not a recruiter that’s a scammer.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Scam",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I am looking for freelance projects in web/mobile app and data engineering domain. Any leads would be appreciated.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biy9lk",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biy9lk/session_variables_login_data/",
    "title": "Session variables & login data",
    "points": null,
    "comments": [
      {
        "comment": "I would think it is fine if on the login/register page, that you reference and link to the policy page, and state your cookie policy. Shouldn't be a problem. You are notifying users, it's public information that you are making available about how you use cookies, and so forth. It is expected that login/auth cookies are used for this purpose.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bixziu",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bixziu/im_a_developerkinda/",
    "title": "I’m a developer…kinda?",
    "points": null,
    "comments": [
      {
        "comment": "Great job on getting where you've gotten so far. I would personally recommend continuing. The backend, at least in my opinion, is easier than the frontend - you spend less time stuck tweaking tiny details and more time making progress towards your end goal. I would recommend learning a framework like Flask (python) or Rails (Ruby). You can get up and running pretty quickly with one of these. And there are so many resources online to consult.\n\nThen you'll have to learn how to deploy your app which is a whole different beast. But if you're considering spending $10,000 on a developer, you could definitely afford something like Heroku which makes deploying quite quick and simple with minimal learning.",
        "points": "43 points",
        "children": [
          {
            "comment": "The backend, at least in my opinion, is easier than the frontend\n\nAs a backend developer;\n\n\"Never before have I been so offended by something I one hundred percent agree with\"",
            "points": "21 points",
            "children": [
              {
                "comment": "I chuckled, but I'm not sure I agree 100%. I typically spend more time tweaking shit on the front end, but the back end is where a major mistake can spell serious disaster.",
                "points": "4 points",
                "children": [
                  {
                    "comment": "The thing is; there is a \"right way\" in backend development, in fact, sometimes there are multiple right ways. But you pretty much have a general idea of the code you need to write even before sitting down to work, I myself actually hear database tables, columns and relationships while a client is telling me what they need. And 50% of the work is already done at that point.\n\nThe front end however, especially if you're also doing the design.. There are many wrong ways, and not as many right ways to do the job. Obviously downloading a template and editing html tags, changing colors etc. is pretty easy, but I wouldn't consider that as frontend \"development\". Plus when you mess something up, people actually \"see it\". On backend you have the luxury of being as messy as you want. Not that you should, but you can.\n\nAnd I won't even get into cross browser CSS compatibility/responsiveness stuff. Even thinking about responsiveness is stressing me out lol",
                    "points": "8 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Maybe I meant psychologically easier. Even though a tiny mistake in the backend can have catastrophic consequences, I find it a lot more pleasant to work on.",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "True, you do have to be careful. The backend is my favourite part of the stack too, it's easier to write clean code that can be automatically tested in the backend",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "First off, thanks❤️\n\nSecond, could you give me a little more info for the resources on flask and rails? I was taking some courses, but I keep running into outdated material that there is no support for the outdated differences. I’d really like a full stack tutor at this point honestly, given how my brain works.",
            "points": "2 points",
            "children": [
              {
                "comment": "This looks pretty good for Rails. I may have used this one for Flask back in the day.\n\nFeel free to message me with any questions. I'm working full time on my own project but I'm always happy to help.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I'm taking a course specifically for Python and Flask that includes deployment to Heroku on Codecademy, you should check that out it's been fantastic.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "What did u learn in terms of front end?\n\nIf you learned html, css, and JavaScript you could probably pick up NodeJS / ExpressJS pretty quickly!\n\nIf you also learned a framework on top of html css and js. For example react, angular, vue, some of them offer serverless architecture. I’m a full stack, and know for a fact react has nextjs which is solid, then angular has angular universal. I’ve never tried the latter one angular universal, but I love angular in general so I doubt it’s bad.\n\nMy opinion tho, regardless would be to pick up NodeJS, if u learned a framework serverless approach could probably get you to where u want to be in a job board app / site, but if you picked up a framework and are comfortable enough with front end, that means you’ve got the skills to be a great experienced engineer. You could easily start building aspects of your backend in a month or two. You might need to re write some stuff once your more comfy but you’ll be good, and this is by far the best approach in my opinion honestly.\n\nYou’ve got the mindset of a good engineer, and have incredible resilience if you learned all this while working a full time job.\n\nHere’s what you do:\n\nLearn NodeJS — it’s litterally JavaScript and you just need to learn backend themed stuff. Preferably use ExpressJS as it makes creating endpoints and handling the more raw NodeJS stuff much more cleanly.\n\nOnce your good on this, maybe play around with socket.io you probably won’t need this in your main app, maybe you will but idk enough about job board development to say. However socket will let you mess around with the backend more freely teaching g you stuff while you learn. This is what helped me at least at the time.\n\nOnce you got those things, pick up a database. Again not a job board expert, but I’d play it safe and just learn MySQL / MariaDB. You can use ui based platforms like phpmyadmin, and build tables / databases on that platform even on a NodeJS app if you wanted.\n\nAlternatively, use an ORM for MySQL, sequelize is really good, and will basically just have you writing classes, methods and models all in JavaScript or typescript, for your database stuff. Still good to know MySQL to actually make something workable ofc.\n\nYou’ll probably want to get knowledgeable on some of the common types of backend logic. Things such as authentication, endpoints, controllers, routing, http, authorization, middleware, and environmental stuff like npm and json.\n\nSounds hard, but keep in mind all of this stuff will be written in JavaScript. If your comfortable with JavaScript it’ll be similar to an extent. Sure you’ll need to learn more stuff, but it’s so worth it in the end when u can efficiently and confidently build full stack apps.\n\nThink about it, if you’re a full stack developer for the web, you can most likely with enough time and effort build anything you can imagine.\n\nI’m self taught too, but I did it in college when I had far more time to just sit around and code. Worth it too cause even with no experience in a office environment it landed me a awesome mid level dev role!\n\nIdk how much you like ur current job, but learning backend will open a lot of doors and opportunities for you in time!\n\nSorry if this was long:\n\nShort Version.\n\nLearn NodeJS, you probably learned JavaScript if your comfortable enough with / in front end development, which means you could learn NodeJS just as easily as its litterally js too, you just need to learn backend algorithms and architecture at this point.",
        "points": "27 points",
        "children": [
          {
            "comment": "Don’t apologize for the length, that’s a lot of good information! Thanks so much🙃. I’ve been thinking of giving node another chance",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Yep, u/pyr00t is right. The terms \"back end\" and \"front end\" have been largely obfuscated with modern frameworks. I'm absolutely no back end developer, but I can build an app with React.js. Might not be enterprise production ready, but it'd be functional!\n\nLearn very basic server setup like Apache and Nginx so you understand the very basic nuts and bolts of what a website/app needs to be hosted on the internet. Then deploying with a service like Meteor is a breeze.\n\nGreat job getting this far and best of luck going forward!",
            "points": "0 points",
            "children": [
              {
                "comment": "Off topic, but if u know as you sya apache and ngnix, will this allow me to deploy a website on the Internet without relying on heroku, firebase, render and such services? Is it free also or I need to buy domain and all of the ohter stuff which I guess for example render does for me.",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "10k for a backend ? bro don’t scam yourself you are so close and the quality of the backend for 10k is a complete dice roll on a developer,",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Did you do any evaluation on the market for your product? Is it worth investing this money in?\n\nIt's great that you went this far learning and developing it, I think you should continue. There are services like Google Firebase which can provide you a backend to complete your MVP, even if you hire someone is worth looking at these services instead of building everything from scratch.\n\nIf you're burn out, take some time to stop and look at what you accomplished, what's missing, review the product validation and exactly what needs to be done to have a functional prototype, put those tasks in a trello board or some similar service. This will help you decide if it's worth investing more of your time in the development or if it's better to hire someone (remember you'll also need to plan and invest $$$ in marketing).",
        "points": "5 points",
        "children": [
          {
            "comment": "I’ve curated this idea in my mind for the last 3 years. And I have thrown this idea to people in the industry that I’m targeting and made adjustments based on their reactions to my future product. So I’m absolutely dedicated to get it started, even if it ends up gloriously burns to the ground lol.\n\nI think at the point I just need a human guiding me because I get to flustered by myself. But I do need to get into fire base, since it seems like the best option",
            "points": "1 point",
            "children": [
              {
                "comment": "Take your time to plan this last mile, then you can have a conscious decision on how to proceed.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Firebase is not the best option. Choose a proper backend framework like Rails or Django or Laravel",
                "points": "-5 points",
                "children": [
                  {
                    "comment": "Can you back that up? I bet you’re missing the point of firebase",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm a 25 year old Aussie with a bachelor's in computer science.\n\nI've got some experience with back end and am looking to get in on projects for my portfolio.\n\nPerhaps we can work on each other's projects for mutual gain.\n\nSend me an email @ lockton.sam@gmail.com",
        "points": "7 points",
        "children": [
          {
            "comment": "\"Opportunities are everywhere if you don't hesitate to knock the doors\" I appreciate this lol",
            "points": "12 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Me too. Send me a dm",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You've done the hard part, you've learned how to code. I don't know your financial situation but if you do want to continue to learn how to do backend work:\n\nOnce you can code in one language you can code in any language it's just a matter of getting there.\n\nIt seems like a daunting task and it doesn't help that you have people in the replies telling you that you need to learn a bunch of acronyms (you don't). if you pick up a beginner friendly framework, most of the database management stuff is all abstracted out and you'll pick out the concept of MVC through practice. Models (object) are displayed by views (pages) which you can interact with using a controller (backend logic).\n\nRealistically you can learn most frameworks within a couple of weeks, at least we'll enough to get the basics down. I'd recommend picking up a framework such as django or laravel and following a comprehensive tutorial through to the end (it helps to use github commits for each step to make it easier to refer back to the changes in the future). The first steps will be the hardest but hopefully by the end you'll have created an application where models reference eachother and users with different roles can create, update, delete etc models. Take notes throughout and refer back to those.\n\nBefore trying to transfer what you learn from tutorials to your app make sure you write down what the objects are, what fields they have, and their relationships. It makes it a lot easier if you get those correct from the beginning.\n\nThe biggest hurdle I faced when building my first production-ready app was setting up the hosting environments. I'd coded the whole thing, it ran on my local, but I'd never done any system administration stuff in the past, or any dns stuff. I was probably being dumb but that may be something to look out for.\n\nIf you don't have money to commit to marketing this project, or a solid plan for your return on investment then I wouldn't recommend hiring a developer. Don't hire an agency, especially not an overseas one if you don't have at least one staff member on board to clear up their mistakes and maintain the codebase. Code needs to be updated regularly, something that may work one day can (and will) suddenly stop working if you don't touch your code.\n\nI spend 80% of my work days fixing code, adding features that were missing or lost in translation, fixing massive security vulnerabilities, maintaining and updating code that was sent to our clients (usually) by overseas agencies. They're cheaper so they're more attractive but they've often got so many projects on the go that by the time you notice the problems, they'll have moved on to somebody else's project. You might get a back and forth going about fixes but they'll slow down their replies and will become unhelpful. They also don't usually follow the latest coding conventions, and with a couple nasty cases Ive seen, they'd embedded their own CMS within a project which they \"owned the distibution rights to\". Hiring Vietnamese developers will get you your MVP for cheap but you'll probably need a complete rewrite down the line and it'll never match your requirements exactly. Agencies probably won't use any of your frontend code either because they'll have their own preferred stack.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You’ll end up trading one set of problems for another. I have lived through all of this for years. It will cost you way more than 10k, and it will probably not be the product you wanted it to be. Do as much as you can for as long as you can.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Mate use Google Firebase for the backend implementation. You can do it yourself then",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "GPT4 is your personal coding teacher. Ask away.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If all you want is an mvp, do it yourself. You will spend a lot less time describing what you want. With chatGPT, it can help you crack out an mvp.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "People over at r/overemployed post job boards on a weekly basis. Jobs have been inundated with automated applications.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'm a self taught front-ender and mess around with hobby projects, and I often use Google sheets as a makeshift back end. It's not stable enough for commercial projects but it can get you to a basic MVP that you can get in the hands of users and test out your idea.\n\nThis library has been super helpful in working with the sheets API: https://www.npmjs.com/package/google-spreadsheet",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'd recommend looking into The Odin Project to learn more about backend. It also teaches you about the front-end, but you could probably just skim that I'd you're already comfortable with it",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Send me a DM, I wouldn’t mind adding another project to my portfolio, depending on the requirements. Free of charge 🎉",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hey, I am also a developer! Would be interested on collaborating - sent you a dm!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Why make another job board?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hi there, sent you a DM. Think I may have what you're looking for.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Try next.js and Prisma using postgres db, running on vercel. You won't have to worry about infrastructure much, and next.js makes it easy to work on frontend and backend together (if you like React). There's plenty of starter projects that will get most of it set up.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is it an option to create your backend with a BaaS for the time being and having at least an mvp. Supabase or even firebase is pretty easy to pick up for a front ender.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Developer turned PM here.\n\nAsk yourself what the goal really is. A lot of decent answers here from developers to use a certain framework, database or do a course in something. Those are all decent solutions if your aim is to be a developer.\n\nIf however your aim is to build an MVP and raise money on the back of it, then look for a easiest fastest solution that will enable you to create just that.\n\nTry no-code/low-code stuff like webflow or similar, experiment with airtable. Firebase can also decent and fast to implement but always try searching for a bear minimum that solves 80% of your problem rather that finding comprehensive solutions or hiring people to do it for you. Developers love solving problems so we often create them for ourselves :)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Use Claude-3 Opus.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you know front end you can use firebase for a (mostly) back end free development. Just be sure to follow the docs since there are important security issues to take care of It has auth and db ready out of the box",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "kit.svelte.dev",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Use AI to walk you through the process, and generate some starter code. I can't believe I'm suggesting this because you really need to know what youre doing to make it work.... However you did say you were comfortable with front end. So you should be ok. Get a ChatGPT account for $20 a month and tell it what you want. Even if it doesn't generate good code it will absolutely help you understand. It is like having an expert at your beck and call 24 hours a day.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It all depends on your project and goals. You might be able to make your site relatively easy in Wordpress or it might be an ambitious project that would cost way more than $10k.\n\nThere is so many details missing that its hard to determine what you really need to",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Learning backend is not a quick task if you want to do it the proper way. You'll need to understand concepts like MVC, REST APIs, SQL or NoSQL, database design, ORMs, CMS, config and env files, classes, routing, middleware, authentication, validation, exception handling, redirects, http status codes, sql injection and xss, and lots of other stuff. The good news is that most of these things are the same things you'll need to know for most backend languages/frameworks. Start with simple todo list style projects and keep adding to them as you learn more.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I love the questions am I a developer yet there's people out that that know 3 words of german but claim they speak it fluently lol.",
        "points": "-1 points",
        "children": [
          {
            "comment": "I didn’t understand a word you wrote",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "10K is way too much for an MVP in my experience. 🙈 Especially for something like a job board. I’m sure its not your run of the mill product but still agencies tend to over charge! Im looking for clients right now so feel free to check out villageapp.ai",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "A little tip: Hire from professional and legit software companies from countries like Pakistan, India, Bangladesh etc., it will cost you way less than what you’d get in first world countries. For instance, if you go with this project, you can easily find a company to do it for around $4-8k or even less than that. Btw I’m also a software developer, so if you need any more help, feel free to ask and I would love to do so.",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hire me I will show you how to avoid writing backend as much as possible :p\n\nThe frontend/backend nowadays is not so clear when working with server-side frontends like next.js.\n\nThere are also infra services like supabase, that do things like user session management, so you only have to model your business specific data, without writing any code. Designing DB requires some knowledge so i'd recommend you to start your backend journey from here.\n\nAll depends on what are you building, so if you need any guidance or are looking for someone to team up with, DM me 👼",
        "points": "-5 points",
        "children": [
          {
            "comment": "Based on what I’m building, it’ll have to be code heavy unfortunately. If it wasn’t, I’d just use Wordpress lol",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "DM me I'll do free for you.\n\nBtw this is what I'm currently working on, we can exchange idea later https://programx.pro",
        "points": "-8 points",
        "children": [
          {
            "comment": "",
            "points": "",
            "children": [
              {
                "comment": "Yeah i just on it one day, will continue working on it. Its from one design.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": true
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bixus7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bixus7/user_tracking_for_load_limiting_game_development/",
    "title": "User tracking for load limiting. ( game development.",
    "points": null,
    "comments": [
      {
        "comment": "If, you meant session cookies, you don't need to show notification about it to user. Because it is essential. The moment you store Ip or any extra activity, you need to show banner. Of course that is only required for EU users.",
        "points": "0 points",
        "children": [
          {
            "comment": "I will say the requirement to disclose that seems so odd.\n\n\"Hey, my name is brendenn.\"\n\n\"Nice to meet you. Do you give me permission to remember your name?\"\n\nAtleast that's how I see it. Odd.",
            "points": "0 points",
            "children": [
              {
                "comment": "At first it seems odd but when you think about it, if it is used for enchancing UX or offering targeted AD, it is better for user. I prefer to see related ads then random shits.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Don't be afraid of success.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bix7ye",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bix7ye/french_youtube_channel_about_pure_css/",
    "title": "French youtube channel about Pure CSS 🇫🇷",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1biws4a",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biws4a/api_design_for_serving_data_to_a_react_view_with/",
    "title": "API Design for serving data to a React View with many components",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1biwmf5",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biwmf5/website_content_question/",
    "title": "Website content question",
    "points": null,
    "comments": [
      {
        "comment": "WordPress sounds right for your use case. Basically yes, it uses a combination of database and server storage for things like images or other media. The content is stored in the database and used to dynamically render and serve the webpages. There is also a user/admin login with various degrees of authentication and control/permissions to manage the content and media.",
        "points": "5 points",
        "children": [
          {
            "comment": "Thanks for the answer",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biwexp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biwexp/which_team_are_you_on/",
    "title": "Which team are you on?",
    "points": null,
    "comments": [
      {
        "comment": "None of the above.\n\nI use the PC name (bernard)",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I had to use 0.0.0.0 once, but otherwise I'm on team 127.0.0.1",
        "points": "2 points",
        "children": [
          {
            "comment": "I think the question is what you type in the browser to access the locally running application, and not what you expose the app to. 0.0.0.0 all the way, because it doesnt do harm in the local network and allows you to access the app from any device in that network.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The stack I use just automatically appends to the hosts file so anything becomes [folder-name].test",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "folder-name.test",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Or how about:\nlocal.real-company-domain.com\nand for feature branch\nlocal.jira234-feature.real-company-domain.com\n\nLook dnsmasq.",
        "points": "2 points",
        "children": [
          {
            "comment": "This. I've got a shortcut to C:\\Windows\\System32\\drivers\\etc\\hosts on my desktop. Any new site I'm working on I'll just add to the hosts file with the local subdomain and map to 127.0.0.1. Means that I can't use DNS over HTTPS though, but whatever.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "That sounds like a great idea for testing out things that require SSL with a self signed cert",
            "points": "1 point",
            "children": [
              {
                "comment": "ngrok, does exactly that",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "You can do this by adding a line to /etc/hosts on linux as well",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "0.0.0.0 because docker",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "none i use a custom domain that doesnt exist using my hosts file. i even have it working with a fake self signed ssl",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "www.mysite.internal",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "IPv6 is fastest to type, so I roll with ::1",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biw6v1",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biw6v1/looking_for_a_cheap_domain_name_registrar/",
    "title": "looking for a cheap domain name registrar",
    "points": null,
    "comments": [
      {
        "comment": "Cloudflare, porkpun, Namecheap.\n\nThe search feature is your friend, godaddy is not.",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You won't get cheaper than cloudflare. They offer domains at cost.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Literally anybody but GoDaddy. Namecheap and Cloudflare are my favorites.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We are going with Easyname and World4You.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biw2ve",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biw2ve/not_sure_if_right_sub_pls_delete_if_not_as_a/",
    "title": "Not sure if right sub pls delete if not: As a journalist I'd like to email hundreds of organizations and municipalities communications departments and ask them to include our new news org in their press mailing list. Can I do that without getting blacklisted by mail providers?",
    "points": null,
    "comments": [
      {
        "comment": "You're misunderstanding how the whole process works.\n\nCommunications departments don't send out mailing lists to every journalist they know of. They send press releases to a small number of organizations that maintain them; then those orgs send the presser out to the journalists.\n\nYou can subscribe to the press releases directly.",
        "points": "2 points",
        "children": [
          {
            "comment": "Here that workflow only applies to some medium to big orgs, mainly companies. Municipalities and smaller orgs have to be contacted directly. Thanks for the reply.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I use instantly.ai for cold email outreach. It comes with an email warmup tool that will help build trust on your new domain before sending out emails. It integrates directly with Google Workspace. You'd still only want to send 30-50 emails a day to avoid spam.",
        "points": "1 point",
        "children": [
          {
            "comment": "Will check it out, thanks!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biv7gz",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biv7gz/switch_from_wordpressorg_site_to_a_custom_site/",
    "title": "Switch from Wordpress.org site to a custom site?",
    "points": null,
    "comments": [
      {
        "comment": "What are the challenges youre trying to solve? I cant imagine features that cant be added via custom php development.",
        "points": "2 points",
        "children": [
          {
            "comment": "something like a comic reader",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I would put money on the feature you want is able to be developed in wordpress. It's very customizable even if a theme doesn't come out of the box with what you need. If you do decide to transfer, there won't be an easy way to transfer content and you will of course lose a great backend content management system. Depends on your goals and need though.",
        "points": "1 point",
        "children": [
          {
            "comment": "okay, thanks",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Its probably faster to build your own framework and copy/paste the html/js and create the CSS yourself.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can get a custom theme developed to incorporate features you need. It may be cost prohibitive, but it is likely very possible.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biuv17",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biuv17/best_laptop_for_programming_web/",
    "title": "Best Laptop for Programming (Web)",
    "points": null,
    "comments": [
      {
        "comment": "I was anti-Mac until the M1 came out and blew everything else out of the water when it comes to laptops. I have an M1 Pro MBP with (i think) 16gb RAM, and most of my work (mostly frontend) is completely fine on it. I'd probably recommend a step up in RAM from that, but I haven't had any catastrophic issues so far.",
        "points": "8 points",
        "children": [
          {
            "comment": "I have the M1 13 and I’ve never even thought about a fan noise since lmao",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I had been a diehard windows user my entire life.\n\nLast year, I purchased a Macbook, and I cannot stress how superior it is to anything Windows I could have gotten in the same price range.\n\nIt boils down to three things:\n1. BATTERY LIFE! Dude, the battery life on these things is unbelievable compared to any windows device of comparable quality. You might think that it doesn't matter too much to you, but getting in a full days work without charging is an absolute game changer.\n\nDev environment on mac just seems to work. Windows has WSL these days and that's a massive improvement, but there is still at times a strange disconnect that is annoying to work with. This isn't as important as maybe other people say, but it is a nice QOL improvement\n\nScreen quality. I do some design work, I want to know how my sites look. Macs have the best screens.\n\nNote: I use a Windows desktop for work and personal stuff and when I need to do something graphically intensive (blender). WSL works just fine and I haven't had issues with that forever now.",
        "points": "9 points",
        "children": [
          {
            "comment": "Also just quiet. For how powerful it is it’s impressive how quiet it is.",
            "points": "5 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It does justify it in my opinion. If you can pay it, get a Mac. There’s no competition quality wise. There’s a reason most developers use it.",
        "points": "10 points",
        "children": [
          {
            "comment": "Apple Silicon battery life is INSANE.",
            "points": "3 points",
            "children": [
              {
                "comment": "I still can’t believe it lol. Today I worked on battery from 9am to like 8pm and was at 60%??? Like wtf are they putting in these",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "You mean most graphic designers, not developers. Quality wise GNU/Linux beats MacOS hands down.",
            "points": "-2 points",
            "children": [
              {
                "comment": "You’re getting downvoted, but you’re right. I’ll take a Linux distro with a window manager over Mac any day.\n\nWith a proper tiling window manager I’m fast as fuck boiiii. I’ve tried using window managers on Mac and they all suck.\n\nHowever, if I were using design applications frequently I would choose Mac.",
                "points": "3 points",
                "children": [
                  {
                    "comment": "Whats a proper tiling window manager and how does it make increase your productivity?",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Sure thing 😂",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "But in which paramethers it beats Windows",
            "points": "0 points",
            "children": [
              {
                "comment": "you want your dev environment to be as close to production as possible. there are a lot of things that are different about windows relatively to macOS compared to linux. tooling is usually be default designed to run on mac, whereas with windows you'll either need to jump through some hoops if it's even possible to run what you need in a reasonable manner.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Get whatever you feel comfortable on. Mac, Windows, & Linux are all common.\n\nAs far as build quality, mac and thinkpads are up there. thinkpads are more durable.\n\nUltimately, its your decision.\n\nIf youre going to also be doing \"design\" apple is a good choice. if youre not, and your moving around alot: thinkpads are durable.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "MacBooks are great laptops. That being said, if you go that route, one snag you're going to hit with your requirements is that the external display support (i.e. how many external displays you can connect) is arbitrarily limited on the new Apple silicon MacBooks, based on which chip they have. For example, if you want a MacBook Pro that supports three external displays, you have to get either an M2 Max or an M3 Max model. There are ways to get around this, but they come with compromises.",
        "points": "2 points",
        "children": [
          {
            "comment": "I ended up getting a 49” widescreen monitor to assist my MacBook. Expensive, but a quality investment.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "3+ monitors all at once? What kind of workflow do you have? Got a pic?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Dell XPSs are really well built. Of course they get quite expensive as well but you will get one for less than 2k I think. Docking stations are available but kind of expensive as well",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'm not a fan of Mac OS, but I'm going to throw out another vote for MacBook. Among the numerous other reasons listed. I specifically vote this way because of IOS device simulation. This allows you to test your site and ensure it is working in Safari / WebKit. Although development hacks for different browsers have been reduced greatly, I still encounter minor problems with WebKit and it's nice to be able to test it directly.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There is no wrong answer. My opinion is that best is a Unix based os ~ Mac or Linux ~ then a windows os.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Dont get a dell",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "lenovo thinkpad t14s",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There is no one best laptop or even a group of laptops. It's a matter of model by model basis:\n\nRAM: at minimum 16GB, but 32GB recommended\nCPU: Current Ryzen 7/9, Intel i7/i9\nScreen: If you are going to use it then it has to be relatively large and good quality\nThermals, noise - something to check in reviews of a given model\nStorage: One M.2 minimum, two would be nice. Some developers have Linux and Windows on two separate NVMe drives.\n\n3+ monitors is something that an average laptop won't offer. There are DisplayLink (not DisplayPort) USB adapters that generate video outputs (without GPU acceleration so won't do fancy stuff, gaming, 3D). Ultrawide displays are also an option.\n\nApple laptops have good build quality, good os for development but charge a lot of money for extra RAM and Storage and the storage is soldered and sometimes repair options are limited or gatekept.\n\nAnd obviously desktop/nettop will be more cost efficient than a laptop.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "there are docks you can buy that you connect laptop to via thunderbolt, then it can split into 2 or 3 monitors. It depends how mobile you are. I found that while I love having a laptop, I don't like working on it because its small, underpowered and slow. So I have a NUC for my main work machine with 64GB of RAM and all the power I need, if I need to go mobile (which is not super often) I have the laptop and can sync code from git if needed etc",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "By asking this question, you showed that you know nothing about programming. Focus on learning programming first, then worry about tools.",
        "points": "-1 points",
        "children": [
          {
            "comment": "Explain please. How do you know that he knows nothing about programming?",
            "points": "0 points",
            "children": [
              {
                "comment": "Because he is asking the most rookie question possible. Anyone who has some knowledge on web programming knows that a 200$ chromebook is all you need for even complex web development projects.",
                "points": "-2 points",
                "children": [
                  {
                    "comment": "Did your favorite YouTuber tell you that. OP asked for advice of any price range and productivity which makes quite a bit of a difference. Especially when you run 3 monitors.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Seems like you don’t know much about programming or computers in general too. I guess that is why you got offended enough to comment. Take it easy buddy, you will learn it someday(hopefully)",
                        "points": "-2 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Even if he is new. What if he wants to start learning on an adequate tool and get experience using that?",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biun6d",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biun6d/why_is_rest_not_realtime_details_in_the_post/",
    "title": "Why is REST not \"real-time\"? Details in the post",
    "points": null,
    "comments": [
      {
        "comment": "The difference is that a socket keeps a connection open for 2 way communication where either the client or server can send data at any time as long as the connection was started by the client. To mimic this behavior with REST you need something that can either wait for a request to return a result (a promise) or you need to have a way for the remote to respond back to a server (webhook). The browser can't host a webhook so a websocket is a better choice in most cases.",
        "points": "5 points",
        "children": [
          {
            "comment": "I did some digging and found out about polling and long polling! So like the client has to keep on sending requests in intervals or keep a request open for long. While on the other hand, a server socket can push data to the client on some event",
            "points": "0 points",
            "children": [
              {
                "comment": "REST is inherently a request/response pattern, because it’s usually implemented over HTTP and this is how HTTP works. If you’re looking for an ongoing connection to send data as and when it is available, e.g. notifications to a connected client, look at WebSockets instead.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "that is a good assessment.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Sockets are more for instant communication. If you don't care about that then long polling is a good option. For example a video game long polling doesn't scale that well.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Like client send a req to like the post, server increments the like counter, adds notification to the tray and returns all the notifications (along with the newly added one)\n\nThis works, but only because the client sends a request at the same time. So you can refresh and send new data at the same time, why not. But if client A liked the post, then client B won't be updated, as they did not send any requests. You could have client B refresh every few seconds or whatever, but that is just wasting traffic most of the time and is not very responsive at all! Imagine a WhatsApp or another chat app that is not instant. \n\nSockets solve this problem by allowing the server to communicate with clients and sending them updated data etc.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There's so much to unpack here... took me a while to realize that by \"socket\" you meant \"websocket\". First time I've seen anything on top of TCP referred to as \"real-time\" too!\n\nAs a sibling mentioned, HTTP is inherently request-response so your server isn't able to initiate a connection. If you want to notify a client of some state change, you can't. It's the tech version of \"don't call us, we'll call you\"...\n\nWebsockets are just a fancy form of long polling at the end of the day, you send a http request that gets \"upgraded\" to a websocket connection and the TCP connection remains open instead of closing. They're one of the mechanisms you can use to allow a server to send messages to a client outside of the normal request-response flow.\n\nServer-Sent Events are another simpler option. You can also check out the Notifications API (great if you're into PWAs). WebTransport is a newer one coming down the pipe that's not quite ready for prime time yet (thanks Safari). And if you want to get a bit wild there's WebRTC and RTCDataChannels.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biuhpb",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biuhpb/is_there_a_cheaper_translation_api_other_than/",
    "title": "Is there a cheaper Translation API other than Azure? It's costing $5k right now.",
    "points": null,
    "comments": [
      {
        "comment": "Are you using translation memory? At $9/M characters and a $5k bill, you're requesting 555M characters per month. There may be a good chance there are some repeated requests.\n\nHow low is low latency? What kind of strings are requested? What languages must be available?",
        "points": "12 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "good gravy.\n\nyou could setup a google vertex AI and one of their 3 translation models. that way, youre only gonig to be charged for the resources you consume at a fraction of the cost.\n\nAlternatively, setup whatever size cloud box you want and run ollama with whatever model you want. There's some good translation models out there.\n\nif that saves you money or not, I'm not sure. but at least with ollama seems like it would. just be a matter of finding the right model.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "what's the time/speed requirement? near realtime? or are we talking minutes to hours?",
        "points": "2 points",
        "children": [
          {
            "comment": "I should have mentioned it in the post. It needs to be a low latency.",
            "points": "0 points",
            "children": [
              {
                "comment": "What does low latency mean?",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Under 5 seconds. The avg text would be max 8k -15k characters.",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You can try Yandex translation API\n\nNumber of characters in the requests for calendar month Rate (in US dollars per 1 million characters)\n\n$15 for less than 50 000 000\n\n$12 from 50 000 001 to 100 000 000\n\n$10 from 100 000 001 to 200 000 000\n\n$8 from 200 000 001 to 500 000 000\n\n$6 from 500 000 001 to 1 000 000 000\n\nor Systran... those are cheap too, but you may have to contact them to get an individual offer",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "LibreTranslate, not sure if it's low latency but probably scalable.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can use NLP Cloud's translation API endpoint instead. It is based on the Meta NLLB AI model. It is fast and cheap.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What are you using it for? o_O\n\nWe use Azure AI Translator after generating AI reports using GPT, and compared to the report generation it costs nothing. LLMs are much more expensive than Azure AI Translator. Are you using it for static texts or something?",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biugo6",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biugo6/how_should_i_prepare_for_the_upcoming_hackthon_at/",
    "title": "How should I prepare for the upcoming hackthon at my collage?",
    "points": null,
    "comments": [
      {
        "comment": "What's the goal of the event?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That’s a good question for the people who went last year. I’m sure you can find some of them around campus.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biuenp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biuenp/help_with_timed_exams/",
    "title": "Help with timed exams",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1biu7mc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/6kzhtr9gncpc1.png",
    "title": "Is this sufficient for a cookie banner these days? There's no \"agree\" button that's clicked, it just plainly spells out that you consent by using their website.",
    "points": null,
    "comments": [
      {
        "comment": "Consent is not only about cookies, but about tracking and usage of personal data (including IP addresses) in general.\n\nAccording to the GDPR (EU's privacy law) you are only allowed to collect data after \"Consent\" (or similar) is clicked. Therefore, a tool like Google Analytics must be loaded AFTER the consent. Agreeing and denying must need the SAME amount of clicks and you are not allowed to make \"Consent\"/\"Agree\" more visible than \"Deny\"/\"Do not consent\". If you use privacy friendly tools only, you don't need a banner. Consent is also not needed for STRICTLY necessary things (like a captcha), but fonts, for example, are not allowed to be loaded from google without consent. It's recommended to serve fonts locally. There had been high fines for illegally loaded fonts.",
        "points": "141 points",
        "children": [
          {
            "comment": "There had been high fines for illegally loaded fonts.\n\nDo you have any examples of such cases?",
            "points": "30 points",
            "children": [
              {
                "comment": "The CNIL (french regulator) fined 75 000€ for storing data without consent. Fines get bigger if you do not comply.\n\nhttps://www.cnil.fr/fr/courtiers-en-donnees-sanction-de-75-000-euros-lencontre-de-la-societe-tagadamedia\n\nYou need a button to easily refuse. It may cause the site to require the visitor to pay a subscription. When refused, the only things you're allowed to store are preference cookies (eg: light/dark mode, auto-connection) and session cookie. Creating an account can require consent into storing some data for that purpose, but without requiring that the visitor allow marketing use.\n\nGDPR goes beyond merely cookies. Local & session storage are \"cookies\" too in the eye of the law. And any long term storage, sharing data with other companies, ... is to be consented. Can't link independent usage in a single consent. People must be able to get what data you collected from them, what you shared with others, and to retract consent at any time.",
                "points": "14 points",
                "children": [
                  {
                    "comment": "I'm not talking about general GDPR cases, just that OP stated that there has been large fines handed out for loading fonts from Google's CDN.",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "I remember a 100€ fine for that.\n\nhttps://thehackernews.com/2022/01/german-court-rules-websites-embedding.html",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Yep, it was linked below. It's not a \"large fine\" as the parent comment stated.",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "The CNIL (french regulator) fined 75 000€ for storing data without consent. Fines get bigger if you do not comply.\n\nThere's no mention of Google fonts in that case.",
                    "points": "3 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "We‘ve had this last april in austria. Hundreds of companys have been demanded a fine by a lawyer. After the case became public, courts ruled those demands were not legal after all",
                "points": "9 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Just because I didn't see anyone respond with a source - https://www.theregister.com/2022/01/31/website_fine_google_fonts_gdpr/",
                "points": "5 points",
                "children": [
                  {
                    "comment": "I don't think 100 euros qualify as \"There had been high fines for illegally loaded fonts.\"",
                    "points": "21 points",
                    "children": [
                      {
                        "comment": "Perhaps not a high fine case, but certainly one that lit a fire under the arses of the SaaS companies I was working for at the time. I want to say that one of the Schrems cases also touched on it, but also possible that for the person making the original comment €100 may be a comparatively large fine (either in the case of a foreign developer or one who is just starting out/doesn't have much disposable income)",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Wait..... You can't make deny take more clicks???? Every single website makes you either accept or click adjust settings, brings up a popup, and then swaps the locations of accept and deny for the popup if you want to turn them off.... You're saying I can sue them if I was in Germany and they served content there?",
            "points": "20 points",
            "children": [
              {
                "comment": "According to a strict interpretation yes. The language is to the effect that it must not be more involved to opt out of everything than to opt in. Most experts would say this means if you only need to click a single button to “accept all”, there needs to be an analogous button to “reject all” at the same level — not hidden behind another “adjust selection” button, let alone forcing you to jump through hoops to deselect a thousand individual trackers. However, that detail has not been tested in court as far as I’m aware, so a good number of websites still force you through at least one additional click to reject all.\n\nGenerally speaking, if the website operator sits in the EU themselves, they’re much more likely to adhere to the above strict interpretation than ones from overseas.",
                "points": "8 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "According to GDPR you also need to give people a way to delete their info if they clicked accept and then later decide to not accept.\n\nhttps://gdpr-info.eu/art-17-gdpr/\n\nGood luck ever complying with GDPR how it's written.",
                "points": "-6 points",
                "children": [
                  {
                    "comment": "How much later? Is \"we already sold it\" a valid excuse? how about after a week?",
                    "points": "2 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "GDPR is a trash heap.\n\n\"Good luck ever complying with GDPR how it's written.\" Exactly.",
                    "points": "-11 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Agreeing and denying must need the SAME amount of clicks and you are not allowed to make \"Consent\"/\"Agree\" more visible than \"Deny\"/\"Do not consent\".\n\nHave there been any ‘high fines’ for breaching this? Because I see it constantly, instead of ‘deny’ you have to untick 10 options.",
            "points": "5 points",
            "children": [
              {
                "comment": "AFAIK this detail is so far untested in court. The language of all relevant legislation is pretty clear on this, but whether one additional click really rises to the level of making rejection “harder” than accepting… I would say it does but it’s at least maybe an arguable point.\n\nThe “deselect these thousand trackers one by one if you don’t want them or fuck you” version, otoh is pretty clearly in violation. But again, as long as it’s untested some will continue doing it.\n\nAlso note that all this EU legislation only applies to websites aimed at citizens of the European Economic Area (or operating from the EEA). So that’s a bit more wiggle room for non-compliant overseas sites. “We’re not targeting Europe…”",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Yeah, don’t sleep on the loading of fonts. Our company has been sued by a lawyer who just went through dozens of websites to see if they load fonts without consent and suing them after. This was now a few years ago, but I wouldn’t be surprised if they automated this process by now (even though I don‘t know if their claims would hold up in court if they did)",
            "points": "7 points",
            "children": [
              {
                "comment": "So any website that automatically enqueues Google Fonts without the user clicking accept on a cookie banner is at risk of being sued?",
                "points": "4 points",
                "children": [
                  {
                    "comment": "Actually yes. There was a case in my country last year where a lawyer pulled this exact shit and sued thousands of businesses where the google fonts loaded before consent was given.\n\nHe lost though, since the website visits were automated and bots do not have a right on privacy. But technically, if he visited each single one of those normally, he might have had a case.",
                    "points": "12 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Yes. My company now has a policy that we cannot link to any CDN for fonts. Instead they have to be downloaded and served from our platform to avoid the privacy issues involved. When in doubt, download and serve them yourself.",
                    "points": "4 points",
                    "children": [
                      {
                        "comment": "TBF that’s better for performance anyway.",
                        "points": "6 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Curious if using @import instead of a meta tag to pull them in skirts this?\n\nI use Sass and compile the @import to a css file, so it's not actually reaching out for anything. At least not to my knowledge.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "The @import-ed css loads the fonts from the cdn.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "I guess my question is more based on what is shared when that's compiled, since the Sass compiler pulls in everything at the point of compiling, not on visitor request.\n\nWouldn't having request URI's in stylesheets be a request from the server's IP rather than the user themselves? Meaning a font path in a stylesheet doesn't share any end user info.\n\nMostly curious as in my head this is how it'd work vs a meta tag which would be requesting from the user's device.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "This is just about EU, how about for the US?",
            "points": "0 points",
            "children": [
              {
                "comment": "California has privacy laws too, but I don't know much about them. I think they are a bit weaker.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Important note: GA4 still tracks analytics even if consent is declined. It just does it in an “behaviorally modeled” way. \n\nhttps://support.google.com/analytics/answer/11161109?hl=en\n\nI thought denying consent meant blocking any tracking, but I was wrong.",
            "points": "0 points",
            "children": [
              {
                "comment": "As the IP adress is still send to Google, it's illegal,",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It depends on the cookies. You don’t need to consent to “strictly necessary” cookies, only third party cookies. So if they aren’t using any third party cookies, this seems reasonable to inform you that there are necessary cookies in use.",
        "points": "71 points",
        "children": [
          {
            "comment": "(In EU) But then you don't need the banner if you only have necessary cookies. As soon as the user have to consent to something it needs to be a clear decision from him and not that BS.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "AFAIK, based on the laws in Europe, you can't install cookies without an explicit consent by the user. The implicit \"by using this site you agree with our cookies\" isn't allowed in Europe",
        "points": "37 points",
        "children": [
          {
            "comment": "That depends on the type of cookies being used",
            "points": "28 points",
            "children": [
              {
                "comment": "Our cookie notification says \"we only use essential cookies\" and the close button says \"thanks\". We do specify what we use them for (auth) in our cookie policy though",
                "points": "3 points",
                "children": [
                  {
                    "comment": "lol \"thanks\" is a little presumptuous. Kind of respect it",
                    "points": "10 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "If you only use essential cookies why have a banner at all?",
                    "points": "8 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Why even have a cookie notification? You don't need permission when it's purely for required functionality (and auth definitely falls under it), so why bother the user with it at all.?",
                    "points": "8 points",
                    "children": [
                      {
                        "comment": "Ceo wanted it 🤷‍♂️",
                        "points": "2 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "It could throw visitors/clients off. With the banner, they know GDPR is respected. Without banner, it’s not clear; Do they use personal data? If so, is it compliant with GDPR?",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "It could also send the message \"we care about your privacy, so instead of tricking you into consenting to tracking, we just won't track you at all\". Which could help reinforce a certain brand image.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "you can't install cookies without an explicit consent by the user\n\nWrong, on three accounts:\n\nThis extends to all forms of tracking or otherwise traceable identifiers; cookies are the most commonly used mechanism, but it also applies to tracking pixels, query string parameters, LocalStorage, LocalDB, browser fingerprints, server-side IP address tracking, etc.\nThis does not apply to identifiers that are necessary to provide the core services that the site is for. The textbook example for this is a session cookie - when a user logs into a website, you don't need to ask for consent to set a session cookie, provided you strictly only use the session cookie for the purpose of keeping the user logged in. Another example is when you allow users to store settings like language preference, username (\"remember me on this site\"), etc. - again, as long as you only use the cookie for that, you don't need consent, because it is required to provide that functionality. And of course this also includes cookies that you use to store a user's cookie and tracking preferences: it is perfectly legal to set a cookie that says \"do not use tracking cookies for this user\".\nExplicit consent is the most commonly used legal basis for storing such identifiers, but there are others, and if another legal basis applies, getting explicit consent is not necessary. For example, there may be laws that require you to track users, and because you are legally required to do it, it becomes legal and does not require explicit consent.\n\"By using this site, ...\" is not technically illegal, it just isn't enough to get explicit consent. You can put it there, it just doesn't get you the legal basis you need, so you might as well not put it there. This, however, is also EU-specific; the rules may be different elsewhere.",
            "points": "1 point",
            "children": [
              {
                "comment": "Thank you for your detailed integration!",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Also, there's a fence post error. \"Found the programmer!\"",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Nope, if you are setting anything other than strictly necessary cookies you need to get explicit consent.",
        "points": "11 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Not according to GDPR. You have to ask the question and only after it you are allowed to set cookies.",
        "points": "10 points",
        "children": [
          {
            "comment": "Assuming they’re third party cookies yet. You don’t need to ask for permission before setting a “dark mode” cookie on your own website.",
            "points": "10 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "GDPR only applies to websites targeting people living in the EU.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I hate that stupid cookie banner law so freaking much.\n\nI’d rather just disable third party cookies in my browser and be done with it.",
        "points": "9 points",
        "children": [
          {
            "comment": "Didn't safari start a couple years ago only allowing 1st party cookies?",
            "points": "0 points",
            "children": [
              {
                "comment": "Browsers for decades have had an option to disable third party cookies but it was never the default because it broke too many websites.",
                "points": "9 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "The law itself isn't bad; however it isn't enforced enough to have the intended effect, and it didn't lead to the kind of awareness that it was supposed to.\n\nWhat the law is really about is forcing websites to be transparent about tracking, and to make it easy and straightforward to avoid being tracked. Hence, a website that wants to track you will be subject to stricter regulations, and must be able to prove that they have a legal basis for the tracking, and if that legal basis is \"explicit consent\", then the way that consent is acquired is subject to pretty strict rules as well.\n\nThe problem is that those rules aren't enforced very well, and I'd say the vast majority of websites out there willingly breaks and games them - but there's only so much capacity for sanctioning offenders, and authorities focus their efforts on the biggest and worst ones, which means that the huge mass of minor offenders can just keep doing it wrong, and that has, by now, created a culture of perverse incentives.\n\nMost cookie consent banners are wrong; even those that have explicit \"allow\" and \"reject\" buttons will still routinely use all sorts of UX tricks to get you to click \"allow\", and most of those tricks are explicitly not allowed, such as styling the \"allow\" button more prominently than the \"reject\" button, using a misleading layout or wording, requiring more steps to reject than to accept, suggesting that the service may not work correctly if you reject, or just tracking you until you click \"reject\".\n\nThe goal of the law, which I believe it would have achieved had it been policed more thoroughly, is to teach people to habitually click \"reject\", unless they truly desire to be tracked (why anyone would want that is beyond me, but that's not for lawmakers to decide, so that would be fine), and I think that is fundamentally a good goal, and the way it should be.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "It needs to be repealed. Good people are being hurt for dumb ass reasons.",
            "points": "-10 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "It’s such bullshit and should be replaced with education along with browsers making it easy to monitor and modify. If you’re going to force anyone, force browsers to handle it, once; stop making it a decision on every site.\n\nI’m saddened with the current state of the web compared to two decades ago. It’s depressing that we went through a brief, annoying phase of wild JavaScript popup alerts, then solved it, and then decided to make it a law that nearly every site should have an unstandardized equivalent.",
            "points": "-2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "https://www.sidn.nl/en\n\nSince they are the official website for .nl domains, and the netherlands has that stupid rule as well, they should be the example what everybody should be doing. Now they just added a \"cookie statement\" and also explained in their cookie statement how you can turn it off.",
        "points": "0 points",
        "children": [
          {
            "comment": "That gets stuck in a load loop for me.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'd make it smaller, less tall.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biu28b",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biu28b/how_to_do_logging/",
    "title": "How to do logging?",
    "points": null,
    "comments": [
      {
        "comment": "Many use a tool like sentry. You could also save in local storage and let the user copy it, when there is an error. The second option is more privacy friendly.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "For relatively secure logging you want a third party service like Loggly. You could potentially self-host with Graylog. Then you ship logs using your languages logger (PHP: Monolog) and Logstash on the server.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biu237",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biu237/how_to_create_a_cv_and_cover_letter_as_a/",
    "title": "How to create a CV and Cover letter as a self-taught Web dev",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bitjq8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/34zbxcv0jcpc1.jpeg",
    "title": "Mouse interaction",
    "points": null,
    "comments": [
      {
        "comment": "I would personally use p5.js for something like this",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bitcxu",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bitcxu/usd_cad_on_one_website_using_only_authorizenet/",
    "title": "USD & CAD on one website using only authorize.net",
    "points": null,
    "comments": [
      {
        "comment": "What does the accounting department say?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bit4hi",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bit4hi/urgent_can_someone_help_me_with_my_javascript_code/",
    "title": "URGENT!! can someone help me with my javascript code?",
    "points": null,
    "comments": [
      {
        "comment": "Make a working version for us to look at. Use codesandbox.io or https://codepen.io/ or some other such service.",
        "points": "5 points",
        "children": [
          {
            "comment": "here it is thanks for the help man",
            "points": "0 points",
            "children": [
              {
                "comment": "That link doesn't have any code projects",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "https://codesandbox.io/invite/kdl62l9l83gydylx",
            "points": "-4 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "for loops, indexes and lengths… what might be the issue…",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Just on a cursory glance I question why you're calculating the cart total this way lol",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Honestly, just paste that into ChatGPT and ask it to figure out what's wrong then go from there. You'll have more room to ask questions there.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bisuu4",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bisuu4/question_for_freelancers_what_tools_do_you_use/",
    "title": "Question for freelancers: what tools do you use for client project tracking/management?",
    "points": null,
    "comments": [
      {
        "comment": "I use notion (also i freelance aside from a regular job in startup, si not full time and \"small\" clients)",
        "points": "13 points",
        "children": [
          {
            "comment": "Same. Keeps everything organized.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I am dead serious, apple notes",
        "points": "27 points",
        "children": [
          {
            "comment": "I’ve tried multiple difference project management apps, thinking surely there must be a better way, and keep coming back to plain old Apple notes. I’m so glad I’m not the only one!",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Yup, I do the same.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "OneNote for me. But I'd be happy to make a switch. I also use Notion. But I don't like having to have a browser for my project mgmt.\n\nAlso an excel timetracker I built for tracking clients project and time.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "same",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "All our personal stuff is in there but never thought about using it for clients.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I wrote my own line item tracking system 20 something years ago. Still works great. Outputs PDFs that I email to the client.",
        "points": "9 points",
        "children": [
          {
            "comment": "Sounds cool I’m working on something similar that pulls commits, PRs and releases from GitHub and created invoices. Not familiar with the term “Line item”. Mind elaborating?",
            "points": "1 point",
            "children": [
              {
                "comment": "I bill in 15 minute increments. I have a drop-down timer and date. I have a text input field where I describe the work. I did in a sentence or two for that entry. That’s what I call a line item.\n\nIt’s segregated by client so that’s how I view everything and can edit, add, or delete line items. I generate PDFs using a PHP PDF class, each month. [Not print, save as PDF. It generates actual PDF files and saves them on the server. ] I then save a local copy and I manually email that one. Yes, it could be automated, but sometimes I discover issues.\n\nThere are more features, but I won’t go into those details.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "ClickUp",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Windows 11 :\n\nCalendar: Rainlendar Lite for desktop, showing both a calendar and events list, https://www.rainlendar.net/\n\nOutlook: Folders to organize emails.\n\nNotes: both pen/paper and moreover... Not MS Stickies, this one, https://www.zhornsoftware.co.uk/\n\n+ Toggl to keep track of time, https://toggl.com/ and Zoho Invoice for billing, https://www.zoho.com/invoice/",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Linear",
        "points": "3 points",
        "children": [
          {
            "comment": "Second this. I've been using Linear for almost three years, and it has performed awesomely. The methodology is somewhat opinionated, though, so it's not for everyone. Try it for a while before fully committing.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "My own, it's a showcase for my clients...",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I recently moved to Anytype. It's free but still in beta phase. It compares to Notion in terms of layout and customizability but leverages an object linking system like no other (Might compare with Obsidian).\n\nI use it to keep track of projects, tasks, payments, meetings, minutes and contacts. Basically I use it as a program managing software.\n\nThe main pro (or con depending on what you're looking for) is the customizability. You can do whatever you want in there, but it also means you'll have to either build it yourself or download a template and customize it.\n\nIt still lacks \"multiplayer mode\" but that's planned to roll out this year. Since I work alone or with other freelancers it hasn't been a burden for me.\n\nTL;DR Anytype Is amazing, customizable and free. I do recommend unless you're looking for a more simple or standard tool.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Outlook calendar and pen and paper.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Freedcamp",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Depends if clients need access to it. If it’s just for me I would likely use Things or Notion.",
        "points": "1 point",
        "children": [
          {
            "comment": "That’s exactly what I use too",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Taiga",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Github Projects. Everything in one place. Helps me to track my time spent, I can label everything and even can give access to customers. If some external party wants a detailed reporting -> see commit history. Sometimes clients or tax departments do want detailed reporting so they can waste their time on the commit history. Also it helps in release management and it even creates a release summary I can use to report to my clients.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Try Teamwork. I really like the UI and its user experience too. Rest trello is another option.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Notion is the best one, Trello",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Outlook calendar and toggl.com",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I use Trello. Fantastic for gathering and managing client feedback. And I use Toggle to track my hours spent.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Basecamp",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Asana",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I use Flowlu, their app is agile based management so its built for software specifically",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Asana.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "timemator for timetracking (tracks all running applications and then i usually backtrack)\nthings for simple todos + whiteboard in my office\nnotion for crm / project pipeline / project planning\ngerman accounting software for writing invoices\ndoing actual proposals in figma for design reasons",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Kanboard though I haven't done contract work in several years.\n\nI encouraged clients with support/service contracts to use Kanboard for submitting cases as well, but most just wrote me emails which I then put in the appropriate Kanboard area for tracking hours and managing notes/deliverables.\n\nI'd probably use Notion or Trello if I returned to contracting.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Obsidian",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Toggl Track + Trello was what I used in my business",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Excel for time tracking.\n\nRedmine for a change log and project documentation. Saved my butt on numerous occasions.\n\nExternal hard drive for asset management.\n\nKanboard on occasion but more often than not I use Omnifocus for tasks.\n\nCalendaring for meetings and journaling I do in a Hobonichi Techo with color coded fountain pens.\n\nI should note that I am a solo developer. If I was working with others assets would be moved to the cloud and I couldn’t use Omnifocus for tasks.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "GitHub?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Office 365 / OneNote / Wrike",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "FolioProjects",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Jira",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Depends on the clients preferred way of communicating and if we're in the same timezone, but mostly I use Todo comments in my code, Trello, google docs, and loom.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Linear & Notion",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What tech stack are you using for freelance work?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Airtable. Used for a lot of other stuff too.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Waka time, mantis, Jíra, or just comments in GitHub issues with the time spent.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I use both Excel and Trello",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Invoiceninja",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Trello mostly. It's familiar and easy for me, it's much easier to learn for a client than forcing them to use Gitlab. I'll probably transfer new work to my Gitea instance in the future, as it's Projects feature is essentially the same as Trello.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Airtable",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "logseq, and timetagger for things that need timing.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biscnk",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biscnk/how_to_generate_statistical_reports_at_scale/",
    "title": "How to generate statistical reports at scale?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bisc6u",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bisc6u/thought_on_self_host/",
    "title": "Thought on self host",
    "points": null,
    "comments": [
      {
        "comment": "Check r/selfhosted your highness",
        "points": "2 points",
        "children": [
          {
            "comment": "might be just a tad bias over there",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Thank,  sorry for the wrong sub",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Thought about Rapsberry Pi?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Depends a lot you give not any useful information. For example are you buying physical servers to store at home or just servers in Google cloud or AWS or something? In which case it is not really self hosting. Either way depending on your outlook self hosting can be way more expensive and much more work then just using anything existing in the cloud. It is often also easier to scale to zero when not used and can scale up very high if wanted.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "So you mean a server you physically install yourself in a data center? I mean, you CAN do it but I think you'll find it's more trouble than it is worth to have to physically manage a server in this day and age. Especially if you get into managing load balancer, firewall, on top of the server itself.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1birxw3",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/2yumugoh7cpc1.jpeg",
    "title": "StackOveflow looking wild in forced darkmode",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1birob2",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1birob2/software_developer_joins_webdev/",
    "title": "Software Developer joins WebDev",
    "points": null,
    "comments": [
      {
        "comment": "I wouldn't say it's weird, necessarily, to learn the basics in 2 or 3 days if you're already a skilled programmer. But it is still pretty impressive. But it's just syntax differences, after all.\n\nI would personally advise against jQuery, though that might be just because I have to work in it every day and I genuinely prefer vanilla js over it.\n\nHowever, if you want the modularity of React without the complexity, might I recommend Svelte. It feels practically like you're using vanilla html, css, and js with a few sprinkles of magic here and there but without all the complexity of hooks and stuff. For instance, when you want to update the dom when a variable is updated, simply update the variable... That's it. It's that simple. Svelte will update the dom when variables are updated (there's some trickiness here and there, but it's soooo simple compared to the competition, trust me).",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Maybe you’re a savant, maybe you’re an unfortunate victim of dunning-kruger, who knows?\n\nI don’t think it’s weird to grasp the basics in a couple of days. I think most devs can learn the basics of a new concept in a couple of days and HTML and CSS are far simpler than programming, at least at the “learning the basics level”. \n\nWithout knowing what you’ve really learnt on the JS front, again, impossible to say whether you are a genius or just have no idea how much is left to learn\n\nJquery is fine, it’s in production on literally millions of websites. If it wasn’t fine the web wouldn’t have functioned for about 5 years around 2010 and would still have serious issues today. \n\nThat doesn’t mean it’s the best choice, but your project isn’t going to catch fire if you use it",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The basics take a couple of days, so you are right on the money there. The sheer amount of tooling and different frameworks/libraries/technologies will take you a long while. And JS will sometimes seem weird coming from C#/C++.\n\nAvoid jQuery like the plague. It was necessary a long time ago and deserver recognition for causing JS itself to improve, but these days it's a liability.\n\nA forum is a bit too big a project to do without a framework like React. Not that you couldn't, it's definitely doable, but it'd be a lot less convenient, and would take longer if you were to just code it up in JS. It will also be difficult to maintain.\n\nThat said, if this is a one-off project that doesn't need to be maintained - go for it. Chances are you'll end up inventing your own framework as you go. It'll probably be bad (or at least worse than the existing ones) but it'll be fun to make one.\n\nIf speed of development and future maintainability are a concern, then use React/Solid/other library. (Personally I'm partial to Solid, but you'll find fans of every framework/library here).",
        "points": "0 points",
        "children": [
          {
            "comment": "Well, maybe word \"Forum\" is a bit too much. I want to have a main page where people can add a new posts and they are shown one under another. Like \"User Michael commented : I am selling my car a Honda Civic for 2 grands !\" and so on. Nothing too complex, perhaps very basic, but I want to make some animations like the older posts sliding slowly down and making room for the last one which kind of just appears there.",
            "points": "-1 points",
            "children": [
              {
                "comment": "Yeah, if you want that sort of stuff (updates in real time, etc.) then the animations are going to be the easy part. You'll probably want to look into something like web sockets. Also, the backend portion of this project will probably be bigger than the front end one. You'll need a server, a database, etc.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "I have experience in Python/Flask and MongoDB/MySQL so I guess it'll be fine :))",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bireqx",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bireqx/source_to_learn_fundamentals_better/",
    "title": "Source to learn fundamentals better?",
    "points": null,
    "comments": [
      {
        "comment": "MDN and web.dev are your best places to start:\n\nhttps://developer.mozilla.org/en-US/curriculum/\n\nhttps://web.dev/learn\n\nBoth free, both give very solid explanations of core underlying APIs and background on web development. Both are beginner focused, but you will 100% learn something going through this curriculum.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That's a broad question. What specific areas are you looking to gain more knowledge in?Networking? Scalability? Security? System Design?\n\nWhats the purpose of this? To increase your skillset to get a entry level job? Freelance?\n\nI don't know what situation you are in but working a full-time role with a solid company really helps your understanding of writing software at scale.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When I encounter something I don't understand, I try to take a moment and deep dive on it. When I can't learn it quickly I'll have to find some time to read and experiment. I rarely front load learning unless it's something I'm really interested in. However, I did get a lot of foundational stuff in school, and you'll need to study a bit if you jumped straight into learning code. That will give you more context when you approach problems and shortcut the time it takes to understand the relevant layer in the stack and what is the most appropriate solution given the larger system.\n\nI'm on MDN every day looking up details on something or reading a guide.\n\nI am very interested in teaching tech and want to start some classes. One of the formats I'm thinking of is a study group, where people who want to learn similar things can discuss what they're learning and share things they find. They would come with a project or idea, and together we would go through what it takes to design and build. Students would teach each other through demoing and explaining their work. We would do code reviews and get feedback on how to improve. Most importantly, when you are confused or stuck, I can help clarify things and get you moving again. For me, this type of group would help me gain skills rapidly, enjoy the learning, and also take on stuff I know less about knowing there is a group that will coach me through the hard parts. As people level up, it would be great to have a pool of talent to pull into your projects.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "To learn fundamentals, you should learn different language like how I can do a website with php or with c#. It ll enforce you to manage the client server connection and how you can manage data in your frontend.\n\nFor the frontend, you can try other framework like svelte or aventusjs that have different way of working",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biqulo",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biqulo/can_you_review_my_portfolio_for_game_developer/",
    "title": "Can you review my Portfolio for game developer?",
    "points": null,
    "comments": [
      {
        "comment": "Yes, this is a cool portfolio. I’m only just learning front end development, but I love this. The only issue I had was trying to view your social medias at the bottom. They would not load for me at all, it may just be my phone though.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biqqyo",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biqqyo/privacy_policy_cookie_generator/",
    "title": "Privacy policy / cookie generator?",
    "points": null,
    "comments": [
      {
        "comment": "I’ll do it for $5 a month",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We use cookiebot for our cookiebanner and to generate the cooky policy page, they have a free tier if you’re within 50 pages.",
        "points": "0 points",
        "children": [
          {
            "comment": "Ah okay! Will check it. What about privacy policy?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biqhbc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biqhbc/website_creation_charge/",
    "title": "Website Creation Charge?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1biqe5t",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biqe5t/has_anyone_had_an_issue_with_prettier_breaking/",
    "title": "Has anyone had an issue with Prettier breaking words in JSX??",
    "points": null,
    "comments": [
      {
        "comment": "Don't bother futzing around in settings, the real solution is a vertical monitor.",
        "points": "25 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "How much indentation is there really? Without knowing more, your component may need broken up into smaller component with less indentation?",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If it's on rare occasions there is always <!-- prettier-ignore -->",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Perhaps you’re using the css break-words property\n\n/j",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Put text into a variable, and use it inside tag",
        "points": "1 point",
        "children": [
          {
            "comment": "This JSX is completely reasonable. Breaking up into vars will impede readability. Don't do this.",
            "points": "11 points",
            "children": [
              {
                "comment": "Yeah but it would be entirely fine to use a JS string:\n\n<span className=\"doc_body_text\">\n  {`long text that does or doesn't wrap,\n    depending on what the OP wants\n  `}\n</span>",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "No",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Did you try making it a JS string? Like {\"text\"}.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Way too much indentation.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Likely a indentation problem? If so it may be time refactor into sub components.  \n\nI like to put strings into a string object as well so you can maintain all copy from a single place and have less crap around the code. That way you also have a single point of to fix if you're adding translations, or overriding copy from some editor backend in a CMS.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What's your print width set to? Only way I've found to avoid this is to use a ridiculously high number so it doesn't wrap just on length.",
        "points": "0 points",
        "children": [
          {
            "comment": "Yeah i tried this but thats super hacky for me cause i like print width for every other document type.. It's weird, reading the docs it sounds like prose wrap is exactly the setting i want - it is supposed to stop print width from affecting blocks of text. But it's not working on this...",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biq030",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biq030/best_animation_library_for_react/",
    "title": "Best animation library for React?",
    "points": null,
    "comments": [
      {
        "comment": "Ive only ever used gsap and/or canvas directly.\n\nWith gsap you can animate anything: JavaScript, css, objects, svg...\n\nHas react hooks: https://gsap.com/resources/React/\n\nAnimating css: https://gsap.com/docs/v3/GSAP/CorePlugins/CSS/",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "for simple and easy to implement animations id go for framer.\n\nfor more complex and customisable gsap is great",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biprva",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biprva/help_with_deploying_a_website/",
    "title": "Help with Deploying a Website",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bipm74",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bipm74/video_carousel_optimization/",
    "title": "Video Carousel Optimization",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bipkow",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bipkow/inside_chrome_browser_part_4/",
    "title": "Inside Chrome Browser - Part 4",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bipjdq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bipjdq/how_to_process_a_big_file_through_a_job/",
    "title": "How to process a big file through a job",
    "points": null,
    "comments": [
      {
        "comment": "You can use BASH cli tools to split it up. Or PHP. Or Python.",
        "points": "0 points",
        "children": [
          {
            "comment": "Sorry, I’m a bit new to this.. how do you split it up? Any examples ?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Look into laravel queues. The jobs gets queued and dispatched to workers running in the background.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bipfgm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://prosopo.io/articles/google-privacy-nightmare/",
    "title": "Google reCAPTCHA is a privacy nightmare - Questions over privacy promises and cookie use",
    "points": null,
    "comments": [
      {
        "comment": "This an article or an ad?",
        "points": "20 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Cloudflares turnstile is free.",
        "points": "30 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "\"Trusted by the Web3 Foundation\" is maybe not the endorsement they think it is.",
        "points": "9 points",
        "children": [
          {
            "comment": "come on they mean the basic 3 web programming languages! HTML, CSS, and JS!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It can be a nightmare for users as well. I don't care so much about my ip or user agent but trying to guess some distorted mess just feels impossible often. Even if I'm sure what the characters are, it seems to fail. Do i have to include spaces? Are they supposed be in 2 rows or 1? What's the rule for deciding whether square contains something or not?\n\nI genuinely feel bots are better in solving those than me...",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Not mentioned in the article, but recaptcha recently jacked up their prices, so seems like the whole steal all your data approach isn't even making them much revenue",
        "points": "2 points",
        "children": [
          {
            "comment": "It's not making them as much revenue as it could\n\nThey're absolutely making a killing on all the data it generates",
            "points": "13 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "!RemindMe 15 hours",
        "points": "0 points",
        "children": [
          {
            "comment": "I will be messaging you in 15 hours on 2024-03-20 13:13:36 UTC to remind you of this link\n\nCLICK THIS LINK to send a PM to also be reminded and to reduce spam.\n\nParent commenter can delete this message to hide from others.\n\nInfo\tCustom\tYour Reminders\tFeedback",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Okay.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yea uhh....let's switch from the complete dumpster shitshow that is googles captcha shit to.....web3 advocates with a CEO from an advertising background, and 2 bitcoin/blockchain simps.....\n\nWhat could fucking go wrong ey?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's interesting to watch how EU regulations are making much of what is generally regarded as standard infrastructure on the web ... illegal! I mean, honestly how many websites viewed in the EU are truly compliant? I'm in the U.S. so I can't really see how this is playing out except through that lens, however it seems like there'd be issues with selective enforcement and resources for enforcement. Kind of a sidebar but any EU devs have experience with how this is playing out?",
        "points": "-6 points",
        "children": [
          {
            "comment": "Standard infrastructure on the web because the company promoting it is also the biggest broker of data on the web.\n\nYou also have to remember that the eprivacy directive (cookie consent to the layman) was drafted in 2008/9, when most of these standard infrastructure and practices weren’t as prevalent.",
            "points": "11 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "There are many legal cases against big players like multinational companies and governments themselves for not respecting GDPR. However enforcement for small companies is lacking.\n\nHowever it's not all bad. Big organisations are scrambling to become compliant and because of it a lot of progress has been made and tools developed that are beginning to steer things in the right direction. Take for example all the improvements of privacy done in GA4. They would never have happened without GDPR. And they affect millions of websites that were using GA.\n\nSmall companies will follow, probably at the pressure of their investors because the penalty is a % of the revenue of your majority stakeholder, not your own, so it's a big risk for investors. Also if you want to work/partner with a big corp these days their due diligence includes checking you're compliant yourself.\n\nAll things considered, things are frustrating because they're very slow moving, but we're in a better place than we would have been without GDPR.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "however it seems like there'd be issues with selective enforcement\n\nYep ... that's exactly how it's playing out .",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bipbqc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bipbqc/what_docker_alternatives_do_you_recommend_and_why/",
    "title": "What Docker alternatives do you recommend (and Why)?",
    "points": null,
    "comments": [
      {
        "comment": "Rancher Desktop. It's compatible with docker and docker compose. THat's what I use for multi-container application and it also has kubernetes that I don't use locally.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Podman is the only one I've worked with. My only real complaint is that it does things a little differently so my muscle memory doesn't quite line up. However, that's a tiny gripe for an otherwise solid tool.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Its prob not what you are looking for but you should know about Nix.\nIts bigger in scope then docker but you still build repeatable systems with a declarative method",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bip9ap",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://webkit.org/blog/15162/introducing-natural-input-for-webxr-in-apple-vision-pro/",
    "title": "Introducing Natural Input for WebXR in Apple Vision Pro",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bioy1w",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bioy1w/from_a_high_level_how_do_i_authenticate_on_one/",
    "title": "From a high level how do I authenticate on one app, and automatically authenticate on another app if I already am logged in?",
    "points": null,
    "comments": [
      {
        "comment": "One way is to store a cookie on a central/common domain. eg the auth domain\n\nWhen the user visits an app for the first time, it redirects to the auth domain. If the auth domain sees a valid login cookie, it simply redirects back. If not, it goes through the normal sign in process. When the user is redirected back to the app, the app stores its own cookie on its own domain so it stops redirecting to auth.\n\nLogging out can be tricky. One approach is to store the domain of each signed in app on the auth domain. When signing out, the auth domain hits a logout endpoint on each signed in domain, so that the app can clear its sign in cookie. It can do this by redirecting you to each one in a daisy chain fashion, or by using some JS to hit each URL simultaneously on the logout page, etc.\n\nSome years ago when I looked into how Google handled it, they loaded an image tag with the logout url for each domain. Clever and efficient. Not sure if they still do that.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You could implement oauth2",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You should use SSO. In a very basic explanation, this is how SSO works:\n\nYou go to app1.com. the app has no idea who you are and redirects you to my SSO.com My SSO.com, checks your credentials and redirects you back to app1.com. Now app1.com knows who you are and sets a cookie/something else and until the cookie/something else expires, it knows who you are.\n\nYou now go to app2.com. all the above happens again.\n\nIn short, every app needs someone to tell them if they should trust you (the user) or not. JWT is the same, in fact some SSO implementations will use JWT.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biosic",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biosic/advice_determining_if_my_portfolio_site_is/",
    "title": "Advice determining if my portfolio site is bloated w/ poor aesthetic design choices",
    "points": null,
    "comments": [
      {
        "comment": "You can make a portfolio section that includes work you've done for companies, as long as you're specific about what you did vs what other people did.\n\nI like the idea conceptually, and dramatic brutalist styles are kinda in vogue right now.  But yours feels a little amateurish and needs to be improved design wise.  Seems like it could use some tightening up or a professional designer to adjust it, and the responsiveness could be better.\n\nHaving smaller projects like in the bored section is fine but they look very unfinished to me which is a bit of a turnoff.",
        "points": "2 points",
        "children": [
          {
            "comment": "I think I'll likely do just that in regards to your advice about the work I've done for companies. I worked on a 2 person dev team so my role wasn't super specific as I had my hands in all of it, but I can likely suss that out to be as explicit as possible.\n\nI had no idea Brutalism is en vogue right now. Good, b/c I love Brutalism!\n\nYea, the bored section was something I just used as a home for little projects I did, like using HuggingFace etc. And I agree, they are minimal and don't really have value. But my thinking was that it showcased an interest in learning, but perhaps that is not what the section telegraphs.\n\nAppreciate the feedback!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "This is a cooler site than mine and I'll admit that, but some of your drinker pictures on the Unicorn Soda page have got some STUFF going on, lol.",
        "points": "2 points",
        "children": [
          {
            "comment": "Cool, thx for the feedback! I'm glad you think it's cool, I'm just not sure if it will help getting a dev job. And yea, the Unicorn images... I should probably take those out. But that's what the A.I. spit out, so... who am I to judge? Lick that straw!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It loads 6Mb of images on load! And maybe 4 little icons are actually even visible. That ain't performant...",
        "points": "2 points",
        "children": [
          {
            "comment": "Great! I just compressed the images via TinyPNG and that seems to have helped. Still not at the target 2mb. But I'll certainly look into it. Thank you!",
            "points": "2 points",
            "children": [
              {
                "comment": "loading=\"lazy\"",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Cool, popped it on all images and Lighthouse is giving me an 87. Thanks!",
                    "points": "2 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I like it. It's different yet minimalistic in a way. Though one thing that bothers me is the line height at \"feel free to reach out..\", the letters touch each other so it becomes difficult to read IMO.\n\nEdit: to add, for the projects, a little explanation of what I'm seeing and your (thought) process would be nice",
        "points": "1 point",
        "children": [
          {
            "comment": "I can see that about the line height. Easy fix, and I'll likely do just that. And I suppose I could add a little more explanation on the Projects page. Thank you!",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "My own personal opinion is that it's a little blinding, but I see what you're going for. You might want to run it through an accessibility scan and see what turns up.\n\nOnly nitpick is that when you hover over your projects link you get a red bar to the left, and it's not really clear that it's going to become an overlay, it feels like it's going to be a sidebar menu, but doesn't persist.",
        "points": "1 point",
        "children": [
          {
            "comment": "Yea, it was a design choice that may have benefited with a little more middle-of-the-road aesthetic. And the Project hover point, hmm. I was hoping that would've come across as \"clever\", but apparently not. I appreciate the feedback.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biomah",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biomah/i_made_an_astro_template_for_web_dev/",
    "title": "I made an astro template for web dev",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bio0d3",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://gironajs.com/en/blog/what-are-dark-patterns",
    "title": "I recently was caught by a Dark Pattern on a Trusted Site😅. After this experience, I've Written a Blog on What They Are and How to Avoid Them🔐!",
    "points": null,
    "comments": [
      {
        "comment": "A dark pattern is a design strategy used in user interfaces to trick users into making unintended decisions, benefiting the service provider at the user's expense. Examples include:\n\nPrivacy Zuckering: Tricking users into sharing more personal information than they intended.\n\nBait-and-switch: Advertising a product or service at a low price or for free that is not actually available, then pushing a more expensive or inferior alternative.\n\nConfirmshaming: Using shame to coerce users into opting into something, like email subscriptions, by wording the decline option negatively.\n\nMisdirection: Distracting users from their intended action with misleading design elements, leading them to make an unintended choice.\n\nRoach motel: Making it easy for users to enter a situation (like signing up for a service) but difficult to get out of it (such as cancelling the subscription).",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hey webdevs!\n\nBasically, I recently got caught by a Dark Pattern and decided to investigate it and summarize my investigations in a blog.\n\nI tried to give detailed examples with images; I'm sure more than one of you can recognize some of those.\n\nHope you like it and stay safe!!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1binptv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1binptv/costing_a_project/",
    "title": "Costing a project",
    "points": null,
    "comments": [
      {
        "comment": "you aint gettin' paid. unless you have a rock-solid contract ahead of time. Even if you do, prepare to chase down your fee.\n\nI'd advise you put the least possible effort into this until you see a check clear.",
        "points": "4 points",
        "children": [
          {
            "comment": "Well the point is to get a contract done. I’ll have clauses for disbursement at regular intervals. Which would put them in arrears and may cause interest payments if they don’t honour their obligations.\n\nCare to comment on costing?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It would be more appropriate for you to receive an up-front retainer against future revenue sharing. Your efforts/costs are all in advance of revenue, so they need to make that work for you somehow.\n\nIf that isn't viable for the customer, advise them to look elsewhere. They will truly get their money's worth, then, as they get a lot of excuses and nothing to publish.",
        "points": "1 point",
        "children": [
          {
            "comment": "What do you mean when you say allocated against future revenue? So like get paid a monthly retainer which is subtracted from my percentage of revenue after the apps are launched?\n\nWhat about costing the project?",
            "points": "0 points",
            "children": [
              {
                "comment": "Get paid either up front (preferred) or monthly as you develop it until it is launched. Then your \"share of revenue\" is not paid to you until the accumulated balance equals that up front payment. From that point forward you receive your share of revenue.\n\nCosting the project is a you issue. Pricing the project is what matters. Estimate the hours to develop, add 80%, and multiply by your fair hourly rate. Insist on a tight change control process, where every time they want to add or change something you cost the request, get paid for it, then implement the change. Otherwise you are doomed. It sounds like these people are not sophisticated in app development so they really don't know what they want until you hand it to them and then they see all the things they forgot about. You can't do that work for free, but the conversation about how you're going to handle that needs to happen up front.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Makes sense. Thanks for your input.\n\nIs it normal to use 80% as the slack time? That’s almost double the original estimate I come up with.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "If you can deliver projects with vague requirements with less slack time, forget these guys, you are ready for the major leagues!",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "lol, I think I get your point.\n\nCheers",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Get a retainer. Have that allocated against future revenue with a margin.",
        "points": "0 points",
        "children": [
          {
            "comment": "Care to elaborate a bit on this?\n\nAlso, what do I do for valuing my work? I still need to do this before I can even begin to talk numbers.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "🚩🚩",
        "points": "0 points",
        "children": [
          {
            "comment": "lol",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bino10",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bino10/side_hustles/",
    "title": "Side hustles",
    "points": null,
    "comments": [
      {
        "comment": "Become a YouTuber making surface level knowledge videos / grifter who scares everyone about AI",
        "points": "12 points",
        "children": [
          {
            "comment": "The Alex Jones of IT",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Sweet ,",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Just slap the word AI on anything and cash coin baby!",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "P Grammer",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1binf31",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1binf31/i_need_to_make_a_chrome_extension_what_are_the/",
    "title": "I need to make a Chrome Extension. What are the best tools for getting the job done as quickly as possible?",
    "points": null,
    "comments": [
      {
        "comment": "You don't need some advance features for these requirements. Just go one by one.\n\nBy the way, you can use this template for better developer experience.\n\nhttps://github.com/mubaidr/vite-chrome-extension\n\nIt's developed by me for my personal/client projects needs, queries are welcome.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This sounds like it'd be far easier as a TamperMonkey UserScript. No need for all of the extra boilerplate and hassle of making a whole extension when all you want to do is add/change some stuff on the current page.",
        "points": "0 points",
        "children": [
          {
            "comment": "Not the current page, but across a whole tool which is hosted as SAAS website. Do user scripts still make sense?",
            "points": "0 points",
            "children": [
              {
                "comment": "Yeah that's what I usually use. They are super easy to create and share and they can do anything within a webpage that you might need. It's effectively the equivalent of running a script in the browser console right after a page loads. So anything you can do there, you can do in a UserScript.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You are making something that's going to use ChatGPT, correct? 😅\n\nI made one a while ago, can help you.\n\nWhat exactly do you need?",
        "points": "-1 points",
        "children": [
          {
            "comment": "Haha no, its for some tool which is hosted as SAAS website.",
            "points": "0 points",
            "children": [
              {
                "comment": "Hah alright, but it sounds it does everything similar like my extension. Check it out https://chromewebstore.google.com/detail/xagio-ai-integrate-chatgp/igibfmljolpknjbpofgekhcnmfaipgli, you ll find most of your questions answered there",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hire me? I'm not joking",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bin3yv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bin3yv/duplicating_content_for_simplicitys_sake_bad/",
    "title": "Duplicating content for simplicity's sake, bad practice?",
    "points": null,
    "comments": [
      {
        "comment": "Responsive vs Adaptive design. It’s normal practice, especially for menus.",
        "points": "17 points",
        "children": [
          {
            "comment": "Thanks for the term! Didn't know it was a whole concept.",
            "points": "3 points",
            "children": [
              {
                "comment": "It's usually a last resort, but it happens.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Think navbars in desktops vs hamburger menus on mobile.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It happens. Sometimes components become over-complicated and harder to reason about when you try to stuff too many different use cases into one component. Just make sure any text content that's duplicated between the two is in a variable that's shared between them rather than copying and pasting, to make sure they don't go out of sync.",
        "points": "7 points",
        "children": [
          {
            "comment": "Yep it’s better to duplicate than to maintain code where one change potentially affects five different places.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Well, I have seen this used for menus. And hidden side panels for mobile vs visible for desktop, so it's not totally frowned upon. However, (I) do try to keep the main content \"un-duplicated\", that is just confusing for indexers and screen readers.",
        "points": "7 points",
        "children": [
          {
            "comment": "Yeah, it rubs me the wrong way too, for some cases I think it won't hurt screen readers if it's hidden with display none before page loads, but again its still duplicated :[",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Code readability > DRY for DRYness' sake",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don’t look too much at best practices and do what’s convenient and maintainable, is this going to be easier to manage? Easy choice",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Maintaining code in one place is fine.\n\nMaintaining code duplicated in a second place isn't terrible.\n\nBeyond that, there will be a point where you find yourself doing \"shotgun surgery\" When updates start to get tedious and painful, you should have enough information to do some abstraction.\n\nDon't do it sooner than that. As Sandi Metz (she's awesome, look her up) said in her book: \"we never know less about our application than we do right now\".",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "As with everything, “it depends”. There are tradeoffs with non duplication as you say. My rule of thumb is generally to not worry about it if it’s in 2 places. When it’s 3 or more I get concerned. Also it matters how much is duplicated. And last, it matters the likelihood of changes. Something that will probably be modified a fair amount can start to be difficult to keep in sync, whereas if it’s only rarely modified, then I would say duplication matters less",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "are you honestly saying there isn't shared logic between the two? I can see the presentation (View) being completely different but not the Model. I prefer to maintain code in one place rather than two but sometimes its not possible, not the end of the world",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I like WET code better than DRY.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Readable and Maintainable > Reusable. DRY is bad if you treat it as doctrine, and not a guideline. There are some cool alternatives in the wiki, I recommend checking it: Don't repeat yourself - Wikipedia",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bimyel",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bimyel/transform_unstructured_text_into_structured_data/",
    "title": "Transform Unstructured Text into Structured Data with Ease Using Smart Extract AI!",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bimquq",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bimquq/wordpress_redesign_where_to_start/",
    "title": "WordPress Redesign - Where to Start?",
    "points": null,
    "comments": [
      {
        "comment": "Go for custom theme. You can use Bootscore child theme… https://bootscore.me",
        "points": "0 points",
        "children": [
          {
            "comment": "Thanks, mate. I'll look into this a bit more",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You are not alone with the conundrum you face. As it is a rebuild you may be best served sticking with WordPress. However, if you want to explore a Jamstack/ Headless CMS based approach feel free to kick the tires of Contento.io. There is a free trial / quick start (no credit card required) so you can at least see what you are dealing with. A word of warning though moving off WordPress to Headless is a big call. The advantages are significant but not in every use case. And recreating WordPress + lots of plugins is far from straight forward. On the Contento site there are several blogs looking at differences between WordPress and Headless which may also help you make an informed decision.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "https://www.advancedcustomfields.com/pro/\nMake a custom theme using https://upstatement.com/timber/. There is a blank theme in it's plugin folder which you can copy to the themes folder\nEasily make custom WP Blocks with the above: https://palmiak.github.io/timber-acf-wp-blocks/\nFor reactivity: https://alpinejs.dev/\n\nOtherwise, you could go headless WP and use Nextjs or Nuxtjs.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "dump wordpress and go for webflow or nextjs with a headless cms",
        "points": "-1 points",
        "children": [
          {
            "comment": "If it were up to me, I'd get rid of WordPress in a heartbeat. Unfortunately, the decision is not up to me.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bimhbg",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bimhbg/how_to_stop_processing_api_request/",
    "title": "How to stop processing api request?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bimcn8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://app.daily.dev/posts/o37pfrBbk",
    "title": "How to build a Good Portfolio Website - My Approach.",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bilzeu",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bilzeu/how_is_seo_affected_by_csr_or_ssg_with_clientside/",
    "title": "How is SEO affected by CSR or SSG with client-side data fetching",
    "points": null,
    "comments": [
      {
        "comment": "I know this isn't the answer you're looking for but the best solution if you want to do this is to have your clients move to a better hosting platform. If cheap shared hosting is important to them it's likely they are running fairly low traffic sites, so Netlify will be free and is built from the ground up to support modern frameworks like Gatsby.\n\nIn my experience the biggest challenge with headless setups like this is in previewing changes. Your customers will want this feature, and implementing it can be challenging.\n\nQuite honestly for most small websites a traditional CMS like WordPress provides a really good balance between widespread support, good editing experience and good-enough site performance (as long as you set it up correctly). Headless + static setups can provide a lot of benefits, but those are mostly relevant to larger organizations and more complex use cases. They are more complicated to set up and run given the need for a build step or SSR support.\n\nI say this as someone who has built numerous websites with both solutions, and exclusively uses SSG setups for my own product after moving away from contract work (my current framework of choice is Astro, but Gatsby is excellent). If I needed to build a small site tomorrow for someone that wanted CMS editing capabilities I would choose an old school CMS like WordPress or Craft without hesitation.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We've looked to tackle this issue with Contento.io - it is a Headless CMS (SaaS) but designed specifically with the assumption that it is being used to manage a website. We thus enjoy the benefits of speed from a Headless architecture (SSG and CDN) but we've also built in SEO so you can set key elements (ranging from meta title / description, URL and Open Graph). Feel free to check it out - there is a free trial with no credit card required. You can fire up a starter kit (for a site) and access the admin panel / user interface and check out the SEO capability.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bily9d",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bily9d/become_a_frontend_javascript_pro_in_steps_a_series/",
    "title": "Become a Frontend JavaScript Pro in Steps - A Series",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bikgey",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bikgey/cheap_text_message_advice/",
    "title": "Cheap text message advice?",
    "points": null,
    "comments": [
      {
        "comment": "A Whatsapp channel/community (you can set it to send-only).",
        "points": "7 points",
        "children": [
          {
            "comment": "I think this makes more sense. WhatsApp/Telegram/Signal/etc would be way easier and free.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "AWS SNS could be a viable option. It's cheap but just requires a bit of setup/small waiting period for number registration if you don't bring your own. Setting it up would give you access to other things as a side benefit (push/email notifications). You could also do a VoIP provider with the sole intention of doing the SMS services if that doesn't work for some reason, I think CallCentric does it like that but there is a few and are cheaper than a purpose built API based SMS service.\n\nCan walk through some of the setup if needed/give information. Feel free to DM.\n\nhttps://aws.amazon.com/sns/sms-pricing/",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "SMTP while having the workers submit what phone carrier they use and store it in a DB. It’s free.",
        "points": "0 points",
        "children": [
          {
            "comment": "I don't have a mail server running... would have to implement one... I wonder if there's a service for that. thanks for the idea",
            "points": "0 points",
            "children": [
              {
                "comment": "You can use use Gmail. Set it up to use app passwords. I can provide you with the python code if you need to send this through. It's pretty simple.. but barring that, all you do is send an email to the users cell # @ the provider. It looks like this:\n\n5551234567@provider.com\n\nThis will effectively send them a text message.",
                "points": "3 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Exactly...I use this on my system to send users notifications using an address setup just for the purpose. sms@yourbiz.com",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "If you’re looking for a prebuilt solution I found this a while back: https://www.beekeeper.io.\n\n(I’ve never used them so don’t know price or if it’s good, just sharing it in case)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can send an email to a text number if you have the phone number and carrier code (easy to get onlne). Just set up a mail group with all those addresses. You could either send that email from something like Outlook manually, or trigger an email from the site.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Assuming you're in the US you have to register this as a marketing campaign through The Campaign Registry. There are very strict rules and even getting your campaign registered might be a hurdle because you have to prove that people are opting in to these messages.\n\nYou say 50 recipients, up to 5 times per day, and assuming only week days, that's around 5000 messages per month, because each message to each recipient counts as an individual message and if the message text is over 153 characters it will send multiple messages which can easily double this number.\n\nAlso, most service providers will throttle you to one message per minute so it will take about a minute to send to everyone.\n\nTwilio, Telnyx, SignalWire, BulkVS are some providers that I am familiar with.\n\nBut as someone else mentioned, look into using a messaging app instead. Like WhatsApp, Telegram, Signal, Snapchat(?), or whatever is popular these days. You can create groups or channels and its free.\n\nSource: own a voip company that does business texting.",
        "points": "0 points",
        "children": [
          {
            "comment": "Yeah, I had to deal with that Twilio campaign registry last year. What a nightmare. They kicked back our \"campaigns\" about 5 times.\n\nOnce I figured out the language I needed to use it was much easier. We were basically using it for password recovery, so our opt-in was the customer selecting their phone number from an obfuscated list of numbers after entering their recovery email.\n\nThe end result from this is they get to charge us monthly for the \"campaign\" to exist, so now our account has to recharge two or three times a month, where as in the past we only had to recharge once or twice a year. Feels like a clever cash grab from Twilio to generate more revenue from those of us who do actually only send like 100 messages/mo.",
            "points": "0 points",
            "children": [
              {
                "comment": "The Campaign Registry has nothing to do with Twilio.\n\nThose fees get passed on to The Campaign Registry.\n\nIt was created by AT&T, T-Mobile, and Verizon. Be mad at them.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Fair enough. I mean, it's not my money anyway. But the process was frustrating and came at a time when I was already overloaded with other tasks.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "I understand. Nobody in the industry is happy with it. It's all just a cash grab. Just go look over in r/voip from about 2 years ago when it started getting enforced.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bik83u",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bik83u/do_i_suck_at_programming_or_is_programmingmy/",
    "title": "Do I suck at programming or is programming/my project just really hard?",
    "points": null,
    "comments": [
      {
        "comment": "You're implementing polish features before you've delivered MVP. Yeah, you're literally never going to finish like that. Deliver functionality as agreed on, add a FEW easy features/snazzy aesthetics (less than a week) so they think you did a good job AT THE END. Cash your checks. If they want more, cool, here's the new statement of work, please sign it and make your first payment for the new agreement and we can get started!\n\nCut all work you are planning that is not for functionality. That's a newbie mistake. Fulfill the contract FIRST, add some customer pleasers at the end, leave them wanting so they rehire you later (or even right then).\n\nThere is no end to the rabbit hole of things you COULD add. Deliver the things you MUST add first. Demo them, take feedback, give new timelines, keep working.",
        "points": "468 points",
        "children": [
          {
            "comment": "This is probably the best advice!\n\nMy Sr dev sat down with me a while ago and told me when he started programming he would always try to cover every case and make it absolutely perfect. He would turn a single day issue into a week long one.\n\nHe told me that the best way to go about these types of things is to first just get the task done and working. Once the project matches the requirements in the spec, show it to the PM or customer and get some feedback and have a discussion about nice-to-have features or edge cases they might run into.\n\nIt's better to build something and then build more upon that rather than trying to get something perfect in the first try.",
            "points": "88 points",
            "children": [
              {
                "comment": "I’ve also often seen the opposite to this in companies that reward and praise people working fast. Rushing to get cards through, only to slow down in PR and PO review stages because they didn’t cover the AC or obvious edge cases.",
                "points": "7 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I mean... you should cover every case you can reasonably conceive of before you release the feature. You shouldn't release things that you know have massive loopholes and bugs involved with them.\n\nIt's really about what you know. If you know there's a bug or massive loophole in functionality, one that you can fix in a reasonable amount of time, you probably shouldn't release it or you're just going to knowingly waste everyone else's time. Consider all of the time that goes into a flawed feature or a feature missing some important option. All of the time spent by users and QA people and all that.\n\nYou want to do it right the first time. So, you shouldn't knowingly release things that have bugs/loopholes of functionality.\n\nObviously at times you can't really conceive of every case. But if you can see the loophole or the bug, and you know it's a big bug or loophole, you're better off patching it up before you release it. It saves EVERYONE, you included, time.\n\n\"Covering every case\" here means \"every known/conceived of case.\" The moment you believe it to be \"reasonably bug free\" and that \"all known cases have been covered or at the least acknowledged and reasonably worked around\" is the time you should release it.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "That and building the product will allow you to see failures in the product, in ways that actually make your project better, not just “neater”.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I think of lines of code as legacy from the moment they're written, because all those lines have to be maintained, meaning they carry a cost simply for existing. So, unless robustly covering edge cases is a hard requirement, in my view it's often better to have something that deliberately does not try to handle an edge case, as long as that simplifies the code. As you said: if an edge case turns out to be important enough, you will find out and can cycle back to add the code for it later.\n\nSame thing holds true for over-engineering abstraction layers and so on. All of those abstractions add complexity and all complexity has a maintenance cost. It's often better to write code that deliberately does not try to abstract things away too much, and to later refactor it when needed to add those abstractions.\n\nHaving said that, there's an art to this trade-off. It's something that over the years a senior developer will learn to sniff out: where to handle edge cases from the start, where to add abstractions from the start. Lacking that intuition it is often wiser to err on the side of dumber simpler solutions.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I agree with nice-to-have features, but not with edge cases. Edge cases need to be adressed when you add the feature, this can either be done by writing them down and suggesting ways to implement if they are rare and hard to implement, or explaining them and implementing them initially. The number one time sink in large saas projects is edge cases people probably new about, ignored, and then forgot about. You'll never find every edge case, but any one that you know about should be recorded or covered.\n\nThough if what he was saying was more along the lines of getting working code that covers all the cases you can think of rather than spending weeks trying to come up with all the weird possible edge cases, I can agree with that. There are always going to be edge cases you can't think of until they happen when you have thousands of users. You need to have a balance.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "PM here: this is the way. You need to get organized. My method:\n\nWrite down all the features* of the app\nBreak down into rough pieces* (1 work session maybe? (edited))\nWrite 5-10 words per feature, saying what it does\nPrioritize\nHigh = needed to keep my money\nMid = needed for a happy client\nLow = all the rest\nScrap everything except high features\nProfit\n\n*aim for 5-10 features and 5-10 pieces each, put in an Excel file or a to do app or Trello or something.\n\nEdit: good for you OP !",
            "points": "62 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Since many people are going to read this as \"cut corners to get to the endpoint\", that is not what is being said here. OP is saying \"do what you were hired for first, then use the remaining time you were paid for to make it nice\".\n\nUnless you were hired for a design/branding job, your key metrics/deliverables are functionality. Most companies would prefer a functional product that looks bare to a beautiful one that doesn't do anything; and if you provide the former they're probably more than glad to offer an extension to beautify, as long as it's clear you didn't do the bare minimum required to cash a check.",
            "points": "8 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Jesus brother, you just dropped so much knowledge so casually.",
            "points": "7 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "This is the best advice here ^",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Managing poorly defined requirements and associated scope creep is super hard even in an enterprise setting. That's with massive teams working together. Consider yourself a boss for doing that process mostly alone.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Ya I think this is the reality of freelancers they overlook is you gotta put on your project management and engineering management hat on as well.\n\nYou can’t just blindly accept what the client wants just because you can build it (a good client doesn’t want this either in my experience)",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Exactly this. Works for everything else too, including personal projects.\n\nFocus on patterns that prioritize extendability, and follow DRY and KISS principles.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Great advice!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I want to add that I've already defined the MVP features, but the client insisted that Google autocomplete should be considered an MVP feature as well. The reason is that the software becomes unusable without valid addresses",
            "points": "0 points",
            "children": [
              {
                "comment": "You need to base the complete scope of the project on a signed document before starting to dev anything. If the document didn't specifically talk about some address autocomplete then you don't need to do it and it might be billed extra, after the MVP is delivered, based on another quote or else.\n\nIf having valid addresses is mandatory and the customer didn't know about the possibility to use features like Google for that, then it's your job to talk to him about it and all it implies (extra monthly costs, extra dev time, etc). As a freelancer you are responsible for the technical analysis as well as the development.\n\nNow I guess it's a bit late in your case but remember that for future assignments.\n\nI hope you're making good money out of it though because developing a saas from scratch is a hell of a tough piece of work.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Time spent on this task: 5 hours. I wanted to finish this task today and failed. Some of you probably would have finished this task in less than 1 hour.\n\nnah, it happens. It just feels like you could have done it in an hour after you've finished because you have the solution in front of you now. Just because what you're working on doesn't seem complex on the surface, doesn't mean that the integration into your current application doesn't involve complexities. Next time you'll know what to look out for and be able to do it even faster.",
        "points": "239 points",
        "children": [
          {
            "comment": "OP: I would’ve spent at least 1 hour doing requirements gathering and deciding on the best implementation. This stuff takes consideration. A day to implement address auto completion in a custom app is fair imo. Requirements, db, backend, fe.",
            "points": "41 points",
            "children": [
              {
                "comment": "OP: I would’ve spent at least 1 hour doing requirements gathering and deciding on the best implementation. This stuff takes consideration.\n\nMost of this stuff doesn't pop up until you are in the hole.",
                "points": "26 points",
                "children": [
                  {
                    "comment": "25% of the time, the documentation is so opaque, a task taking 15 minutes took 2 hours to research.\n\n25% of the time, the documentation for foo is excellent, but when you implement it you discover you need foo1.\n\n25% of the time, the documentation for foo is excellent and the task trivial, but it does not mention the prerequisite bar which is hard.\n\n15% of the time the implementation is actually easy, but you went down the wrong rabbit hole first and didn't realize it until you touched grass.\n\n10% of the time the documentation is correct and complete and you've had just enough coffee and you knock it out in 1/4 the time expected.\n\n(And it doesn't help that we all estimate like the last result is a given.)",
                    "points": "13 points",
                    "children": [
                      {
                        "comment": "I feel like you can see me…",
                        "points": "3 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "Yup, I have looked at the google maps API and thought \"man, that looks easy! Check out these examples it gave! It's gonna be easy combining these 3 features I want in these code examples!\"\n\nThen I find out it is not so easy but I've already invested into it and I'm weighing the sunk cost.",
                    "points": "14 points",
                    "children": [
                      {
                        "comment": "Google maps api is remarkably difficult. Their docs aren't great either",
                        "points": "13 points",
                        "children": [
                          {
                            "comment": "Also you don’t factor the good stuff is behind per use paywalls… so the little app I wanted to do for fun would get REALLY pricy if I ever got a DDOS and some server hit my app hard.",
                            "points": "5 points",
                            "children": [
                              {
                                "comment": "I spent like $500 on Google maps api in one day. That is where I got my Reddit name from. I was doing some routing and needed a distance matrix. Little did I know one API call was costing me $12.",
                                "points": "14 points",
                                "children": [
                                  {
                                    "comment": "Wow! That’s crazy any call costs that much.",
                                    "points": "4 points",
                                    "children": [
                                      {
                                        "comment": "Most expensive Api I’ve ever seen or used to this day. The cost increases by like 4X every time the locations double in size",
                                        "points": "2 points",
                                        "children": [
                                          {
                                            "comment": "I can’t fathom a use case where $12 per use would be worth it. You would practically need to approve every use so some employee isn’t messing around and bills you a thousand bucks.",
                                            "points": "4 points",
                                            "children": [
                                              {
                                                "comment": "",
                                                "points": "",
                                                "children": [],
                                                "isDeleted": false
                                              }
                                            ],
                                            "isDeleted": false
                                          }
                                        ],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  },
                                  {
                                    "comment": "We use distance matrix at work and our homolog costs ramps up pretty quickly.\n\nOne of our jrs had a 1 month salary worth bill to his account because he was using his API key to test locally.",
                                    "points": "1 point",
                                    "children": [],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "Tell this to my delivery team that want accurate planning done in a 3 hour timebox oh and btw you probably have 4-5 stories to plan in that timebox and ontop of that one of them is likely to be a L / XL sizes story.",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "I spent 5 hours trying to implement a drag-drop to reorder elements in a list functionality for my personal project. After I failed a few times I found a great library that does exactly what I need with minimal set up. I could now do that task in 15 minutes, and I learned more about what to evaluate when choosing a library so I can fail faster next time.\n\nTwo years ago I wouldn't have dreamed of implementing a feature like this.\n\nFive years ago I wouldn't have dreamed of developing an app at all.\n\n\"Experience is knowledge you gain right after you needed it.\" OP has an example of the pains of gaining experience.",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "20 years dev here. 5 hours for that task is reasonable.",
            "points": "8 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Yeah pretty much 100%. Today I spent 10x longer than I should have making sure icon hit boxes on an app were perfect and consistent (they now extend beyond the graphics on smaller phones). I often spend a bit long trying to find perfect and elegant solutions when I probably don’t need to.\n\nAlso… some days our brain is better suited to some tasks over others (i try to feel my mood out and if my problem solving or engineering powers are weak… I’ll do simple shit like organise files and tidy up code so the next morning I can hit the ground running again.\n\nSo much of coding efficiency is about pacing and not beating a wasted horse (yourself).",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Work on completing the big picture features — the actual MVP — before you spin your wheels wasting time on the smaller stuff. I guarantee your customer doesn’t care about address auto completion. Put the onus of entering a correct address on the end user and add the autocomplete when literally everything else is done.\n\nYou need to stay focused on the business value of the core features you’re working on. What you’re engaging in is “yak shaving” — you’re wasting time on features that the customer likely doesn’t care about at all.",
        "points": "36 points",
        "children": [
          {
            "comment": "I want to add that I've already defined the MVP features, but the client insisted that Google autocomplete should be considered an MVP feature as well. The reason is that the software becomes unusable without valid addresses.",
            "points": "3 points",
            "children": [
              {
                "comment": "If you have to pay back everything if you fail then you have to be very careful about feature creep. They obviously want you to do as much as possible, but if it risks the whole project that you signed a contract on then you need to be able to say no. If it's not stated in the contract then it's not required to complete. Customer input is great, but they need to respect that you need to focus on what you need to complete to finish your contract.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "It's odd everyone assumes OP is adding autocomplete without it being an actual feature. Why would OP spend 5 hours on it anyway? Autocomplete is not a \"polish\" feature. It's often a requirement when it's critical that you have correct / accurate addresses.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Being a good dev is all about building your “toolbox”. Now that you’ve done that 5 hour task it’ll probably take you <1 hour next time. That’s one benefit on niching down in client work, you can build out your toolbox of things you can do fast/easily and reuse it through all your work.\n\nBut I can tell you I can think of a single project I’ve worked on where something that was supposed to be simple didn’t end up being unexpectedly complicated, especially when integrating with third party tools, just something you have to deal with when it happens.",
        "points": "13 points",
        "children": [
          {
            "comment": "So true. It takes time. You gather something from every project you work on and those will be helpful in the future.",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You sound in over your head. What you probably don't realize is that a lot of the hardest work comes when you think you're done but you have to start chasing bugs and ghosts and security holes and cosmetic fixes and production outages and performance tuning... etc.\n\nThis isn't a reflection of your ability as much as it is your inexperience. I would develop an exit strategy now.",
        "points": "39 points",
        "children": [
          {
            "comment": "I agree, I have a decade experience and I felt nervous reading OP.\n\nI would at least be transparent with the client about uncertainty so they can salvage what’s left if it’s not gonna work out\n\nOP please update us in a few months",
            "points": "3 points",
            "children": [
              {
                "comment": "u/Ikeeki I will!",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Time spent on this task: 5 hours.\n\nRecently, in a 3rd-party community-focused software, I was tasked with implementing a custom landing page instead of a rude 404 when accessing hidden groups a user doesn't have access for. Took me over a day.\n\nResulting code was 28 lines (7 of that a docblock) and a simple template file. Sometimes it's just like that. As long as you learn along the way, it's all good. I've been in the business for over 20 years now and I still encounter challenges and find ways to be more efficient next time around.\n\nYour problem rather seems to be\n\nand it's just very big – maybe too big for me.\n\nBeen there, done that, ragrettet it. No weekends, all-nighters, little to no sleep for days, too much Red Bull, anxiety of failing.\n\nIn the heydays of web-to-print, I decided to take on a project that would eat PDFs + XML and via GhostScript, PHP, XML, Adobe Flash + ActionScript would generate fancy flipbooks. Searchable, interactive, complex navigation. Clearly too much for me, and I can still vividly remember the night shifts and near-breakdowns. But I delivered. And boy, did I learn my lesson. That was 15 years ago.\n\nIt's ok to take on projects which seem technically challenging or that require a stack that's unfamiliar. But only if you can manage the scope. Can you realistically deliver on time? If you can't: Decline or set realistic deadlines.\n\nAnyways, my man; most of us have been there at some point. It's ok to feel the way you do. It's just a rough time where you need to power through. But most importantly: You'll learn an importan lesson and hopefully avoid these situations in the future.\n\nUgh, that got longer than I expected. Thanks for coming to my TED talk.",
        "points": "11 points",
        "children": [
          {
            "comment": "That is a wild project you took on, the fancy flipbooks. I wanna look at it if you still have it arpund somewhere and don't mind. The stack sounds giddy and cool",
            "points": "2 points",
            "children": [
              {
                "comment": "Unfortunately not. I looked through some backups but it's been just too long ago. The Flash/ActionScript part was actually wild and the hardest part.",
                "points": "",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "If you have the ability to learn and push through adversity you have what it takes to be a good developer. The real issue here is that you took on a huge project with a short deadline and now you are experiencing burnout because you were in over your head thinking you could handle it.\n\nI'd stay away from freelancing apps because most clients expect Snapchat with a $15,000 budget and the turnaround time of a static website.",
        "points": "25 points",
        "children": [
          {
            "comment": "Yup that and most people don’t have the project/engineering management experience to handle bad clients and convey ESTIMATES.\n\nI feel for OPs anxiety levels but this is a logistics issue.\n\nIt’s like having a client talk directly to a programmer and the programmer just goes off and does the thing. Rarely ends well",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Maybe you need help with the PM work, not with code. Organizing the tasks, reviewing priorities, defining the deliveries, etc.\n\nThis way you can focus on the deliveries that will actually bring value to the client and don't spend time with details like the autocomplete.",
        "points": "13 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "\"fake it till you make it\" doesn't work when other people are depending on you. It's the \"make it part\" of that you are falling through on here.\n\nI know reddit talks down about working overtime but if a task you 4 hours instead of 1 and you don't want to pay back all that money... then it looks like you will be working nights and weekends. The more you work with it the easier it will get.\n\nYour situation is the main reason I am terrified of freelance. I have been a full stack developer for 6 years and a front end developer for 10 and I am still terrified of that situation that I may not be able to solve.",
        "points": "11 points",
        "children": [
          {
            "comment": "I also work freelance, this is why I charge by the hour. I tell my clients the limit of my skillset beforehand, how there may be unexpected problems. If they ask me for something I haven’t done before, like in this case of the autocomplete, I tell them how I’m going to have to check google and chatGPT and they totally understand and pay me for all of it. I am always honest and never charge for hours I’m not literally seated at my desk working.\n\nYes many clients refuse to work with me under these conditions, but I still don’t lack of work. The added benefit is I don’t really feel stressed when something takes longer than expected. Not my fault that some library has shitty documentation. I’m a good programmer but I can’t have experience with every single library. I’m usually making full stack apps with tons of features - can’t imagine there’s a dev in the world who has used ALL of these stupid 3rd party services and APIs the client has asked for.\n\nI just keep the client updated and provide estimates when they ask. They have come to learn that it always takes 30% longer than I estimate and they just factor that in. You’re not a bad programmer. Making a full stack app is hard.",
            "points": "1 point",
            "children": [
              {
                "comment": "Samesies on everything. I would also like to add that once you're involved in freelancing, you network with other freelancers and other specialists. You start kicking work to each other and know each other's skillset. So when all is lost and you're banging your head off the wall, you just pay the dude you know can do the bit you can't to save the day.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Same. A recent client had me set up all their stuff for Google Analytics, they had an in house data scientist, so I though we'd be working together, I'd be sending the data to tag manager, they would define what they needed and set up GTM and GA. Turns out they were a grad with no technical experience. I explained very clearly that I had not used GA since they changed the whole product with GA4, and that it would take me a lot longer than the coding side would, and if they had any other contractors with experience it could be faster/cheaper to use them. They were happy with my honesty and trusted my skills in other areas meant I would be able to get it done, even if it took longer. I got paid more to learn the product along the way, they got it all done, win win over all. The extra cost of my extra hours was probably less than them finding a contractor just for the GA side anyway.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hey OP, I get this feeling often especially when stuck on something that seems complex but the solution ends up being so simple.\n\nTake breaks, theres no harm in stepping away from the screen for 10-20 minutes. Go and make a coffee or your beverage of choice, get some fresh air and go for a walk. 9/10 times you'll return after your break and the solution becomes clear.\n\nI work for a company and was dealing with a ticket, following through every step of the process and I spent over 2 hours looking at it. I roped in a senior dev, and we both sat there for ages and worked through it. It turned out that the cause was something that was happening at the very end of the program that we both missed.\n\nIt happens, and at least you have now learned something for when you encounter a similar issue in the future!",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "15 yrs experience w/ about 50/50 split between freelancing and 9-5.\n\nMy advice:\n\nChin up! As devs, it is hard to wrap our minds around the fact that what we do is difficult and not just a \"read the instructions and type the letters\" kinda thing. So cut yourself some slack there. You didn't meet what you thought was a reasonable amount of time to get something done. Legit congrats for pushing yourself and setting high standards, but don't let that drag you down. Take a break - either work on another feature/issue, or better yet, take a real break away from the computer. Come back to this w/ fresh eyes and you're better off than you were before.\n\nNext, I can tell from your post that we share some similarities. I'm a self taught \"full stack\" web dev. I wouldn't have had the career I had, and the position that I do now, if it wasn't for plunging myself into situations like you are in now - \"the fake it til you make it\" approach. 100%, as stressful as it can be at times, I believe this the absolute BEST way to gain your experience. Coming out out this, not only will you know more low-level details about the APIs, but you'll have higher level experience w/ project management.\n\nFinally, a repeat from above - this stuff is hard and it is impossible to know everything about everything. Keep grinding, do what you gotta do to get through it. You'll come out better on the other end.\n\nGood luck!",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I've been a Vue fanatic ever since we ditched React three years ago. But we use a more traditional PHP or Python backend and usually pair it with MariaDB. But one thing I've noticed is there are times, particularly when dealing with things like external scripts from Stripe and Google Maps, that it's easier to simply jump out of Vue's reactivity loop and just rawdog it. Once you understand how Vue's virtual dom works, you get an idea of areas where it's perfectly safe to bypass it without unwanted side effects. The last time I did Google address autocomplete in Vue, I just manually injected the applicable external scripts and if I remember correctly just used an input ref and basically did everything in vanilla JavaScript. I didn't bother with using any dedicated Google Maps Vue libraries for it. But I suppose it all depends on what your particular needs are.\n\nEither way don't think for a moment that such a thing is an hour's work. That type of stuff only takes an hour when you already have all the boilerplate functional on a previous project. There's nothing abnormal in this profession about seemingly simple shit taking up half a day. I've had mundane CSS crap that I supposedly mastered 10 years ago ruin entire days.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don't be discouraged when feature x takes you longer than expected, there's been times when just before starting on a new feature I've thought to myself \"oh boy, this is gonna be a tough one\", twenty minutes later I'm done, then there's been times when I've thought \"oh this shouldn't take too long\" and I'm there hours later, hands on my face wondering what the heck I'm doing, thinking to myself this should be easy, I'm crap at this, no other developer would have taken this long to implement something so simple, I'm bloody useless etc etc  \n\nI think your issue is that you've bitten off more than you can chew so when something takes longer than expected there's extra panic because your already going full throttle as it is, how is this client? Would they not give you an extension? If not you could try and offer some kind of financial compensation so they (hopefully) accept a delay, not ideal and you may have to dig into your own pockets but it would save your sanity atleast.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "As others have said, this doesn't sound like a problem with your programming, since you seem to get through all your problems. This sounds like a problem with project management.\n\nLearn from this, and maybe take some time to research some better project management methods. Always structure your work to focus on core functionality first and foremost. It's better that you can deliver something that might be ugly and simple, but actually works and fulfills the fundamental functionality in the contract, on time. A customer is always willing to work with you and be flexible if they can see something actually working.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "That's a tough one, I've been in your shoes and being on your own while a client relies on you is a hard one. Also, having this feeling that something should've been done way quicker is wild, been at this dozens of times and you feel you just get behind your schedule more and more.\n\nWhat I did in such situations:\n1. Spend a few hours on properly planning the rest of your project\n2. Make sure you only do stuff that is really necessary (tbh adding address validation does not seem necessary for a first version of a product, but I don't know enough about the overall scope and circumstances, so I might be wrong)\n3. Do the bare minimum work so the client can't complain about not doing enough work\n\nBe honest with yourself and very strict— if a feature looks like polishing work (no matter if it's validation, or design-wise) do not do it.\n\nAlso, don't forget, you only get better when taking on hard projects, it's tough while in the middle of the project, but eventually you grow from it, can take on bigger projects, you get better at estimating larger scopes and you can hopefully charge more in the future.\n\nKeep it up, you're doing great!",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Address validation is a nightmare.\n\nI've written four modules over the years using a mix of about 7 APIs including the Census API, USPS, UPS, Amazon, Google, ArcGIS, and others in order to get Census Block data. We even partnered (or paid? I don't recall which ) with a company that was the official data source for the agency we were reporting to and even they only had about a 96% accuracy (my hot-garbage multi-API module I wrote got 98%).\n\nNone of them really shine. You'd think Amazon would be really good at it, but oddly enough it was one of the more mediocre (this was ~4 years ago, maybe its gotten better?). Every single one of them has their hang-ups and quirks once you get 10 feet outside a designated city. There's an entire county in CA most can't handle, never mind Census Designated Places (CDPs).\n\nIf anyone tells me address validation is part of anything, I immediately add a week to the project.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I have been programming for 40 years. Full stack development for 25 years. I didn't understand a single word you said.",
        "points": "2 points",
        "children": [
          {
            "comment": "Is that sarcasm? Have you been under a rock for 25 years?",
            "points": "0 points",
            "children": [
              {
                "comment": "Not sarcasm, but hyperbole and trying to comfort OP a bit.\n\nII just believe I haven't had to do anything like those functions, and would have to learn a lot to even start, Nuxt3? Striper?\n\nSo far, I can do anything I'm asked or think of in C.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "If your main concern is finishing the basic product on time at all, do not be putting your effort at this point into extra qol features that are not part of the actual contractual requirements. Take some time to step back and map out Exactly what is barebones Needed to complete the raw basic requirements, and work on that. Descoping isn't failure, it's how any big projects get done either as individuals or on large teams",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds like a total mess. You gotta build in slices get a small portion working well then scale",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Your code-skills are not the issue but your organization methods, even the worst programmer will finish projects if they have organized timelines",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I mean Nuxt and Supabase lift the heavy weight already",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is auto complete really a must have feature for the project you're working on? Doesn't sound like an MVP feature to me.",
        "points": "1 point",
        "children": [
          {
            "comment": "The client insisted on making this a MVP feature, even if it causes some delays in the project. The reason is that without valid addresses, the application would be unusable",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I just hope you write unit tests for this because it sounds huge and testing eveything manually after refactoring it (and you will do it for sure) sounds impossible",
        "points": "1 point",
        "children": [
          {
            "comment": "First get it working, then worry about the unit tests.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Projects take a long time - there is no one fix to it. I’ve been working on homework with a friend who is far more advanced than me so it forces me to learn / keep up and gives me more confidence. Is there anyone you can collab with?",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You might not be the greatest programmer but you are unlikely the worst also. That bar is pretty low let me tell you.\n\nA bit of advice:\n\nStop worrying about how good or bad you are vs others. It isn't going to fix the problems you are facing. Only one thing will do that is working on them.\nPlan. I've worked on some massive projects over the years. You know what you want to build. Write out what is needed for it. Do a flow diagram of how the client server and so on are supposed to work. Give yourself a general layout of what screens will look like. Then go back and break all that down into what is needed to make each of those functional.\nCreate a check list. If you get frustrated with something and have a bit of difficulty and are waiting for people to get back to you on one section start working on the other section. This helps if your project is well organized.\nOrganizing a large project. If you give everything a place based on hierarchy and position/relation it will be easier to find something and to manage the project. Front end stuff is in front end back end is in back end app is in app, interface is with interface... Put utility code in with each other. Don't have two unrelated piece of code in the same area. Don't over clutter a file. I'm sure a few people can add to this and have their own methods. Do what works for you. Just organize it so you can find stuff.\nAsk questions. You can pretty much guarantee you aren't the first person to encounter an issue or not know how to do something. Stack exchange, reddit, other forums, discord all can be useful. Learn to use documentation. Often APIs have a good bit of resource and other websites. You already mentioned videos. But sometimes just asking is faster.\n\nYou will find by working on the system in increments like this will see progress which will make you feel better. You won't be as daunted by having a huge task in front of you, you will be more focused on solving smaller tasks that seem less insurmountable. You can also plan and schedule them better.\n\nIn 2011 I got the bright idea to create my own social media site. Called paidtopen. (Paid To Pen). The site worked fine just couldn't get people to it. I didn't use any large api's I coded everything myself in php, html, js, and css. It had the full account system, with security features, email, it had an advertising system, users could monetize their own pages or allow the site to monetize them and then get paid by the site. Users could generate news articles, discussion, chat, it had a full search system, it had localization and the ability to search by country or region or city for articles, and a good bit more. Using the method above it took less than 2 months to create it. https://web.archive.org/web/20110203050434/http://paidtopen.com/",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I think you and your client are in for a rude awakening if you aren’t even sure how to complete the project, let alone in the estimated time\n\nDoes your client know you’re winging it and your confidence levels about the project? If it’s imposter syndrome then I’d disregard but if you’re actually falling short on a frequent basis I’d tread carefully.\n\n“Faking it till you make it” is much harder when you’re solo and only have you to depend on.\n\nPart of being a freelancer is not just being a coder, but also being a project and engineering manager rolled into one and there are a lot of alarm bells going off in my PM/EM senses\n\nWith all that said I think you got a handle on this project, you just gotta lean more into your PM/EM roles and ask yourself what you truly need to deliver to make the client happy.\n\nDeliver the mission critical stuff first to prove the whole vertical works.\n\nAnd make sure to deliver frequently and piecemeal because 9/10 times you’ll end up changing directions a few times while building because writing software is hard and I’m guessing your clients are not project or engineering managers :)",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You don't suck, you just have less experience than you need to make this particular task easy. It'll come; everyone is somewhere on that continuum.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Two words, tracer bullets: The Power of Tracer Bullets in Pragmatic Software Engineering\n\nI would also recommend reading The Pragmatic Programmer if you haven’t already.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sometimes it makes me wanna smash the computer but the dopamine fix from completing the task at the end is always worth it.\n\nHow long you got left on it do you think? Don’t try and perfect it, that’s what I’ve learnt. It’ll never be truly done. Plus they’ll hire you again to make changes or let them suggest some differences then you say it’ll take so so longer",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I wrote 12 lines of code all day today. Yesterday I almost completed an entire feature estimated to take the whole week.\n\nIt’s not about how much progress you make in a day, it’s about moving forward and crossing bridges as they come.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sell the remaining contract off to a developer with more experience. Have them fix it and security audit it, then learn from what they do.",
        "points": "4 points",
        "children": [
          {
            "comment": "What sucks for OP is it's gonna cost him a good chunk of what he even made on the contract, maybe more.",
            "points": "1 point",
            "children": [
              {
                "comment": "I have a feeling from lack of experience that whatever estimate is way off and the next team will want more. So yeah it'll cost him probably all he made. Best case client accepts the exit and op loses what he's made and nothing more",
                "points": "0 points",
                "children": [
                  {
                    "comment": "It’s tough because even then a huge loss for the client because that’s time they can’t get back. They would have to start over with someone new and that would put them farther behind schedule than they already are.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Hope for the best for op. I've been in an exact situation and luckily had a network to fall back on and the client was ok with the full refund and time lost. The team that took over finished the project last I saw.",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Yeah. It’s tough because in order to be a freelancer and get the client you can’t show even a fraction of doubt or they will go with someone else.",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "So so true you can't show a fraction of doubt. I've heard this before: if you don't believe in yourself then who will.\n\nIn freelance you have unknown unknowns and you have to have enough grit and some skill to get past those. To me it is very hard to fly solo in this world and having a network to bounce ideas off of is essential. Or maybe it's a skills issue hahaha",
                                "points": "0 points",
                                "children": [],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "GPT4 is your friend",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "One day you will fight a bug for hours just to find out you have a typo in a property name or something like that. It happens.",
        "points": "1 point",
        "children": [
          {
            "comment": "It was only ONE time for you?? 😅",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Damn, the amount of time I've wasted on stuff like that...",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Will not completing it be bad for your reputation? Will this company have more work for you in the future? Maybe learn your lessons, make no money, and pay for help to be sure it’s done, knowing it’s an investment in the long run.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I don't know what to say to you but I feel you. Also around the same experience, building a SaaS for myself and I'm having exactly the same problems.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yeah, I mean 1 year of full stack development does not a SaaS creator make.\n\nWe obviously don't know what all the functionality is. I generally recommend going as bare bones as possible to start. And planning the project out as a phased implementation. This allows the initial phases to be smaller and more proof of concept. Allows you to focus on the specific functionality the client wants, before expanding it out to a full service.\n\nIt also allows the client to use you for an MVP of the project and if you end up over your head or don't like working with the client, you can part ways.\n\nIf you've already hired freelancers and are still running into this problem, you need to look for freelancers with experience in building a SaaS, or platform style architecture. I might go do far as to look at farming this out to an agency, before throwing in the towel. Especially if you would have to pay back everything anyway.\n\nThe last resort is to connect the client to a third-party that will take over the remainder of the project, and you exit.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I don't know, I haven't finished my studies yet, but all I can say is cheer up! I already feel the same way about my student projects, so I can't even imagine what you're feeling. Anyway, look back at where you've come from: 3 years ago, would you even have been able to implement what you've just done?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Impostor syndrome really is a bitch uh. Slap that bad boy outta existence mate",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I've been a web developer for 6 years, focusing on Frontend for 5 years, and I've considered myself a Fullstack Developer for 1 year.\n\nIt sounds like the things you were struggling with were not Frontend issues. If you've only got 1 year experience doing non-Frontend webdev, then give yourself a little grace on that stuff. Remember how you were with Frontend at 1 year of experience, and imagine how long it would have taken you to do the frontend work you've done for this job so far.\n\nBe patient. It'll get easier. Keep going. You spent 5 hours on a problem, but I bet you learned some key lessons in the process and I bet that next time it will be a lot less than 5 hours.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I have to make a lot of guesses here so forgive me if this is wrong - but 1 year focusing back end? It just doesn’t sound like enough time. I have no doubt you’re great at the front end, but the back end is the system. For simple projects, sure just chuck a couple of simple APIs and a few tables and you probably don’t need to be too experienced to get it basically correct and most of the system is in the front end. But a whole SaaS application in my mind would have a “proper” back end with all the fancy stuff e.g. a well designed data model, events and queues and all that.\n\nI can’t shake the feeling that you may be underestimating what can be involved in designing a whole system like you have been tasked with.\n\nThat all being said, this is based on what i have to guess from your post. I have no idea what your system actually is and maybe your back end really isn’t the major aspect here.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don't be disheartened, this is a natural part of the software development process. A lot of good advice has been given, focus on the fundamentals of the product and you can polish it at the end. Stay positive, and don't let it knock your confidence. Best of luck with the project!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "As a programmer, we will always be met with new challenges. It's your responsibility to be confident enough and knowledgeable enough to blaze a path forward, even if you can't see it. You accomplish through planning, due diligence, and research, and ultimately, just throwing yourself at the problem.\n\nNobody learns anything by not being challenged. We all struggle to figure things out sometimes, and it's okay. Overcoming that is what makes us better devs. Many people here say you're in over your head, and that may be so, but you have a choice here. You can keep pushing and deliver the best product you can put together, or you can back out and let your insecurities win. I know the latter sounds kinda harsh, but it's not. Someone else's time and money is on the line, so I couldn't judge you for accepting that you're not good enough. But to an extent, it's a choice you can make.\n\nI've been in your position before, and I refunded my client because I realized the projects scope was far above what I could've managed on my own. Looking back, I feel I undersold myself. In the near future, I'd be responsible for projects just as expansive as a solo dev at a company and I never felt that I could just easily back out because I wasn't knowledgeable enough. People were depending on me, so I buckled up and figured it out. Sometimes that's just what you have to do, frustrations and uncertainty and all.\n\nAnd if you ultimately underdeliver and the client is not happy, it's not the end of the world. Offer to fix things up and be transparent. And if they take business elsewhere, live and learn and keep moving forward.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Been doing this for 30 years, every other project I question my skills and want to pack it in. Being a 'great developer' doesn't mean you know how to do everything, it's persisting until it's done then keeping going back for more.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I could have written something like this a decade ago (web developer since 2008). I suspect most of us have experienced this feeling, and not just once.\n\nFeeling this way occasionally is natural. There will always be tasks you're unprepared for or just new to you, which can cause self-doubt. Realistically, the problem space is vast so you're probably the first person to use these libraries and solutions together in this way, challenges should be expected.\n\nYes, some of us might have spent only an hour on this task, but not because we're better programmers. It's for the same reason you can solve it in an hour now – we solved it before in many more hours.\n\nHere's some advice, though:\n\nDo a research/experimentation phase at the beginning of the project. You likely knew early on that you'd need the autocomplete feature working together with the form and map libraries. I would have done several small experiments, like implementing a custom validation rule for the form library and another for the map features, etc..\nDuring this experimentation, I would have spent significant time on the libraries' documentation and code, researching new ones, or creating my own libraries.\nThis research and experimentation aren't a waste of time in my opinion. They allow you to finish the actual project much faster and with fewer frustrating problems.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I find doing small chunks of work is best for my own projects. Granted, I've never done freelance work before so having a tight deadline might make it impossible to tackle it that way. I would just communicate with the client about the scope of work and unforeseen circumstances. If they're reasonable, then they should be ok with extending the deadline. maybe show your progress so they don't think you're taking them for a ride.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds like you added a feature that was not necessary for GTM (go to market) try not to get side tracked on bells and whistles that can be added later. Stay focused on the core functionality and build off of that. It’s is easy to get lost in the cool ideas you come up with a long the way. I just went back and redid all my form validation for Authentication and Registration for the project I am working on now. Try not to get hung up on that stuff",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Ouch. Do you know javascript that you can build a suggestion box from scratch without libraries? If not, you really need to improve your javascript skills. Large projects like this it really requires to be able to build things from scratch. Not everything is a puzzle and if it is, you still need to program the missing pieces.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There are times I try hard for hours only to figure it on sleep. I got so used to it now I am taking frequent naps .",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Might help to zoom out a bit and cut your current scope by just focusing high-level. Do you have at least one solid complete user flow complete? For example, that might mean a user can sign up, create a project, and invite someone to their team. Something like an autocomplete input sounds very nuanced, maybe not even critical for success, and i would save those sort of things until the end so they don't get you hung up.Then at the end you can say \"well look, the whole project WORKS, it turned out my estimates were low, so its not POLISHED..\" and you can re-negotiate a fee to do all the polishing.\nThis is also why i always have a weekly check-in with my client to demo what i've done so far and what i'm doing next week. It helps me stay in check, we also usually come up with new ideas/questions i hadn't thoguht of before, or places i can cut scope.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Engineering estimates are always going to be wrong, don't beat yourself up over it. A lot of times there have to be compromises made in terms of what to build and how long to work on it. That is just the nature of this work. The best thing you can do is be honest with yourself and the client and find a path forward. As long as you don't give up, you will be fine",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I've also just learned about imposter syndrome.\n\nIMPOSTER",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Why not both? You can suck, and it can be hard :)\n\nAyoo, pause",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Well I don't know about the rest of the project, but I do know getting address autocomplete to work can be a huge pain in the butt, especially when you're dealing with different systems like Google vs. banks or something, and most especially when you have weird edge cases like international addresses, military bases, etc.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I have many days where the only progress was realizing how a complicated chunk of functionality needs to actually work (by attempting to write it and failing). The saying, \"third time is the charm\" is pretty accurate. Its understandable and don't beat yourself up over it.\n\nMy circumstances are a little different than a lot of folks though.. I'm working on my SAAS product. Its a lot easier to not fret over 'wasted' time.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "IMO form validation is the most tedious part of web dev. It always takes 10 times longer than you think",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "a Google Autocomplete input in my existing form to ensure that users enter valid addresses\n\nAs big as Google has gotten, I would still go to the ultimate source of truth for that functionality: the post office.\n\nThe USPS and Canada Post both have APIs that can be accessed for this functionality, and I am sure that the postal service for most any other first-world country has implemented much the same. The only wrinkle is if you do cross-border functionality, and need to swap out the APIs based on country.\n\nStill, congrats on getting this figured out. Sometimes you just need a little rubber ducky debugging to get yourself straightened out.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "After posting this 2 hours ago, I went for a walk and then got back to my laptop\n\nYeah, I found for myself that sometimes making a break actually can help you solve your problem in the long run, when you get back to the project!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You sound like a very competent and capable developer imo. You think people travelling the world think about how far they have to go? No. Focus on milestones, break the thing down into manageable parts. You sound like you're doing this part really well actually",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "When this is all over you are going to have to address your skills at sizing projects. You were likely the lowest bidder and just like the programmer on Jurassic Park, your client isn't responsible for your poor business decisions. I hope you kept track of how many hours you an others spent on the project when it is finished and you divide your investments and effort into what you bid for this project. If you come back with less than $80/hour you were providing a charity service. You are in business to make money so the development and delivery effort should not only cover your costs, you should make at least 20% profit on the project. If it costs you $80K to do it, then you should have charged at least $96K for the project.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Programming really hard, why pay well.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "happens to the best, today is simply not your day",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This happens to many of us. In the last few months i was working on a project where i have to get data from google big query for investment. I was new to trading concepts like rebalancing etc so first i had to learn the concepts , then comes the hardest part which was integrating snaptrade apis. So the apis only allow 1 order placement at one call, but my client had portfolios with 50,60 investments and i need to place all of them right away.\n\nSnaptrade has a limit of 100 apis per minute but they add seconds timestamp in api url and if you hit concurrently, you will get errors and none of the transactions will be completed.\n\nI made 1 second timeout promises, set conditions for errors like add failed transactions with details in array then count how many trades failed and then add throttle for 60 seconds if i get error before i hit api again etc. did all of the hard-working and still every time i get some type of error and end up cancelling the order. It was a nightmare and won't work on this kind of order again.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sometimes a task that should take 5 minutes takes an hour. Sometimes a task that you allocate a whole day to takes half an hour. Dev is just like that.\n\nWhen I'm feeling frustrated (and I'm not making progress) I take a break. Usually it gives me space to think of the problem in a different way and I solve the problem much easier when I come back.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "https://www.leansixsigmadefinition.com/wp-content/uploads/2020/04/Minimum-Viable-Product-MVP.jpg",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Today, I experienced major frustration, which made me feel really bad about myself. I wanted to quickly implement a Google Autocomplete input in my existing form to ensure that users enter valid addresses. First, I had issues changing the database structure, then the Vue Google Maps library had an issue so I had to switch it, setting an initial value didn't work, and then I had issues implementing a custom validation rule into the form library I'm using. Now, I'm trying to figure out how I can trigger the input with the initial values, which is just a formatted address string so I can retrieve the latitude and longitude values.Time spent on this task: 5 hours. I wanted to finish this task today and failed. Some of you probably would have finished this task in less than 1 hour. Now, I'm seriously wondering if I'm the worst programmer on the planet or if this is a struggle every programmer faces.\n\nMan you can't look at it like that when you are leading things. My answer here is that when you are in a position like it sounds like you are, you need to have your hands in everything and know when to back off and call it a day with certain tasks. You need to not get too discouraged when you fail at any one of those tasks.\n\nMultitasking is important. You need to devote your time and mental energy to any given task at hand but you need to try to avoid \"spinning your wheels\" on any of them. Some spinning of the wheels is OKAY. It really is. 5 hours isn't bad. It's not an absurd amount of time to spend on some problem like this. I've spent more. I mean, I've spent a lot more. And at the end it was worth it for me learning the technology.\n\nYou're in a unique position where it sounds like the project is uniquely dependent on you. Try to use your time wisely, but don't beat yourself up mentally when you waste 5 hours on some task you could have solved in a minute, had you known better. You didn't know better, and it sounds like you didn't have anyone around you who did. Take it as a win that you progressed on the task, not a loss, even if you didn't complete the task.\n\nThe longer you sit at any one problem without making some kind of progress on it, the more discouraging everything becomes. You need to have multiple things on your plate at any one time, that you can switch between. Not a lot of things, 2-3, maybe 4. The key here is that you are always making progress and that you aren't sitting there spinning your wheels.\n\nHit the gas pedal, and once you realize you're just sitting there spinning your wheels, and you're losing steam and the will to go on, that's the time you should switch to another task. Let your brain stew on the problem while you do something easier. Keep your focus on the smallest possible thing that you can find to accomplish to further your end ultimate goal. It's like building a pyramid. Block by block by block by block by block. Just focus on each block and ignore the insurmountability of actually creating the entire pyramid. Eventually you'll end up with a pyramid.\n\nAnd you'll avoid being discouraged while you're building it. These things you sit and spin your wheels at, I mean you should try to spread those out if you can. Sometimes you can't, especially if you're the \"top person\" who everyone else goes to for questions. But you need to just keep your eye on the prize and learn to sideline things when you aren't able to progress on them, and to not lose hope when they take a long time for you to actually progress. Eventually, you will, if you keep at it. If you can look around and see other people doing some cool thing with web dev technology, chances are good that you can too, with a bit of work.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Did I post this? Lol.\n\nJokes aside. I’m in a similar situation.\n\nFor me, clients say they want an MVP but instead of thinking functionality, I think aesthetics and UI.\n\nThis sucks because I can’t help myself.\n\nThe clients love what they see but it takes too long and their oomph wear off. Also, it’s not profitable for me one bit.\n\nDid I also mention I have hard time fully understanding a project? After many months of back and forth, then I’d finally understand it.\n\nDidn’t mean to steal the show.\n\nJust trying to say you’re not the only one going through this.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "organize your way to get it done faster to get feedback early. Then perfect it in customer’s schedule then you are fine.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Get the back end and function working then do all the front end shit",
        "points": "0 points",
        "children": [
          {
            "comment": "Facts, but then u find new workflows which need backend changes, it's rough",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm in literally the exact situation as we speak except I don't paid anymore till it's launched\n\nEdit: - Vue3 - Tailwind - Django rest framework - Postgresql - Nginx\n\nI would've used nuxt but i started before v3 came out\n\nEdit: stupid mobile formatting",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Don't get hung up on solving a problem a certain way, especially if you're rushing and you maybe.. didn't plan it out all the way.\n\nAsk yourself why you're doing the thing you're struggling with. In this case, trying to fill the input with a value.\n\nIs that really what you need to do? Or do you just need the coordinates? Because it's a lot simpler to get the coordinates for an existing address with an API request using the address string in the query, and then set the value of the input to the string separately for display purposes, without relying on the suggestions coming back from Google/updating the UI at the same time.\n\nhttps://en.wikipedia.org/wiki/Lateral_thinking\n\nIf you tend to churn a lot and code yourself into a corner, it might be because you 'ask questions later'.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Sounds like you don’t suck at programming as much as you suck at being a PM, which…is not the same job. Top comment deserves all the upvotes, keep trucking along with mvp and slate those extras as additional work",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "“Building a SaaS for a client” sounds up there on the difficulty scale.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Time spent on this task: 5 hours. I wanted to finish this task today and failed. Some of you probably would have finished this task in less than 1 hour. Now, I'm seriously wondering if I'm the worst programmer on the planet or if this is a struggle every programmer faces.\n\nOnly if we knew all the tools and the spec up front. don't feel bad about not doing speed runs on stuff you haven't used before.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It takes an hour just to plan a feature much less implement all that. Maybe in a vacuum I could do that in an hour but with pre-planning and setup. I've been working as a solo dev on a large saas for 3 years and the answer is to be more honest about what YOUR skills are. If it takes you all week to do that form with those features then they may reduce the requirements. Don't take it personally. If you had the knowledge and experience to go that fast, you'd also know just how rare that is.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Some frameworks and tech stacks are simply not polished/finished enough. It seems many of your problems come from the selection of the technologies used to develop your solution.\n\nI delivered successfully a project using Python's FastAPI, and after finishing this project, I consider SQLAlchemy a very immature library, lacking things that are standard in the PHP world. I can't take an ORM object, modify some fields and save it back to the DB. No, for some reason they decided ORM objects are all read-only. This takes away half of the reasons to use an ORM. I can write SQL myself, there is no advantage having to write convoluted SQL in the form of function calls if it is not going to reduce any work later.\n\nFastAPI is also incompatible with some simple things like using brackets in query variable names to denote they are arrays, and the funny thing is: that worked when I started doing the project, then some FastAPI update broke it, and the API users had to update the code because there was no way to make it work again with the latest FastAPI version.\n\nAnd this is an extremely popular library in an extremely popular language, which is supposedly easy to use.\n\nIn contrast, some other tools, not very popular, are extremely well-developed and tested. I am talking about QT Creator, using C++. In theory, C++ is harder to use than Python. In practice, everything is wonderfully documented, and everything works on the first try, and the QT extensions to the language, Signals and Slots are just better than any kind of callback functions.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This seems quite common. My advice is to don’t freak out. Just finish one part until it’s in a state with no apparent bugs and well tested and then move on to the next part of the app. Jumping between unfinished part is the worst thing you can do, I.e. loosing control of the bugs. You must also be able to handle the communication with the client in case you can’t deliver in time. It’s very common to miss deadlines. For me it’s rather a rule.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You suck at estimating how much time some tasks take to do. Time needed doesn’t equal complexity.\n\nA senior dev would have known that 3rd party libs can f you up and would have estimated at least 2 days for this task. Don’t worry just estimate more conservatively.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Today, I experienced major frustration, which made me feel really bad about myself. I wanted to quickly implement a Google Autocomplete input in my existing form to ensure that users enter valid addresses.\n\nStop right there. You are not prioritizing properly the work that needs to be done.\n\nFIRST you do the basic features, then you improve the user experience.\n\nIn a good team, you would have someone in a manager-type role that would prioritize your work for you. But you are working alone, so your job is not only programming - it's both programming and managing yourself.\n\nIt seems you are failing mainly at the managerial aspects of your job, NOT in the programming aspects.\n\nedit: you said elsewhere that the client is considering this as part of the MVP. That's unfortunate but is there a reason to prioritize this now vs. at some later phase of the MVP?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We all suck.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You are too inexperienced to be alone freelancer.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Ah it happens to everyone. The best I can say is, reflect on what slowed you down and learn from it for the next time.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You just described my mindset. And in my experience, there always is a need for workarounds. Never have I had a project that was a straight line. It always required compromises to varying degrees. And there will be parts you'll be shameful about... But as the saying goes \"better is the enemy of good\". If it works and you can improve it later, leave a TODO, and carry on. If you stubbornly refuse to leave shitty code behind, you'll experience a plummeting motivation and imposter syndrome.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You're not a fullstack developer.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "[deleted]",
        "points": "0 points",
        "children": [
          {
            "comment": "You've got some overflow issues on mobile",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Fake it till you make it.\n\nThat cash in your bank is gonna be fake soon.\n\nYou're looking for validation, taking the payment, and then failing at delivery for a multitude of ineptitudes.\n\n5 hours to change a feature that should be spec'd and concrete?\n\nClearly you have failed at what you said you would deliver. How would you feel if you paid all that money and now the dev that promised you all systems go, turns around and starts singing a different tune after eating through time and money.\n\nIncomplete work on a complete schedule merely shows you up. Better stop now.\n\nAnd don't say you didn't know, cause it was your responsibility to manage the project, and client requirements.\n\nOh they came with changes? Your responsibility, you too the money.\n\nOh libraries you picked had bugs? Your responsibility for not planning correctly, and not doing research.\n\nLong story short. Sit your client down and man up to your fuckup.",
        "points": "-6 points",
        "children": [
          {
            "comment": "Upvoted. Lots of toxic positivity in this thread. I'm all for positivity for an employee but freelance is a whole other game.\n\nOp doean't know how to manage the requirements and is drowning. He needs to do right for his client and pass it off to someone in his network or an agency to finish. Which most likely means a 100% refund. \n\nI've had this happen before. I faked it and did finish a SaaS product for a client but only because said client was technical and acted as a PM without me knowing it. Then feeling confident I took on another saas for a hands off client it blew up in my face, in felt like I was drowning in tbe ocean. So I contacted someone in my business network who had a small to see if he wanted the job which he did and then I refunded the money and passed the project along. Then I got a real job to learn real full stack.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I was thinking the exact same thing.\n\nWhen dealing with a developer I want to feel confident that they will deliver based on the timeline & budget we agreed to.\n\nOtherwise the dev should ask for smaller scope & deliver in increments.\n\nMaybe some project planning & management skills would have helped OP to avoid this situation.\n\nHopefully he learns from this for the next project.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "What kind of project is that? I am just trying to imagine the size and complexity of a project that would be such a problem for one person so I would not make a similar mistake in the future",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "it happened to me few times. If it's getting too hard for my automatic thinking, i usually just write about my problem and propose a solution to myself in note taking apps.\n\nand then get some coffee, relax a bit while reading the docs\n\nit works for me.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I appreciate this post, and the comments so much. I'm not freelancing (considering it), but I’m developing my first SASS product and I keep getting stuck trying to make everything perfect, while only realizing it after the fact. Getting better at catching myself, but it's been a slog. Thank you OP for posting and everyone for such thoughtful comments. 🙏",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can try wordpress, it's a nocode website builder without having to write html css javascript, it's demand and you earn slot of money, they use plugjn and ma older cousin can afford iphone 15 pro max right now because wordpress is his job",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You probably suck at coding, because WE ALL SUCK AT CODING",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bijnmg",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bijnmg/proposal_for_an_embassy/",
    "title": "Proposal for an embassy",
    "points": null,
    "comments": [
      {
        "comment": "As a former embassy employee i can share my thoughts from a client perspective. And can also share my thoughts from a human perspective! Since you are Confident in your skills and you can provide all the necessary services they require, feel free to offer your values and the fair price What your time and skills and deliverables are worth! Don’t be afraid of being cut for being too cheap. You can simply send a proposal with detailed price breakdown. If you find the total price is low because is an easy task for your level of expertise simply state that. Don’t let yourself be another one in the crowd! If you are asking your question is because you care! Most of embassies are cheap to be honest. Their budgets are not handled by their officers directly. Yet if you present a robust business case you may not only win this contract but many others in the future for them and for others as a reference. Price at a fair value: your time, expertise and quality of service and work! But on the developer side of things i got no experience so my comment may not help much! Either way! All the best!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Always add 25% for fudge factor. If they haggle then bring it down a touch. The best compromise is when both parties give something.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bij2mp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bij2mp/i_really_dont_know_why_responsive_tables_are_so/",
    "title": "I really don't know why responsive tables are so difficult to do",
    "points": null,
    "comments": [
      {
        "comment": "https://imgur.com/a/Inqiikw",
        "points": "7 points",
        "children": [
          {
            "comment": "I have decided to turn this Google Ad off. It won't bother anyone anymore.",
            "points": "5 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You wrote a whole blog to say use overflow and let it scroll? That's...not what people mean when they talk about tables being responsive.",
        "points": "3 points",
        "children": [
          {
            "comment": "No, I wrote a post to provide 2 simple methods to visualize tables correctly on mobile devices. One of the methods is indeed using overflow. Did you check the second method as well?",
            "points": "-4 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Using overflow is nice and all, but you didnt show how to do sticky headers or a sticky first column, which can be very useful when dealing with a lot of rows or columns, especially on limited screen real estate. Method 1 is only really useful for tables with small datasets the way you do it.\n\nMethod 2 falls apart if you have more complex table layouts.",
        "points": "0 points",
        "children": [
          {
            "comment": "Ok. That's a good comment, thank you for it. I'll update the article tomorrow and add sticky header and sticky first column to method 1.\n\nI'll also update the method 2. What kind of \"more complex\" layout should I use? Can you give an example of a more complex layout?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Are you kidding? Your ‘blog’ is not mobile responsive.",
        "points": "0 points",
        "children": [
          {
            "comment": "hm.. maybe you found something I didn't see.... show me",
            "points": "-2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1biilr2",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1biilr2/freelance_junior_portfolio_review/",
    "title": "Freelance / Junior Portfolio Review",
    "points": null,
    "comments": [
      {
        "comment": "The header and the developer text overflows on mobile. I like the color palette btw",
        "points": "4 points",
        "children": [
          {
            "comment": "Thanks a lot !",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The images are loading really slowly. Make sure to resize and optimize them. Use webp instead of png.\nI like it overall.",
        "points": "5 points",
        "children": [
          {
            "comment": "Thanks so much for the input",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You don't have any experience as a developer right? So you're not an \"experienced\" web developer, which is what your CV says. It also says you're proficient in React but I only see only one static website and I scanned its source code and got the impression you're still very much learning how to work with it. Don't take it the wrong way, but maybe you're a little early sending out your CV and portfolio. Try to build bigger apps that can showcase what you can do.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "some notes from a design perspective, in increasing level of nitpickiness (disclaimer: I am not a full-time web developer, yet, but do have a design background).\n\nall of these are on Chrome, 14-inch screen size laptop I think:\n\nthe row with your projects looks like an image carousel -- the Spotify clone project is cut off at the right side -- but does not have image carousel functionality, which is confusing\nthe GitHub and LinkedIn icons are shoved off to the side, tiny, and easy to miss, and so is the resume link; both are butting against the edges of the viewport with almost no margin in general, the design seems cluttered, random, and not unified\nalso this is very nitpicky but the GitHub icon is not aligned to the image carousel, which looks haphazard\nin general the project descriptions are vague. for instance, I don't know who \"Knew'98\" is or what this project is -- is it the artist's actual commissioned website? (if so that's worth mentioning!) what went into it?\nalso, this is a nitpick, but it's Knew'98 formatted like that apparently; you have it two different ways, neither of which are that, which is a little thing but looks haphazard\nwhy is there a scroll of random technologies and icons? many of which are fairly dinosaur in terms of tech unless you are specifically targeting, say, WordPress jobs\nit would be better if your resume opened in a new tab rather than auto-downloaded\nthe Contact button has a border around it for no discernable reason -- it doesn't do anything different from the rest of the nav links. or if it does, I can't tell. so my thought seeing it is, does this mean it's highlighted? will it pop up a mailto? confusing\nedit: the Home button also doesn't seem to work at all\nComing Soon is formatted like a link and has a hover effect but does nothing; the \"tags\" have the same typography as links but are not links\nthe \"Got a question or proposal?\" box is extremely narrow in a way that looks like a mistake\nyour name is tiny and \"Front-End Web Developer\" is huge, which seems like the opposite of what you want\n\nI could go on but I think you get the idea. there are just a lot of things like that, some major and a lot minor, all of which add up to a gut impression of unfinished work",
        "points": "2 points",
        "children": [
          {
            "comment": "i want to +1 that",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "[removed]",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What stack did you use to build? I am viewing on mobile and I agree with the previous comments on fontsize and the images not loading properly. What I would add though is an about section and change the Home link because its a one page website so no need for that link.",
        "points": "0 points",
        "children": [
          {
            "comment": "Just react - I had just used screenshots of my projects as images, but they load so slowly sometimes? And they’re really funny to resize",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Don’t know if you already fixed the overflow issue somebody mentioned, but for me it didn’t happen - iPhone XR iOS 17.3.1",
        "points": "0 points",
        "children": [
          {
            "comment": "Still happening for me on a 12mini",
            "points": "0 points",
            "children": [
              {
                "comment": "Safari developer experience lol",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "In mobile rn, I could scroll the projects horizontally but just a bit, don't think that should be there.",
        "points": "0 points",
        "children": [
          {
            "comment": "What device are you using?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Home link is redundant + it doesn't do anything.\n\nImages load in rather slow.\n\nPerhaps clicking the project card could open the live project or you could make the call to action more prominent.\n\nGithub, LinkedIn icon and resume link on desktop seem spaced too far apart.\n\nUnless you plan on adding something unique/complex, dump or replace the clone with something else.\n\nClicking on the form fields doesn't trigger a blinking cursor, I initially thought it was broken.\n\nAdd some flavour to the Beatstore project description. It's currently the only working project you have to show, sell it. What can it do? Who uses it?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Desperately need to optimise those images",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Here are a few suggestions for improvement, in my opinion:\n\nInclude GitHub links in your project containers: While having a live version is fantastic, potential employers or collaborators may also be interested in your code. Providing direct links to your GitHub repositories saves them the trouble of searching for it.\nAdd more context to your projects: Consider adding details such as:\nThe motivations behind each project.\nWhy you chose a particular technology stack.\nWhat you learned from the project. Providing this context helps viewers better understand your work and the decisions you made.\nImprove your styling: Currently, your projects appear to be aligned to the left, which might seem odd, especially since your introduction box is centered.\n\nI am from another country so we probably got different rules in terms of resumes but here are a few suggestions:\n\nDevelopment Skills:\n\nYour structure could benefit from some refinement. Consider organizing your development skills as follows:\n\nLanguages: Start with HTML, CSS, and JavaScript.\nTech Stack: List tools like Git, React, NPM, and CMS (e.g., WordPress).\nDesign Tools: Include software like Figma.\nMethodologies: Mention practices like Test-Driven Development (TTD).\n\nExperience & Projects:\n\nAvoid including unfinished projects in your portfolio. You want to showcase completed work that reflects your skills effectively. Ensure that all listed projects are finished before you begin applying for jobs. Since your portfolio already contains detailed project information, you may consider removing this section entirely.\n\nEducation:\n\nConsider adding \"The Odin Project Bootcamp\" under the Education section rather than listing it as additional training. This bootcamp is one of your most valuable educational experiences, so provide details such as duration and specific skills learned.\n\nOther:\n\nRemove the third page from your resume as there is nothing on it.\nIn general, I would suggest using a tabular resume format. It's simply more readable.\n\nOther than that its a good starting point. I really like your style.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Your goal is to get your foot in the door.\n\nYour websites goal is to present you as a working web developer.\n\nRight now it generally feels very “student.” But why? Because all students make this same one page site that should probably not have been made with React, that doesn’t tell much of a story, and that has three student projects in a little grid.\n\nSo, forget how it looks to start.\n\nWhat would an established web developers website look like? Often nothing. But we can do better than that. What does an enthusiastic web developer who’s always learning and digging deep and discussing and sharing look like? I have my ideas, - but first, what do you think? And what do you think employers want to feel when they find a great candidate?",
        "points": "-3 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bii6oa",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bii6oa/i_havent_spent_a_single_second_coding_since_2022/",
    "title": "I haven't spent a single second coding since 2022. I started getting back into learning web Dev a month ago and I feel like I get everything much better now.",
    "points": null,
    "comments": [
      {
        "comment": "Thats how the brain works. You learn something and it make no sense at that moment. But when you take a break for a while and do something else, your brain rewires on its own. Then when you come back after a few weeks or months, everything will connect. It's like magic.\n\nIt happens a lot to me. Thats why I don't pressure myself if I don't get it the first time.",
        "points": "59 points",
        "children": [
          {
            "comment": "Yup. I can try to solve a problem all day and wake up the next day with a great idea to solve it",
            "points": "7 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Retired test engineer embedded coder( hobby) use JS for tablet interfaces to my embedded projects. I take the summer off from coding each year. BUT I still actively look at related, and of interest videos, articles, and occasionally GitHub code during morning coffee.\n\nI wouldn’t say I am necessarily a better JS coder after the sabbatical . Perhaps a fresh perspective or better understanding of previous experiences better defines my re-engagement when I restart coding.",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I believe studies have shown taking breaks allows your brain to form stronger connections with what you've learned. As a software engineer, I try to give my brain plenty of time where it's not consuming or problem solving, to fully digest my latest learnings.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I was a PHP developer for 10 years before getting laid off in 2022. I was extremely burnt out by that point and decided to take some time off of coding and focus on other things.\n\nI've been getting back into it recently after barely coding at all since then (except a little bit of python to help automate some work things a few months ago) and I'm finally having fun again, I'm doing some refresher \"mini projects\" before diving into more advanced stuff. (And picking up Laravel)\n\nThe main webapps I worked on were all very old and used jQuery instead of any modern framework so I'm going to pick up vue as well when I want to get back into Javascript.\n\nI've also got ideas for flutter/Java projects lined up that I'm going to start tackling next.\n\n​\n\nSometimes taking an extended break can be really good for you.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "good thing you didn't get affected by the Imposter syndrome.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Can you think of some high level things you think you get better now?",
        "points": "1 point",
        "children": [
          {
            "comment": "I can't be very specific but I can write better, clearer code. I am not a programmer by any means so I most likely have just scratched the surface but it feels pretty good",
            "points": "4 points",
            "children": [
              {
                "comment": "I think your brain has structured all the things you've learned and it's clearer and easier now.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "On the same boat.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Psychological factors, they align the right thought process given time",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Learning to code is about pushing the boundary of what's familiar. First dive in, get completely lost, take a break, return, rinse and repeat, eventually you'll become a senior dev. You can exponentially boost the process by combining Twenty Rules of Formulating Knowledge with a spaced repetition tool like /r/anki.",
        "points": "-1 points",
        "children": [
          {
            "comment": "I like anki but not sure if its the best tool for learning to code… read docs/build things",
            "points": "2 points",
            "children": [
              {
                "comment": "Ah it's a balance. Personally I found it made me more mindful of of the information I was consuming while learning, then after I distill as much info as possible into non-deducible facts and turn them into Anki cards. Looking back I now realise I could have turned the first 5 years of my career into less than 2 years this way 😭.\n\nThe cards should really just be simple reminders crafted by you; like ~1 second to digest and ~10 seconds tops to answer. So no dense questions about syntax or logical problems; just lots of non-deducible facts to combat the forgetting curve and progress comprehension faster.\n\nFor example:\n\nFront: (React) When in a component lifecycle does this code run? `React.useEffect(() => console.log('Component has mounted'), [])`\nBack: Once, on mount.\n\nFront: (Javascript) [== or ===] compares the value and the type\nBack: ===\n\nFront: (Javascript) [== or ===] compares just the value\nBack: ==\n\nFront: (acronyms) DRY\nBack: Don't Repeat Yourself\n\nFront: (acronyms) HTML\nBack: Hypertext Markup Language\n\nFront: (HTML character entities) &lt;\nBack: <\n\nFront: (HTML character entities) <\nBack: &lt;\n\nFront: (HTML character entities) `&lt;` is an acronym of [...]\nBack: Less than\n\n\nWhether or not you want to memorise HTML character entities is your prerogative but the principles apply to anything you want to learn in life.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1bii4nn",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bii4nn/how_to_handle_authorization_for_an_existing_saas/",
    "title": "How to handle Authorization for an existing SaaS platform with Enterprise costumers?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1bihly4",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1bihly4/do_i_have_the_copyright_or_how_can_i_get_it/",
    "title": "Do i have the copyright? Or how can i get it",
    "points": null,
    "comments": [
      {
        "comment": "One thing for certain: uploading the code to GitHub does nothing for copyright ownership.",
        "points": "18 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Copyright questions are highly dependent on the country you live in. Contact a local lawyer.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Did you do the work for hire? Does your contract mention ownership of code? What did your IP attorney say when you asked?",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "/r/legaladvice",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Depends if they released it under a license that permits use of it.\n\nIf they just uploaded it the copyright is probably unchanged, but licenses specifically grant various rights to the code",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Pro tip: As a small dev never ask, look up, or even think about copyright or patents.\n\nI guarantee your website infringes on some 20 year old copyright/patent since patent trolls pretty much hold a patent for every type of code out there.\n\nIt only matters when your actually aware and have to answer under oath that you were knowingly violating a patent.\n\nBut for this situation your probably fine, if he’s threatening you lawyer up or just ignore it. If theres no licenses you can fork it to be petty but thats not recommended.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Not legal advice:\n\nYour friend uploading something to github does not make him the owner of it, nor does it grant him any special copyright ownership, nor does it prevent you from selling it to someone else.\n\nThat said, if you're selling this website to a customer, then you shouldn't put the entire source on github. It's like trying to sell someone a car but leaving the car parked in their driveway and the keys in the ignition.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  }
]