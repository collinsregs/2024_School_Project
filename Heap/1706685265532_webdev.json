[
  {
    "id": "t3_1afbwh0",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1afbwh0/tailwind_is_actually_pretty_great_to_use/",
    "title": "Tailwind is actually pretty great to use?",
    "points": null,
    "comments": [
      {
        "comment": "I agree, tailwindcss is awesome. I don't even remember when the last time I wrote raw css. After learning tailwindcss, I used it in all of my web projects.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1afb6hc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1afb6hc/having_a_hard_time_getting_a_new_job_please/",
    "title": "Having a hard time getting a new job, please critique my resume/portfolio",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1afa7wc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1afa7wc/what_are_your_opinions_of_this/",
    "title": "what are your opinions of this?",
    "points": null,
    "comments": [
      {
        "comment": "Looks like something one of my junior devs would send me, meanwhile I'm just making this face the whole time they're talking about it: üò¨",
        "points": "9 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "How about you start coding and just accept the fact that whatever plans you make now are complete guesses at best and flat fucking wrong at worst so you are just gonna have to be ready to rewrite and rebuild when you need to but at least at that point hypothetically you'll actually have something to rewrite instead of an idea and an over-thought tech stack?",
        "points": "4 points",
        "children": [
          {
            "comment": "so just use basic tools and dont worry about scaling, maintenance?\nWhat would that tech stack look like?\n\nWould it be html, css, javascript hosted on a apache web server on digital ocean alongside another server with node.js.\n\nand for auth I'll use nextAuth.js. For Database I can use Digital Ocean Managed PostgreSQL or MongoDB Atlas.",
            "points": "-3 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "ok seems like it finally got posted. So yeah im looking for advice, tips and thoughts on my tech stack im using for my startup. Let me know if its good or bad",
        "points": "-2 points",
        "children": [
          {
            "comment": "I‚Äôm by no means an expert but am using Supabase as part of my stack so can say that the experience has been great compared to some other tools. I am not directly in the AI space and I picked it based on my ability to migrate my already existing set of Postgres tables over and capture RLS immediately.\n\nIf you know JS then going with NextJS is a fine choice as far as I can tell but I am using FastAPI for my production apps since I know Python best and need to ensure features can be rolled out regularly.\n\nThe stack is going to be irrelevant to a certain extent and you should jump in where you find yourself the most interested.\n\nIn addition to the stack you gonna need to learn about Git or some other version control, how to use the command line, not to mention the difference between writing code for browsers, desktops and iOS/Android which have their own specialized languages.\n\nJump in head first and you‚Äôll find tools and tradeoffs that work for you after time.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I don't immediately see what any of the tech in the stack you mentioned has anything to do with AI. Am I missing something?",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1afa0p2",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1afa0p2/sussing_out_an_experienced_ux_designer/",
    "title": "Sussing out an Experienced UX Designer",
    "points": null,
    "comments": [
      {
        "comment": "Is Behance a place where people look for UX designers? That seems like a place for graphic designers and creative directors. UX is about goals - and isn‚Äôt necessarily visual. I‚Äôd be looking at my network and case studies that show process, research, iteration and outcomes. UX is glorified ‚Äúthinking‚Äù (which seems to be rare these days). RIP\n\nP/S do not contact me or you‚Äôll be reported‚Ä¶",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af9uee",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af9uee/rss_link_for_a_youtube_channel/",
    "title": "Rss link for a youtube channel",
    "points": null,
    "comments": [
      {
        "comment": "https://www.youtube.com/feeds/videos.xml?channel_id=<CHANNEL_ID>\n\nIf you're on Android, you can download Firefox mobile and the \"View Page Source\" extension.",
        "points": "1 point",
        "children": [
          {
            "comment": "thank you!",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af9ngm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://blog.ppresume.com/posts/introducting-the-new-auth-flow",
    "title": "The New Auth Flow for PPResume",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1af9kdx",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af9kdx/tailwind_cssui_or_ant_design_for_an_enterprise/",
    "title": "Tailwind CSS+UI or Ant Design for an enterprise CMS built from scratch?",
    "points": null,
    "comments": [
      {
        "comment": "I would recommend¬†Material-UI¬†and¬†Ant Design",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af9i2i",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af9i2i/how_to_host_my_site/",
    "title": "How to host my site?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1af7jdu",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://blog.stephaniestimac.com/posts/2023/12/css-media-query-scripting",
    "title": "CSS Media Query for Scripting Support",
    "points": null,
    "comments": [
      {
        "comment": "In other words:\n\nThe blog post discusses the introduction of CSS Media Query for scripting support in Chrome 120, enabling the detection of scripting language availability and adapting page content and styles accordingly. It details three values (none, initial-only, enabled) defining scripting support levels, providing practical examples of how to implement these in HTML and CSS. The feature's availability across different browsers, including Firefox, Safari, and upcoming support in Microsoft Edge and Opera, is also highlighted. The post emphasizes the usefulness of this feature for enhancing user experience, especially for those with JavaScript disabled, and concludes with a note on the <noscript> tag's different purpose compared to the new media query.\n\nIf you don't like the summary, just downvote and I'll try to delete the comment eventually üëç",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af69dd",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af69dd/verifying_identities_while_using_aws_simple_email/",
    "title": "Verifying Identities while using AWS Simple Email Service",
    "points": null,
    "comments": [
      {
        "comment": "If you're using Namecheap hosting for your website you will need to enter these inside cPanel.\n\nIf your website is hosted elsewhere then you should either enter these settings inside the domain administration panel (as in your screenshot) or via your website hosting provider (this depends on where your website is hosted and what specific DNS settings were set).",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af5nt8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af5nt8/best_way_to_store_data_in_mongodb/",
    "title": "Best way to store data in MongoDB",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1af5c9d",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://open-web-advocacy.org/blog/owa-review-apple-dma-compliance-for-web/",
    "title": "OWA‚Äôs Review of Apple‚Äôs DMA Compliance Proposal for the Web - Open Web Advocacy",
    "points": null,
    "comments": [
      {
        "comment": "OWA spent the weekend reviewing Apple‚Äôs Digital Markets Act compliance proposal to work out if Apple will finally let browsers and Web Apps compete fairly?\n\nUnfortunately so far it appears that the answer is no!\n\nLet's Dig in!",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I thought that DMA was direct memory access for a second. We have too many overloaded acronyms.",
        "points": "0 points",
        "children": [
          {
            "comment": "Once you get into regulatory stuff the acronyms are endless and entire new range of terminology . DMCC. DMU. DMA. DSA. CPS. CMA. ACCC. HDMC. etc etc. and the issue is we often forget normal people don‚Äôt know what these things mean üòÖ",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af4slb",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af4slb/building_sites_inplace/",
    "title": "Building sites in-place",
    "points": null,
    "comments": [
      {
        "comment": "This is a terrible pipeline procedure in 2024 and it was a bad idea in 2005.\n\nI still don‚Äôt quite understand why on earth you‚Äôd want to run a dev version on the production box under a subdirectory. Unless you‚Äôre creating a subdomain on the production box and pointing it at another directory. Seems batshit no matter how you slice it.\n\nIt sounds to me like you‚Äôre really really out of date and cheap to boot in that you don‚Äôt want a dev server and don‚Äôt know how to use modern deployment processes.\n\nI pray for you and your client‚Äôs sites.",
        "points": "-3 points",
        "children": [
          {
            "comment": "So‚Ä¶no advice? Just some snark? Cool.",
            "points": "1 point",
            "children": [
              {
                "comment": "If you insist on this terrible process just create additional sites/subdomains in the apache config that point to different directories on the same server. I still don‚Äôt see why you would ever do this but you do you.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "i have seen some web agency which is using userdir module. agency forgot to change permission on an unused user home dir. others could access to http://11.111.111.111/\\~example/. this caused lots of traffic and server loads\n\ni recommend using subdomain for old site",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af4q7j",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af4q7j/any_reason_not_to_validate_the_format_of_login/",
    "title": "Any reason not to validate the format of login inputs (email, password) on the front-end?",
    "points": null,
    "comments": [
      {
        "comment": "Front end validates for a better user experience. Back end validates for security. Do both.",
        "points": "62 points",
        "children": [
          {
            "comment": "Agreed, and frontend validation reduces API calls to backend, or if not API, reduces overall load on backend (even if negligible). But always do backend final checks.",
            "points": "6 points",
            "children": [
              {
                "comment": "This. Never trust client input. Validate.",
                "points": "7 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Not to mention performance, is not the same that your backend takes only wellformed request that a ton of useless requests that are going to be rejected because of the email didn't contain an @",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I think people are missing your actual question. No, there is no reason to validate the password format for login on the frontend. Do it for registration but pointless to do it for login.\n\nPeople should be using password managers so the password should be correct thus the format will be correct. Even if the user doesn't use a password manager and makes a typo chances are it would still pass the format validation so you are making a request to the server to check password anyway. A registered user isn't going to type their password so poorly that it fails the general format validation.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We do. Our form validation lib is used on the server and client. It does the basic checks you mentioned.\n\nIt saves a network request.",
        "points": "4 points",
        "children": [
          {
            "comment": "I don't see any reason why not to just do a basic format check and let the user know any issues.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "For front-end, I use the native form validations. My \"real validation\" happen on the server, just because you can't fully trust client-side validation.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Since nobody read your actual question, I offer this opinion:\n\nThere's no need to validate front end login form aside from anything that would be a security risk. Format constraints are dictated during the sign up process. Either the supplied info matches, or it doesn't.",
        "points": "2 points",
        "children": [
          {
            "comment": "Sure, but validating on front end greatly improves the user experience. Filling out a form that contains errors (eg. the username you entered is already taken) and not telling the user until they try to continue causes a lot of friction.\n\nNot a huge issue for a simple form, but longer forms should almost certainly have front end checks as the chance they contain multiple errors increases and having to scroll back through the form to find them only adds to the frustration.",
            "points": "-1 points",
            "children": [
              {
                "comment": "How would you possibly validate if the username is already taken on the front end?\n\nSure you can tell the user early, but that kind of validation will always require a service call.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Just embed all the existing usernames and passwords in a hidden field in the html.\n\nDon't forget to Base64 encode so it is secure!",
                    "points": "3 points",
                    "children": [
                      {
                        "comment": "You forgot the /s",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "You‚Äôre right, you can‚Äôt. That was not a good example, but you can do things that would allow somebody to trigger a request to check things like that progressively, rather than waiting until they‚Äôve done all the work and checking everything all at once.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "True... as long as your validation schema is always vended by your service, rather than just being hard-coded into your application code.",
                        "points": "",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Never ever trust client-side. Ever. Validate the devil out of it. Your ui/ux person should do designs / flowcharts specifically for login. Failing that, implement strict validation, and great session management.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Servers always validate, front-end validation is just a nice to have UX feature",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "yes do validation in both places",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There is no reason not to.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af45b7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af45b7/my_client_asked_for_a_protocol_for_what_to_do_if/",
    "title": "My client asked for a protocol for what to do if I die?",
    "points": null,
    "comments": [
      {
        "comment": "‚ÄúIf I‚Äôm dead, you guys have been dead for months‚Äù",
        "points": "200 points",
        "children": [
          {
            "comment": "lol I‚Äôm using this",
            "points": "20 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "A little grim, but unfortunately I get it. The \"hit by bus\" factor can leave a company completely fucked if they don't plan for it.\n\nOnly thing I'd say you have to do is make sure they own the actual domain name. Beyond that, if they're really concerned then they should be the ones hosting the site as well.",
        "points": "86 points",
        "children": [
          {
            "comment": "Only thing I'd say you have to do is make sure they own the actual domain name.\n\nThis is one of the key reasons I prefer clients to pay for everything directly - domain registration, hosting plan, etc. You procure the service, give me admin access. If I go away, you retain access.\n\nCaveat: never deliver unpaid product to resources the client owns.",
            "points": "50 points",
            "children": [
              {
                "comment": "How would this work with a monthly retainer? I guess I could remove the content from the hosting service if they stop paying",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Monthly retainers aren‚Äôt there to cover prior work, a monthly retainer is only intended to secure your working hours. If you are working on a monthly retainer then the client owns whatever you‚Äôve already produced and you have no right to remove content from their site",
                    "points": "18 points",
                    "children": [
                      {
                        "comment": "What happens if you incorporate your own product/service/software add-on to their site? What then? Do you setup a contract both parties sign saying they have to remove it if X stops?",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "That's not a monthly retainer, that's a service contract. The terms of what happens when either party fails to uphold their end of the contract should be spelled out in said contract. And yes, the contract will stipulate that if payment is not received then service will be terminated, and the contract will also stipulate what happens if the service provider fails to provide the agreed to service. If you are providing a service like this it shouldn't simply depend on whether something is installed or not, it needs to have mechanisms to check whether the service has permission to run. At least, that's the easiest way to go about it. You may be able to work with a lawyer to demand they remove something from their system that isn't capable of phoning home to check if it has permission to run, but that is a much more difficult, lengthy, and expensive path to take.",
                            "points": "4 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "It depends on the contract. The Dev may retain copyright and IP rights and only lease usage to the client. But this requires a fairly special contract. Without it, you are correct that whatever has been delivered would be considered paid for lacking any other agreement.",
                        "points": "",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  },
                  {
                    "comment": "Or a redirect to a competitor page :)",
                    "points": "-2 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "Not necessarily. I'm some states it is illegal to remove delivered products even if they are not paid for.",
                    "points": "",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Yes this is absolutely a thing, it's called the bus factor (what happens if this person gets hit by a bus?).\n\nIt's obviously extremely unlikely that it ever comes into play, but if your client is asking for it, it's probably a good thing to account for.\n\nIn my opinion, this would be nothing more than all root access passwords, not a migration guide or onboarding document. You could set something up in a will I guess? I have no idea what I'm talking about... Lol",
        "points": "39 points",
        "children": [
          {
            "comment": "A past employer of mine used a 3rd party company to guarantee ownership transfer should the company go bust, it was a component of the tender bids, I just cannot remember the name of the service for the life of me.\n\nThe cost could be offset to the client potentially.",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You should have a disaster recovery plan, just make sure it's detailed enough that they can hand it to a different company and recover if necessary.",
        "points": "11 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The folks chiming in with jokes are really highlighting the amateur nature of this sub compared to other software engineering communities on Reddit.\n\nBusiness continuity plans are a real thing. This is actually a great thing for a client to bring up, it shows a level of seriousness to the operations that is so often hard to find. You want to know how to make more money freelancing? Find clients who value things like this and charge them appropriately.\n\nAdditional terms to look up are ‚Äúdata recovery agent‚Äù and ‚Äúsource code escrow‚Äù - a recovery agent is a person who is authorized, upon verification of your death or inavailability, to decrypt or release things like source code, and other documentation to another party.\n\nIf the client does not wish to maintain ownership of their own services directly, escrow services can still provide a transition path to mitigate the risk of their operations being interrupted because you cannot support them.",
        "points": "19 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is why I typically don't host things for clients. I'll setup, manage, and maintain, but I want them to have full access to their hosting account and any other 3rd party vendor sites.\n\nTypically what I ask clients to do (or do on their behalf) is setup a new email address, preferably at their domain (even something old school like [webmaster@domain.com](mailto:webmaster@domain.com)), and then use that account as the master account for all hosting or related account.\n\nAs long as you have access to it as the web developer, and they have access to it, that means it's just one account for them to hand over to someone to have access to everything.\n\nAside from that you can even leave some documentation pinned in that email inbox about the general setup, i.e. Web Hosting with XYZ, WordPress Theme whatever, Accounts for plugins and licences, Cloudflare, DNS, Registrar, whatever.\n\nIf everything runs through a single account, and the client has access to everything and you have access to everything, then there is minimal risk of you dying and the client not being able to pick up the pieces and hand it over to some one half competent.",
        "points": "16 points",
        "children": [
          {
            "comment": "Whoa there Netscape Navigator, you can just use admin@ for the email",
            "points": "4 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Happy Cake Day! üéâüç∞",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "‚ÄúUpon my death, all of my belongings shall transfer to the man or animal who has killed me.‚Äù - Ron Swanson",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'd have the repo under their company git - and all domain and hosting stuff under their credit card. I'd just be a contributor and pay for my seats (well - have them pay for my seats). Then the README should say everything a new contributor needs to know to get going. The env file needs to be in the client google drive or somewhere. Any miro/lucid/figma etc should all be in their name with you invited. All of the passwords should be in their 1password or bitwaden or whatever they use. All google docs should be under their company name. You should be able to just fake your own death at any time.",
        "points": "4 points",
        "children": [
          {
            "comment": "You clearly don't have many clients. If you manage any number of clients it becomes near impossible to juggle logins for scads of different password managers, etc.\n\nUse services that have client access. Onboard them to your services. Client always has access to their data.\n\nMake sure you have an emergency fund in place to fund continuation of those services automatically for a set period of time after your (or you company's) demise.\n\nWhen the client secures a new provider, they can access and migrate any data necessary.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hey I'm running my own little thing too, and I'm constantly thinking about that. Right now I'm running backups every night, and offer my clients the option to receive a copy of the backup each day. Backup that they could then re-host on any service pretty easily. You know what? NOT ONE customer took the deal. Even if I do it for free! They all want a plan but as soon as they need to do something or understand whatever, they all go like \"not my problem\". And some of them are pretty high traffic like 80% of their revenue at least comes from the website.\n\nI keep telling myself I have to document and set up my disaster recovery plan but it's not really motivating when nobody cares. Guess I'm just waiting for at least one serious client to actually ask for one.",
        "points": "2 points",
        "children": [
          {
            "comment": "To some degree, they‚Äôre right, it isn‚Äôt their problem as long as the site works. Maybe what you do is put it on a file share with the rest of their dns/config/server type of stuff that they‚Äôd need to know and then it‚Äôs available if it becomes an issue",
            "points": "1 point",
            "children": [
              {
                "comment": "I don't dislike the idea of a shared space. Still the goal is to put it somewhere under their control and I know for sure that I'll have to provide the drive, so it kinda goes against the idea. Now that you talk about it, I never included DNS records in what should be kept, and that's hell of an oversight.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I produce a disaster recovery document detailing how a client can access their source code and assets should I get 'hit by a bus'.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "‚ÄúFor 10k extra I guarantee this will keep working forever after I die‚Äù.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It doesn't have to be this grim. People leave relationships for all kinds of reasons. It's more like \"If I'm not around for any reason\". It actually pisses me off when companies expect me to be around forever, because I'm not planning on that! I will leave at some point and so I always try to do documentation and make the code readable for the next guy. So I'm not offended by this question at all. If you want to be a jerk and never plan for it then you can leave companies high and dry. Job security is the goal for a lot of people. I feel too much guilt for this kind of thing.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Uhmmm are you hosting ? We need details",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It‚Äôs called a business continuity plan‚Ä¶\n\nI write for a company who can assist here help you figure that out.\n\nCheck out prozesstec.com and if you are interested email elisabeth@prozesstec.com. She is the process person in that group and great and what she does.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You can setup dead man switches:\n\nYou can use the dead man switch in for example a Gmail account or similar to send emails or release control to someone after a month or longer of inaction so you could for example save credentials and instructions in there for them.\nI setup a vps that if I don't touch a file at least once a month it sends instructions and ssh credentials to the necessary people to relinquish their backups, some files in a shared drive and accesses to their resources if I die. It's like 150 lines of python, a cron job and some conf files. In this case it sends them the URL for their Git repo (they should already have) and a shared control on their vps's (each customer has a vps) so they can transfer out and so on.\n\nImportant I do not and I never owned their domains. Manage the DNS sure but they must have their account and own the billing.\n\nIt's basic but I like it and it makes me feel important as I have dead man switches on my head.\n\nI also have some similar script to delete all my porn if I don't use my PC for a month.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "this is what I dont understand about the space were in.\n\nwhy not create the hosting account for them, and then give them the password and what not?\n\nI don't host my clients sites because I could never get around the concept of having to care for it to a T after I get done building it, that's someone else's job and these people dont pay enough for me to worry about it",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I have Redmine installed on a hosted server. My clients have access to their project with all relevant documentation. Passwords are stored in a shared password manager. If I croak they have everything they need to keep running without skipping a beat. I also have a kanban board setup so the next dev could slide right in and see the status of work and the backlog.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "bruhhh!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "There are nicer ways to put it... but as the one in full control of business critical systems... my boss called it the \"hit by a bus report\".\n\nThe \"Hit By A Bus Report\" included all critical logins and semi-tech descriptions of what the major parts were, how they worked together, and how to login to and/or edit and maintain each. In addition, each major platform, language, framework, plugin and other things were named so a new tech hire would have a chance if I suddenly 100% stopped being available.\n\nAnyway, don't take it so literally... they don't WANT you to die... :)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Github repo and full import/export functionality in the API (a way to copy over literally everything).",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We are a small company so there is more then one of us who has access to it all which helps.\n\nLarge companies have their own domains which is the important bit!\n\nOur reseller hosting comes with ability to give clients their own logins to manage hosting and domain names, if we had a similar request id give clients the logins to those so their new dev can login and get what they need",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Tell them to keep paying your family your wages for the next 20 years",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "‚ÄúBetter make sure that doesn‚Äôt happen,‚Äù",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Absolutely. Any legitimate company should have this for their clients. My clients can move to another provider at any time. I keep great notes and have everything packaged up nicely for them. It's a matter of professionalism.",
        "points": "",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I require that all of my clients \"own\" their own accounts (domain registration, hosting, et al) to which they grant me access.\n\nIf something happens to me, they don't lose access to anything.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af2ij7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af2ij7/post_surfacelevel_crud_what_are_the_big_challenges/",
    "title": "Post surface-level CRUD: What are the big challenges?",
    "points": null,
    "comments": [
      {
        "comment": "Release notes\n\nFeature flags\n\nAccount Emails\n\nError Logging\n\nCode rot / duplication (linting)\n\nFeature deprecation\n\nAnalytics\n\nBuild reports\n\nCost reports\n\nDocumentation\n\nSecrets Management\n\nTranslations (the data, not the implementation)\n\nRegional conventions, eg. number and date formatting.\n\nand my favourite... metric to freedom units and back.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af2d8w",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af2d8w/need_to_build_a_home_inspection_web_app/",
    "title": "Need to build a home inspection web app.",
    "points": null,
    "comments": [
      {
        "comment": "This is a pretty straightforward app. I've built one that does auto-insurance adjusters. Same exact workflow. New projects, uploads, markup, annotate and draw on image, generate a PDF and capture a signature.. This is all doable in pretty much any modern stack.\n\nFabric.JS for the annotation\nPDFlib/Puppeteer for the PDF",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af0jbr",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af0jbr/differences_between_a_great_webdeveloper_and_a/",
    "title": "Differences between a great web-developer and a bad one?",
    "points": null,
    "comments": [
      {
        "comment": "Good engineers write code, great engineers know why. Amazing engineers plan in advance. The best engineers see problems you‚Äôd never have thought about months or years in advance, and take steps ahead of time.\n\nNone of these things require passion or specific fundamentals ‚Äî experience is very helpful, but it mostly comes down to being the kind of person who always wants to know ‚Äúwhy‚Äù.\n\nAlso: if you want to go fast, go on your own. If you want to go far, go with company. The best engineers bring people along with them, and make everyone around them more effective.",
        "points": "45 points",
        "children": [
          {
            "comment": "Not sure about the last point in paragraph one. Reminds me of pre-optimizing.",
            "points": "3 points",
            "children": [
              {
                "comment": "Tend to agree. What you really want is someone who keeps it so brutally simple you are not sure how it works. Then when you do need to fix a problem years down the line, it's easy.",
                "points": "1 point",
                "children": [
                  {
                    "comment": "If it‚Äôs brutally simple and you aren‚Äôt sure how it works, we‚Äôve got a problem",
                    "points": "4 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "In short, what separates them is the ability to solve problems and provide value.\n\nYou don't need someone that has superior grasp of computer science, is passionate about development or spent the last 40 years working on computers.",
        "points": "9 points",
        "children": [
          {
            "comment": "In short, what separates them is the ability to solve problems and provide value.\n\nI would say that's the bare minimum.\n\nYou don't need someone that has superior grasp of computer science, is passionate about development or spent the last 40 years working on computers.\n\nBut chances are that person is better. So long as they don't get caught up in cycles of perfectionism and will never settle for \"good enough.\"",
            "points": "2 points",
            "children": [
              {
                "comment": "There‚Äôs a popular sentiment in subs like this that you can be just as good as the guy who breathes code and writes it 14 hours a day for 10 years. I‚Äôm not that guy because I value other things, but John Carmack wouldn‚Äôt be John Carmack if he went home at 5 every day.",
                "points": "4 points",
                "children": [
                  {
                    "comment": "Web development is more of a trade than a science. It's more like being an electrician than a doctor or a scientist. The stereotype of a lone genius 10x developer cranking out code for the love of the craft is not a healthy ideal to work towards. For most developers it is a job, and not a part of their identity that they're willing to sacrifice their family over. This is not to detract from John Carmack, it's just that I don't think that's what we should be working towards.\n\nIt is important to push yourself and learn to some degree, but maybe if we take it easy on the hustle culture we can get some more joy out of life beyond delivering on some arbitrary deadline.",
                    "points": "2 points",
                    "children": [
                      {
                        "comment": "Yeah I agree, that's why I go home at 5 every day lol. But I'm delusional if I think I'm going to be as prolific as someone who puts in twice as many hours as me.",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "From a \"boots on the ground individual programmer\" perspective, it's about consistency and discipline. You show up, do the work, and there's minimal \"off\" days (meaning you're consistently putting in a respectable amount of effort). That might sound \"too simple\", and it kind of is, but I guarantee you'd be surprised at the number of people that don't even meet this.\n\nFrom a more \"well rounded team member\" perspective, it's really about confidence and communication. Your ego doesn't stop you from learning from (or teaching) other people, you get what you need from other people quickly because you're easy to work with, you're given a high level of trust that lets you push back on various things that end up being liabilities to you or the team, etc. (a lot of this requires being in a very good work environment, but that's a separate discussion)\n\nYou check off both of those, you are an absolute unit of a developer. There's also \"academic genius types\", but for the vast majority of business environments, it's a waste of talent.",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Good web developers factor in the usability of the website and not just bells & whistles for sake of it",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Generally the difference isn't in the actual code quality, it's all the other traits. Good engineers can write really great code and get tasks done effectively. Great engineers can not only do this, but lead and communicate to a team to get more done with this same quality + understand why they're doing what they're doing. I hope this makes sense.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Spidey senses.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The one that just does a job exactly as asked blindly VS the one that checks the request, asks questions, ensures the outcome is the best and asks the question \"What are you trying to achieve\" and then does it in the best scalable way, tests it and deploys it.\n\nI can see others basically touching on the same ethos in the thread.\nSame with something from stackoverflow and like. We all do not know everything so if you go there to find something a bad one will copy and paste. If it works they move on, if it does not work they just grab the next code.\nA good one has the understanding, even if they are skimming they are checking for the right answers, they understand the guts of the code, process and what they want to achieve and are just looking for the right components. Even if there is a chunk of code that is correct they very well may not use it verbatim but get what they need to fix or improve their solution.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Passion, practice and prioritization are the top 3 traits",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "bad engineers write a lot of code.\n\ngood engineers read a lot of code, and know how to write a small amount of code that is easy to read\n\nand the rest is how quickly can you spit out code and how many bugs do you make. medium developers are good at this part.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "A good web developer is different than a good engineer, especially SWE. The two can be different.\n\nI know some good web developers with impressive body of work. Big clients, large projects, and a good portfolio.\n\nIt does not make them good engineers. Often, we hire them in a traditional SWE engineering team and they can't produce. They can't work with a team (don't know git) and don't fit well under an organizational structure of Agile scrum. They can produce great websites but are very poor engineers.\n\nLikewise, there are some good engineers who are poor web developers.\n\nSome of the good web developers are self-taught. Pick them up by the bootstraps and can generally work autonomously. They just are not a fit for an engineering team that requires good code conventions, structure, long term maintainability,etc.",
        "points": "-2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "How does a solid web-developer stand out, from the bad ones?\n\nBy being adaptable and predict and prevent problems down the line. They're thinking many steps ahead without sacrificing productivity now.\n\nDo great developers have a better grasp in computer science fundamentals ?\n\nUsually, but not necessarily from formal education.\n\nIs it the passion that makes them x10 developers?\n\nIt helps.\n\nOr is it just simple time investment that perfect their craft?\n\nI would argue that it takes some level of passion to put in the time, especially unpaid. It may develop into \"just a job\" later in life but a young developer should have some passion for the work.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Great web developers know their job is to build a product and not write code.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I feel like I'm going to get downvoted for this but...\n\nI've lead a lot of large dev teams over the years, though not in one of the big tech firms. Great devs are generally speaking quite a bit smarter than other devs. You can spot it in your first meeting. It shows in soft skills like critical thinking, creative problem solving, confidence, and broad understanding of peer specializations. Pretty much everyone who fits this profile ends up in the valley in two years at one of those big firms. Well... Let's say that was true pre-covid. They're probably laid off as much as not now.\n\nA bad one? Everyone else just needs to pay attention, have passion, and a willingness to learn and experiment. Throw a dart in a room, the bad one won't duck.",
        "points": "0 points",
        "children": [
          {
            "comment": "Naw I getcha bro, and I agree. This applies to all aspects of life but these are words to live by, sorry I can't recall who said it but its an old quote:\n\n\"he who demands the respect of his station shows that he does not deserve it\"\n\nin other words, the guy in your meetings flexing and beating his chest and boasting about how great he is? Worthless. Those who REALLY know shit and how to build quality software and solve complex problems don't need to boast about themselves because their work speaks for itself. That doesn't mean they're not confident nor does it mean they won't speak up when something is clearly wrong etc, it just means they know what they can do and when they speak its best to listen and absorb.\n\nThere are good devs, then there are great devs, then there are dudes that are just at another level, if you have the pleasure to work with one of the latter, shut your piehole, stow your ego and just try to absorb as much as you can. Humility in programming is huge.",
            "points": "1 point",
            "children": [
              {
                "comment": "This. üôå",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Conscientiousness. Above all provide business value, get work done, care about what you are doing, care about being good at it, and leave things better than you found them.\nLeadership. Supports and trains others, constantly offers help and keeps the team on track.\nKISS. The very best engineers write code so simple you are not sure how it could possibly work. They create projects where it is easy to find anything you are looking for, and making a change only affects the feature you are working on.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Bad web developers do the work. Great web developers solve the problem and set you up to avoid layer ones.\n\nFor example, I had to work out how to validate payloads for our FHIR server. A very bad dev would have written a server with all of the validations. A proposed solution was to do it all inside a (Camel) workflow engine that non-dev professional service teams could manage later. We found a library and server designed by HL7, which sets the FHIR API standard, just to validate inputs, which could be called in a step in our workflows.\n\nI found that the server we use for our data-store implements the new pre-validation of the latest version of the FHIR standard, the license costs $0 extra for more scaling, and its underlying DB uses caching that would kill the load of looking up custom validation requirement. That means no extra service for sysadmins to set up or manage, no duplication of effort for setting up custom requirements, and no delays. I like to think I'm pretty good.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Bad developers rely on external libraries, packages, frameworks, etc, but don't actually have the skills to build something from scratch..\n\nGreat developers may use those tools, but when it comes down to it, they can build sites from scratch using vanilla languages when needed",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Great developers can talk to people that aren't developers and explain difficult technical concepts in terms that the other person can understand.\n\nGreat developers also use past experience to understand a current client's needs, even if the client doesn't understand themselves. Plus, they won't do stupid shit just because a client told them to in order to save money.\n\nGreat developers also protect their clients from bad decisions.\n\nIt isn't always about the code that you write, but as some have already said, it's why you write the code.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af0grs",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af0grs/i_am_so_dumb_i_just_dont_understand_how_i_get_my/",
    "title": "I am so dumb. I just don't understand how I get my web app [that currently works great in Flask + Ngrok] deployed and working in Firebase.",
    "points": null,
    "comments": [
      {
        "comment": "So the idea is basically:\n\nWrite a Dockerfile that bundles your app's build artifacts along with the necessary base image required to run the app. See here for example. Be sure the docker image does not contain any secrets (Firebase api keys, etc.). These should be configured on the host that runs your app, not inside the docker image.\n\nPublish the docker image to a container registry. You can use docker hub if you have an account. Github has a container registry (not sure if free vs. paid), and many other providers offer one as well, typically intended for use with their hosting services.\n\nPick a host that offers a reasonable configuration (CPU, MEM, etc.) and supports running docker containers. Google has an offering here but I'm not sure what it's called. Microsoft has Azure container apps, and AWS has a similar offering (App Runner, I think?).\n\nConfigure the app on your host to pull the image published in step 2 and add any environment variables for things like API keys, etc. Typically a docker compose .yml file is used for this.\n\nUpdate your domain DNS to point to the public IP/CNAME info provided by your app host.\n\nThink of your docker image as a prepackaged server/app environment with a fixed set of dependencies. Container images can usually run on any container host, regardless of platform (except for Arm vs. x64, and similar platform constraints).\n\nAlso, do NOT use ngrok as a front end proxy for your real app in production. I understand it fits the use case now, but once you've moved to a proper host, eliminate the ngrok proxy step from the equation.",
        "points": "0 points",
        "children": [
          {
            "comment": "Ok great. Thank you.\n\nYes once I have a real host I was going to remove ngrok. That makes sense. Thank you for confirming my understanding.\n\nQuestion on #5 -- I'm just needing to host this app as a webhook. I just need to send all POST requests to the webhook endpoint right? I don't necessarily need to change the domain DNS, right?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af072y",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af072y/css_trick_transition_from_height_0_to_auto/",
    "title": "CSS trick: transition from height 0 to auto!",
    "points": null,
    "comments": [
      {
        "comment": "TL;DR: Use Grid to set the rows from 0fr to 1fr.\n\n.accordion-body {\n    display: grid; \n    grid-template-rows: 0fr;\n    transition: 250ms grid-template-rows ease;\n}\n\n.accordion:hover .accordion-body {\n    grid-template-rows: 1fr;\n}\n\n.accordion-body > div {\n    overflow: hidden;\n}",
        "points": "29 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Nice! I found another fun side-effect of grid the other day. You know when you're making something like tabs and all the tab panes need to stack in the same position? Chuck all those tabs in the same grid-template area. The area grows to be the height of the largest child.",
        "points": "13 points",
        "children": [
          {
            "comment": "I don't remember how we lived without grid anymore. Please don't say float and clearfix.",
            "points": "4 points",
            "children": [
              {
                "comment": "Well, looks like your forgot your Spacer.gif",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I'm still managing fine with flexbox ü§∑‚Äç‚ôÇÔ∏è",
                "points": "1 point",
                "children": [
                  {
                    "comment": "Same",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Finally, a solution to this that doesn't feel like a complete hack",
        "points": "18 points",
        "children": [
          {
            "comment": "Exactly what I came here to say.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Beautiful. Elegant.",
        "points": "3 points",
        "children": [
          {
            "comment": "Happy Cake Day! üéâ",
            "points": "1 point",
            "children": [
              {
                "comment": "God damn it another year and I'm still on reddit ..",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "This is a surprisingly significant QOL improvement for me. Thank you!",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Clever!",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "OP is doing God's work..",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "...this is actually pretty damn cool",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'm a bit in shock that I haven't encountered this trick in 8 years. Thank you for this.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Nice!",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af035p",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af035p/any_libraries_to_convert_from_a_grayscale_depth/",
    "title": "Any libraries to convert from a grayscale depth image to an image colored with a colormap?",
    "points": null,
    "comments": [
      {
        "comment": "You can do this in canvas, its super straightforward. (thats probably why no libraries) So you want to go from greyscale to a predefined colourmap... this could be fun...¬†\n\npost a few more greyscale depth maps please. or make them available via share... Also what size are you looking to work at?",
        "points": "0 points",
        "children": [
          {
            "comment": "So ideally it would work for any size image, as I'm building a (free) tool to convert any image into a depth map. Here are some images!\n\nhttps://imgur.com/a/RlFfvBG\n\nhttps://imgur.com/AEUC5r7\n\nhttps://imgur.com/dgTnaVw\n\nhttps://imgur.com/a/Y9qBliU\n\nhttps://imgur.com/a/La3sjUX\n\nIt would also be very awesome if it could support the `_r` suffix which reverses the colormap (though that can just be handled by loading the appropriate colormap): https://matplotlib.org/stable/users/explain/colors/colormap-manipulation.html#registering-a-colormap",
            "points": "0 points",
            "children": [
              {
                "comment": "Any size image is too lofty. You need to give users a guideline.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Curious, why is that? Are you just saying that very large images be quite slow? Or is there some other limitation here I'm not understanding?\n\nIf just slow, yep, I agree, a guideline is nice, but I wasn't thinking of adding any hard limits.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Prohibitively slow. Anything above 8k would not feel snappy at all.\n\nAnd without doing a fair amount of optimisation there is a good chance a 16k image will hang the tab.\n\nAlso file size, the browsers go a little nuts with uploaded files beyond 32Mb or 24k, sometimes it works, sonetimes it fails.\n\nAs for file type. PNG is pretty much your best bet.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "also, i think you misunderstand, i'm not writing code for you... just so we're clear.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Yes definitely üòÇ There is no expectation here at all, I was just giving my \"this is my ideal library\" answer.",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1af00xj",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1af00xj/i_personally_feel_that_vanilla_css_unique_in_how/",
    "title": "I personally feel that vanilla CSS unique in how overly complicated it is. Failing as a language in simple proyects and advanced ones.",
    "points": null,
    "comments": [
      {
        "comment": "CSS is ridiculously simple. Not sure what you're having trouble with, but you probably need to review the basics.",
        "points": "15 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "what did i just read",
        "points": "11 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Centering a div is just a meme",
        "points": "5 points",
        "children": [
          {
            "comment": "Actually, it used to be hard to do. But it hasn't been for like a decade now.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Skill issue",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Thats coz html and css are not designed to be generated by js during runtime. JS is meant to augment the dom. It‚Äôs a completely different paradigm\n\nBefore the js avalanche, we could design completely different designs with the same html format but different css files\n\nJust because something is OOP doesn‚Äôt mean it‚Äôs bad. It a perfectly valid paradigm that we just need to use properly.\n\nBesides, we now have @layers, nesting, animation apis and so much more",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Okay, lets say css is trash, light a dumpster and 3 pointer CSSOM straight in. Flames.\n\nNow what? How do you convey styling information? Text? Objects? Arrays?",
        "points": "3 points",
        "children": [
          {
            "comment": "medium and syntax aside, I find the way you lay out swiftui elements with stacks and spacers and stuff kinda neat, wish there was something like that in css",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You probably have not yet had your ‚ÄòAha!‚Äô moment where it all clicks with your worldview. CSS has had a slow but steady path to bring the features that we now take for granted. Years of discussion. Probably a good million manhours or more. Maybe someone can research that further. I dunno.\n\nThe fact is, with Flex, Grid, psuedo operators and variables, CSS is now relatively easy to use. Way better than 10 years ago.",
        "points": "2 points",
        "children": [
          {
            "comment": "Thank you.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It is indeed a skill issue. CSS is so much simpler than learning a programming language. If you can learn JavaScript (or any other language) how can you not learn css? No offense, genuine question. I don‚Äôt think I‚Äôve had to google anything about css in a long time, but I still google the most basic syntax and behavior refreshers for JavaScript",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Judging by the presented English language skills, I'm guessing languages aren't really your thing.",
        "points": "-1 points",
        "children": [
          {
            "comment": "Well that's just mean.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeymdl",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeymdl/lamp_stack_dictionary_application/",
    "title": "LAMP Stack Dictionary Application",
    "points": null,
    "comments": [
      {
        "comment": "it will depend on the dictionary data format, it is good for u to try to convert dictionary data to sql insert query\nmake sure the data type is json, txt, or another type",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aey1st",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aey1st/how_to_easily_migrate_website_hosts_switching/",
    "title": "How to Easily Migrate Website Hosts? Switching from Google Sites",
    "points": null,
    "comments": [
      {
        "comment": "Yes it is possible. Just the new hosting than simply export your content setup the new site and recreate the pages and content after that recognizing the new SEO setting and than update the domain setting. If you need any help you can feel free to contact.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aexyey",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aexyey/how_do_you_politely_tell_a_client_that_their_diy/",
    "title": "How do you politely tell a client that their DIY approach is hurting them?",
    "points": null,
    "comments": [
      {
        "comment": "Pull up websites of her competitors and show them to her side by side.\n\nOr spend a couple bucks on some cheap 5 second user tests where you simple ask users to rate the trustworthiness of the brand based on the visual look of the site, and then compare it with results from her competitors as well.\n\nIf data doesn't change her mind, she's too attached to her own work and no amount of reasoning with her will change that.",
        "points": "97 points",
        "children": [
          {
            "comment": "Yeah, I've had clients like those who won't listen to what I, a professional in the field, says and they just have me build it the way they personally like it. These are usually the cheap ones, too.\n\nThe ones who pay top dollars were the easiest to deal with since they knew they don't have experience in that department, which is why they hired someone like me in the first place.",
            "points": "11 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I‚Äôm not the best person to answer this question, but curiosity is killing me. What did she hire you for if not to do her business website?",
        "points": "29 points",
        "children": [
          {
            "comment": "Probably wants to improve or add stuff without major changes or a complete overhaul. I get such requests a lot and usually discard stuff made on Weebly / Wix or similars. Most of the time they aren't worth the efford or the client doesn't have the budget (hence opting for such platforms).",
            "points": "15 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "She has another venture that is related to her main business. The main site link to the new venture.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Poolboy... obvs... I mean she is a mercedes according to him.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I'm going to flip this around. Why do you think it's hurting her? OK, you don't like it. I'll remind you this site exists and is highly successful.\n\nIt's important for us, as professionals, to know the difference between \"I don't like this\" and \"this is bad and costing you money\". The former is a snap judgement, the latter is a conclusion you come to after reviewing analytics and sales data.\n\nBesides, most normies do not care about the same stuff we do. And, depending on the product, being too polished is a detriment.\n\nMy dad worked for an economic development corp. Basically, his job was to help people start and grow a business, be it a small business or a massive corporation who was thinking of moving into a region. When he would go talk to guys on a manufacturing line or agriculture facility he'd bring his work boots and wear those instead. I asked him why since they looked all beat up and he said, \"That's the point. I've seen farmers look me up and down in a suit and then look at my boots and their entire attitude softens. My boots have seen real work and they know that. If I showed up in shiny shoes I'm just a suit, how could I possibly understand them?\"\n\nYou have to know your audience, and knowing your audience takes experience and data. Unless you've built for her audience before and have seen the data you probably don't know them as well as you think you do.",
        "points": "32 points",
        "children": [
          {
            "comment": "Ling is a web marketing genius.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "after seeing this site, i trust Ling with my life",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "So, honestly, I use to have the same opinion/viewpoint as you.\n\nBut, what I have come to find out, is that 99% of the non-tech general population people out there don't really give a F what a website looks like.\n\nAs long as the general public can ultimately do what they need to do (get info, buy product, book appointment, etc). They honestly don't give a F and it doesn't seem to really effect the person/company.\n\nSure, there will be exceptions to this.\n\nBut, it is going to be a hard sell to someone when they are content with whatever revenue stream their current \"crappy\" website is providing. It is hard to explain to people that they can be \"happier\" when they are already perfectly \"happy.\"\n\nI wish I were wrong. But, this is what I have ultimately realized.\n\nYMMV",
        "points": "29 points",
        "children": [
          {
            "comment": "It's also about having some humility that you don't really know all of the factors that they are balancing to make the compromises it takes to run their business. You can tell them what can be improved and you can estimate what impact it might have on custom acquisition, but really... you don't know their market, you don't know their budget, you don't know all of the other aspects of their business that they and their customers want to see improvements in and without that context, unless you're offering to do the job for free, you're really not in a position to know if it's a good move for them.",
            "points": "6 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I think this is the kind of perspective that maturity offers.\n\nLess experienced web-devs are often keen to make changes based on their notions on what it should look like and what technology it should use, but not able to guarantee any sort of higher conversion to make it worthwhile, if anything it just opens it up for tanking the SERPS.",
            "points": "10 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Yep. They couldn't care less about your cutting edge stack. Most of them tend to get bored or lose interest when you try to explain why they need X or Y.",
            "points": "6 points",
            "children": [
              {
                "comment": "Why would you explain tech stacks to them? Do salespeople talk about cylinder compression ratios and valve timings when selling a car to an average Joe/Jane?\n\nYou definitely need some marketing crash course.",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Amazon.com\n\nNuff¬†said",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Use that analogy but instead of a beat up station wagon, use a common car driven by everyone (in Australia it's a Toyota camry).¬†\n\nAlso use the socratic method : do you think this website represents your brand accurately? Can we improve it? Etc¬†\n\nI doubt the website is really hurting their business. You're seeing all the flaws but she's probably right, it's good enough. But it could be better and that's a awesome for you because that's work.",
        "points": "4 points",
        "children": [
          {
            "comment": "Come on now, there's no way Weebly is the Web equivalent of a trusty, reliable Toyota ;)",
            "points": "3 points",
            "children": [
              {
                "comment": "I agree! But that's not the way to sell it. Gotta pump them up to feel good so they're more open to suggestions.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Generally, you don't. But that needs some context.\n\nFirst, do you actually know that their website is hurting them? You personally not feeling trust or professionalism doesn't mean its tangibly hurting their business.\n\nConsider your average local restaurant. When people are looking for a place to eat, they're looking at proximity, price range, and perhaps most importantly, sentiment from previous patrons.\n\nA restaurant with stellar Yelp review and even a popular Instagram presence doesn't even technically need a website. If they have one, it could just load a PDF with a menu and hours and that would be sufficient. After establishing a likely-hood of a good meal, customers are not backing down because the website \"looks DIY.\"\n\nIf your client's website is actually responsible for delivering conversions, then that's trackable. You can setup user tracking and demonstrate the behavior and start mapping out ways you're able to change user response.\n\nGiven the nonchalant approach to her website, I suspect its not responsible for converting. Most of her customers might be regulars already and converting new customers is just not a priority.\n\nIn other words, the website may, in fact, be \"good enough.\" You don't sell a car to someone who only needs a bike.\n\nIf you still want to sell them on a new website, you have to understand their business, first. Why is the website an investment and not an expense? How is it going to make her life easier, or deliver more customers? And are you going to deliver those promises on a budget and timeline that makes sense?\n\nIn short, if you want to sell to a business, think like a business and approach it like their business, not yours. When you're focused on instilling feelings of trust or professionalism, you're just telling them what's important to you.",
        "points": "6 points",
        "children": [
          {
            "comment": "Lots of good info here. I‚Äôll have to remember some of it myself üòÖ",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I agree with pretty much anything except using a PDF¬†as a menu or as a source for any information or phone numbers.\n\n¬†If the restaurant has a ridiculously extensive menu, then maybe, but remember to think about accessibility and mobile users. And absolutely avoid those PDF page flipping widgets.\n\n¬†I would have individual pages from the menu available as emlargable images before just offering the PDF as a download by itself.\n\nHave it available, just don't rely solely on it.¬†\n\nRestaurants and other local businesses absolutely do not need high quality websites, but a one pager with hours, phone number, maps, and basic menu items is a far better site than stuffing everything in a PDF and hoping users download it.",
            "points": "2 points",
            "children": [
              {
                "comment": "I agree. I used the PDF as an example to illustrate the frivolity of a website in that scenario. Just loading a PDF is about as terrible user experience as I could imagine, but it would still have little impact on an otherwise popular establishment.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "I'm with you 100%. Just adding context for the youngins :)",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Let me make sure I understand‚Ä¶client has website A, which you are already bidding on and/or working on. And she has a second site you‚Äôd like to bid on? If I‚Äôm understanding that correct, let work on site A speak for itself.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "She understands the site is not perfect but considers it good enough.\n\nHow do you know that it is not good enough? Do you know what \"enough\" is for her business? Would you be comfortable guaranteeing X% increase in sales after you redesign the site? I'm assuming the answer is no, but my point in asking is that you really do not have enough information about the market and business to know if this is worth it or not or even to quantify what it's worth. Maybe her customers don't care as much as you think. Maybe there are other areas of the business that they'd care more about if she invested in them. Maybe she's breaking even and spending money on a website would put her out of business. You really just cannot in good faith say that you know it's a good decision for her. So, instead, just offer to help and leave it to her if she wants to follow up... \"Hey, if you do want me to help out with your main site and making sure that it gets across the right branding and a good impression with customers, I'd be happy to chat about it.\"",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "They‚Äôre most likely attached to it and the design. It‚Äôs comfortable to them. Familiar. Probably tied to to their company identity and are afraid of leaving what they built and know for something unknown. You need to instead point out the technicals, not the aesthetics. Here‚Äôs things you can look for and mention\n\n1) page speed. Always page speed. Low page speed scores come with old outdated sites and builders. In order to improve load times, you often times need yo get off the old ecosystem the old site is on and get on something more modern and performant. This is important because not only does google rank your website based on these scores, if your site takes more than 3 seconds to load you are losing 20-30% of your traffic because the site didn‚Äôt load fast enough. That‚Äôs potential customers who didn‚Äôt have the chance to become a sale or a lead all because your site is too slow. Improve page speed scores, improve conversions.\n\n2) content strategy. If there‚Äôs not alot of content on the site, that‚Äôs a huge problem. Content is king. Content is how you rank on google. If their site is bare and empty, they need to have new sections added to create content and arrange it in an easy to read manner. That would involve ditching weebly so you can work with a blank slate and have a cohesive website in which each section leads logically into the next. The proper order goes\n\nHero Services About Featured service Gallery Extra service cards Featured service 2 Why choose us Reviews Call to action Footer\n\nThat‚Äôs the basic flow for a good website. People generally only remember the first and last part of a website. So I put the main services they do at the top and the reviews at the bottom so when someone leaves the site they remember what they do and the nice things people said about them. Positive experience. Higher likelihood they return. I put the content he subsections in the middle for ranking on google. Since they won‚Äôt remember the middle of the site anyway, I fill it with content rich sections to rank on google for those keywords. Turn a weakness into a strength. So in order to do that, we need to redo the whole website so the site flows more logically and has enough content and calls to action.\n\n3) mobile first. If their site isn‚Äôt mobile optimized or responsive, that‚Äôs a HUGE problem and is costing them ranking because google indexes their site based on the mobile site. Called mobile first indexing. If they don‚Äôt even have s mobile site, they might as well not even have one to begin with because it won‚Äôt do much for them. Almost 60% of all internet traffic is on a mobile device. So to make the website mobile responsive we need to remake the website from the ground up and build it mobile first so it loads instantly on phones and makes google happy. Can‚Äôt do that on a weekly site. It‚Äôs not built to be used that way.\n\n4) accessibility. If your site is not accessible by s screen reader you‚Äôre liable for a lawsuit thanks to the dominoes Supreme Court case. Many sites are not compliant. Especially outdated page builder sites. To truely be accessible it‚Äôs easiest to be done at the code level using aria attributes and proper code structure and semantic tags for screen readers to parse and understand and hide things from them that they don‚Äôt need to see. A weekly site doesn‚Äôt give you that kind of control and customization to properly Cater to screen readers and those accessibility widgets don‚Äôt actually protect you from lawsuits either. They have their own legal troubles because of them.\n\nThat‚Äôs just off the top of my head. That should be enough to get the cogs moving in their head. I have these conversations all the time with sentimental business owners.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "She is not running a web design company, she is working on her business. Unless you have tried doing her job you have absolutely no idea what her priorities are and, I guarantee you, they are not the same as yours.\n\nLearn some humility and understand that you don‚Äôt know everything and not everyone wants to win awards or spend significant sums for marginal benefit. Put yourself in her shoes and get over yourself.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "TBH, why would you want to work with this client? Unless you are super strapped for money, it might be best to just let this client go.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "\"not my pig, not my farm.\" You can't be responsible for every bad decision other people make.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Until I needed to make a website for my business, I took any thrash as a solid website. But when I was looking for a development company, I looked through at least 1.5 thousand websites. After this experience, I have already learned to distinguish where a really good site, and it's not even so much about the appearance (it's certainly very important), but in the convenience, like, you can get to the section of interest in two clicks, there are no cringe drop-down lists, the site does not load for a thousand years (shitty optimization). So, what I'm getting at is, if a person doesn't look at the site from a technical point of view, he'll be satisfied with any garbage.  Sometimes there is no point in arguing with customers, they are hard-headed and even if you make everything cool, but not the way they want ... Well, you'll be considered a bad performer.",
        "points": "",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aewtfm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aewtfm/im_an_inexperienced_programmer_with_a_website/",
    "title": "I'm an inexperienced programmer with a website idea and I just need a rough outline of what I'll need to do",
    "points": null,
    "comments": [
      {
        "comment": "My first question is ‚Äúwhere do you get public domain or licensed images of the pages you want to display?‚Äù The text will be public domain, but the photographs will have a copyright.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Great idea. I‚Äôll have my site up in a few hours.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aewfx5",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aewfx5/how_to_represent_a_session_or_state_through/",
    "title": "How to represent a session or state through hashed string",
    "points": null,
    "comments": [
      {
        "comment": "JSON is a single string. That‚Äôs why it exists. It‚Äôs a serialization format.\n\nPlop it into local storage.",
        "points": "6 points",
        "children": [
          {
            "comment": "This. Assuming you don't need to encrypt it then you just pull it out as needed. Just be aware that max cookie size is 4KB so if you're storing a ton of stuff you might need to break it into more than one cookie or rethink your architecture",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n\nI second localStorage or sessionStorage. Much more room than a cookie.\n\n(then to de-stringify aka parse https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)",
        "points": "1 point",
        "children": [
          {
            "comment": "Thank you!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeweb6",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeweb6/experiences_with_innersource_and_designsharing_in/",
    "title": "Experiences with InnerSource and design-sharing in organisations",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aewdei",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aewdei/fe_server_characteristics_for_a_react_app/",
    "title": "FE server characteristics for a React APP",
    "points": null,
    "comments": [
      {
        "comment": "1500 concurrent users is a donut run. Its impossible to give you hardware specs accurately... cause you might be dealing with monster queries.\n\nNo i dont need more details.\n\nwhomever is in charge of your server infra needs to run some benchmarks.\n\nThere are many many moving parts to this. Mainly in software land.\n\nRun benchmarks. Anyone here giving you the... yeah go ahead... is kicking tyres.",
        "points": "1 point",
        "children": [
          {
            "comment": "Ty. That‚Äôs what I‚Äôm thinking üßê",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aew1oj",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://graphite.dev/blog/the-mom-test",
    "title": "The \"Mom Test\" in software development: asking good questions when everyone is lying to you",
    "points": null,
    "comments": [
      {
        "comment": "I thought the ‚ÄúMom Test‚Äù was whether or not my mom could use a piece of software, and every piece of software fails that test",
        "points": "103 points",
        "children": [
          {
            "comment": "*Every piece of software except Candy Crush",
            "points": "16 points",
            "children": [
              {
                "comment": "Lol you haven‚Äôt met my mom",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I think you‚Äôre better off reading the book than this article if you want to learn to ask good questions (it‚Äôs only a hundred pages or so). The article is more about their product journey. No offense to the author",
        "points": "50 points",
        "children": [
          {
            "comment": "You for sure should read the book! To me, the article definitely doesn't replace that experience, but I thought it was interesting to see a practical example of how the book's been useful in the real world.\n\nThere's so many \"software dev philosophy\" books that it can be hard to sift through all the bullshit.",
            "points": "-1 points",
            "children": [
              {
                "comment": "You sound like someone who is trying to sell a book.",
                "points": "15 points",
                "children": [
                  {
                    "comment": "Book is killer, deserves selling :)",
                    "points": "-1 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "That is not the mom test....",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Highly recommend the audio book - the author reads it himself, and he reads it like he‚Äôs talking to you, it‚Äôs really really great.",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I couldn't get past the first paragraph of the article, nevermind reading the book. This is what software devs who don't actually do any meaningful dev do with their time.",
        "points": "4 points",
        "children": [
          {
            "comment": "The book is 10 years old, and considered the book for validating ideas with external people. So usually recommended for PM‚Äôs or founders etc. Someone who only develops don‚Äôt need that skill - but there people who do dev work and other things. It‚Äôs not mutually exclusive with ‚Äúmeaningful dev work‚Äù",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aew0dy",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/vduzt10oimfc1.png",
    "title": "Can't login to a website and this error happens. I added the error codes prompted on console in comments section.",
    "points": null,
    "comments": [
      {
        "comment": "Is this your project? If this is the case we'll need to see some code. preferably using a pastebin or sandbox, that reproduces the issue. The screenshot provided does not provide enough information to help debug the issue.\n\nIf this is a site you visit, we cannot help. This is almost certainly a problem the site developers need to fix. Contact site support.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Subscribe to google, or find a dev.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aevu4s",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aevu4s/random_trailing_semicolon_only_in_production/",
    "title": "random trailing semicolon only in production?",
    "points": null,
    "comments": [
      {
        "comment": "Do you have a link to the site?",
        "points": "0 points",
        "children": [
          {
            "comment": "it's on every site for me. Perhaps its a chrome thing. I just noticed it on this very page!",
            "points": "0 points",
            "children": [
              {
                "comment": "That person was asking what's the link of your site. No one here knows the URL to your portfolio",
                "points": "1 point",
                "children": [
                  {
                    "comment": "yeah and I'm saying it doesn't matter it's not specific to my portfolio. joemmalatesta.com though if you wanna check.",
                    "points": "-1 points",
                    "children": [
                      {
                        "comment": "Yeah, there's no semicolon there. It's something local to your computer, like a browser extension.",
                        "points": "2 points",
                        "children": [
                          {
                            "comment": "thats exactly what it was. Apollo.io chrome extension. Hence why it wasn't on google sites :D",
                            "points": "1 point",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "only place I haven't seen it is google sites",
            "points": "0 points",
            "children": [
              {
                "comment": "It sounds like it's coming from an extension you have. Try switching browsers and/or disabling all of your extensions.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I found what it was with some super sleuth deduction. Ended up being the apollo.io chrome extension",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aevdnv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://medium.com/@jonjamesdesigns/how-to-handle-unsaved-page-changes-with-nextjs-app-router-65b74f1148de",
    "title": "How-to: Handle unsaved page changes with NextJS app router",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aev0ty",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://i.redd.it/6pnpg70qbmfc1.png",
    "title": "How can I make it so the pizzas are displayed as a 2x2 and the description container is on the right? Been trying to fix it for an hour (flexbox)",
    "points": null,
    "comments": [
      {
        "comment": "On the container that wraps both the pizzas and the description you put a display: flex;.\nTo get the pizzas in a 2x2 you can put a display: grid; with grid-template-column: repeat(2, 1fr);.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I would put two pizzas each in a different div, and put them in a container div, that container div would be a flexbox with flex-direction being a column, I don't know how exactly you want the description placed but thats how i'd start.",
        "points": "1 point",
        "children": [
          {
            "comment": "Figured it out, thank you",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "I just did that but 2 of the 4 pizzas are going through my div for the description",
            "points": "0 points",
            "children": [
              {
                "comment": "is the description div moved with \"position\" property?",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Do it with css grid and just do two template columns. Then you wont have to add extra divs.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's a grid layout, so... Use a grid. Three columns, two rows",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "html\n{\n-webkit-box-sizing: border-box;\n-moz-box-sizing: border-box;\nbox-sizing: border-box;\n}\n*, *:before, *:after\n{\n-webkit-box-sizing: inherit;\n-moz-box-sizing: inherit;\nbox-sizing: inherit;\n}\n@font-face {\nfont-family: Li;\nsrc: url(\"fonts/LilitaOne-Regular.ttf\");\nfont-weight: normal;\nfont-style: normal;\n}\nbody\n{\nmargin: 0;\n}\nheader\n{\nborder-bottom: 5px rgb(0, 128, 0) solid;\nbox-shadow: -1px 5px 5px rgba(0, 0, 0, 0.386);\nmargin: 0;\n}\nnav\n{\ndisplay: flex;\njustify-content: space-between;\nmax-width: 1650px;\nwidth: 99%;\nmargin: auto;\nalign-items: center;\n}\nul\n{\nlist-style-type: none;\n}\nul button\n{\nbackground-color: rgb(255, 255, 255);\nborder: solid rgb(0, 128, 0) 2px;\nborder-radius: 2px;\nmargin-right: 3px;\ncolor: rgb(0, 128, 0);\nheight: 30px;\nwidth: 100px;\nfont-family: Li;\n}\nul button:hover\n{\nbackground-color: rgb(0, 128, 0);\ncolor: white;\ncursor: pointer;\n}\nh1\n{\ntext-align: center;\nfont-family: Li;\ncolor: rgb(0, 128, 0);\nfont-size: 70px;\n}\nspan\n{\ntext-decoration: underline;\ntext-decoration-thickness: 10px;\n}\n.Ad\n{\ndisplay: flex;\nflex-wrap: wrap;\nmargin-top: 20px;\nmargin: auto;\nmargin-bottom: 10px;\nmax-width: 1000px;\nborder: solid 4px rgb(0, 128, 0);\nborder-radius: 4px;\n}\n.pizzas\n{\ndisplay: flex;\nflex-wrap: wrap;\n}\n.pizza:hover\n{\nbackground-color: rgb(0, 128, 0);\ncolor: rgb(255, 255, 255);\ncursor: pointer;\n}\n.pizza\n{\ndisplay: flex;\nflex-wrap: wrap;\nborder: solid 4px rgb(0, 128, 0);\nborder-radius: 4px;\npadding: 5px;\ncolor: rgb(0, 128, 0);\nfont-family: Li;\nfont-size: 30px;\nmargin: 10px;\nmax-width: 250px;\njustify-content: center;\n}\n.desc\n{\ndisplay: flex;\nfont-family: Li;\ncolor: rgb(255, 255, 255);\nbackground-color: rgb(0, 128, 0);\npadding-left: 10px;\npadding-right: 10px;\nflex-direction: column;\nmax-width: 552px;\nwidth: 100%;\n}\n.desc h2\n{\nfont-size: 50px;\n}\n.desc p\n{\nfont-size: 30px;\n}",
        "points": "0 points",
        "children": [
          {
            "comment": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Vegitta</title>\n<link rel=\"stylesheet\" href=\"stylesheet.css\">\n<link rel=\"icon\" href=\"images/pizza-xxl.png\">\n</head>\n<body>\n<header>\n<nav>\n<img src=\"images/LOGO.png\" class=\"logo\" height=\"35px\" alt=\"logo\">\n<ul>\n<button><li>Order</li></button>\n<button><li>Franchises</li></button>\n<button><li>Contact</li></button>\n</ul>\n</nav>\n</header>\n<h1>Get the <span>FRESHEST</span> pizzas in Belgium!</h1>\n<div class=\"Ad\">\n<div class=\"pizzas\">\n<div class=\"pizza\">\n<img src=\"images/mexicanaWebp.png\" alt=\"pizza1\" width=\"200px\" height=\"200px\">\n<p>Green Mexicana</p>\n</div>\n\n<div class=\"pizza\">\n<img src=\"images/Garden Green (1).png\" alt=\"pizza2\" width=\"200px\" height=\"200px\">\n<p>Green Garden</p>\n</div>\n<div class=\"pizza\">\n<img src=\"images/pngtree-pizza-with-vegetable-png-image_13247516.png\" alt=\"pizza3\" width=\"200px\" height=\"200px\">\n<p>Green Neopolitan</p>\n</div>\n\n<div class=\"pizza\">\n<img src=\"images/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHg2MDg5MDItaW1hZ2Utam9iNjE5LWt6dzVieHNiLnBuZw_prev_ui.png\" alt=\"pizza4\" width=\"200px\" height=\"200px\">\n<p>Half & Half</p>\n</div>\n</div>\n<div class=\"desc\">\n<h2>What makes it special?</h2>\n<p>Hover to view the desciption</p>\n</div>\n</div>\n</body>\n</html>",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Switch to grid for 2d layouts, your life will be better",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeumxm",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeumxm/best_domain_sites_now/",
    "title": "best domain sites now?",
    "points": null,
    "comments": [
      {
        "comment": "cloudflare.com (they dont make any money from their domain business) or namecheap.com",
        "points": "2 points",
        "children": [
          {
            "comment": "Thanks but someone said to me that cloudfare has some flaws like No support (unless you pay for their $20/month plan), I have to use their DNS and Hackers may try to get into my account if I use the message board.\nBut they said that I should use namecheap for domain, and for dns, cloudfare, what do you think?\n\nAlso I just want to buy domain for my upcoming site so someone can't book the domain with my business name, so is it okay for now if I just buy domain from namecheap?",
            "points": "0 points",
            "children": [
              {
                "comment": "If you know what you are doing, you don't need support to setup DNS, it's pretty straightforward.\n\nNow if you intend to use a specific platform to build the website, you can go with it directly (it will cost a lot more though).\n\nIf you want to save, but for some reason are afraid of using cloudflare, then namecheap is a good option. You will likely find documentation or videos explaining how to link namecheap with the website builder you want to use.\n\nI wouldn't recommend transferring the domain name later, I don't see why that would be useful, you'll have to renew the domain and there could be transfer fees.\n\nNameCheap would be the safest bet for you.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Depends on your skill level. Are you skilled enough to run a server? Do you just want a ‚Äúprofessional‚Äù Wordpress site?\n\nYou don‚Äôt need to host your domain at your domain registrar, and it all depends on you.",
        "points": "1 point",
        "children": [
          {
            "comment": "Actually I just want to register domain for my upcoming site, because I don't want someone else to register it.",
            "points": "0 points",
            "children": [
              {
                "comment": "You want to just park the domain for the time being?",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Yes.",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Pick any registrar whose name isn‚Äôt ‚Äúgodaddy‚Äù or ‚Äúregister.com.‚Äù For now, just register a domain and you don‚Äôt need any additional bells and whistles, except free privacy protection. If you decide that you need to use a different registrar because they offer something special, you can transfer your name to them (certain time-based restrictions apply).\n\nBuild your domain locally using your favorite tech stack, then you‚Äôll have enough information to decide on hosting.",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "ovh.com I can recommend. :)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Moved from godaddy to namecheap and havent looked back ever since - I highly recommend namecheap.com. They have really great customer support. I've also heard great things about cloudflare thought Ive never used it.\n\nAvoid godaddy at all costs.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is netlify good?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "hover",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "GoDaddy is bad. Namecheap is good.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I usually buy domain at namecheap for $6.18 and then migrate to cloudfare after 10 months. Cloudflare is cheaper than other. Make sure to have 2fa enabled on both. Saves some bucks lol.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeuebc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://web.dev/blog/interop-2023-wrapup?hl=en",
    "title": "Celebrate a more interoperable web with Interop 2023",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aeuarg",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeuarg/my_button_is_not_appearing_above_my_background/",
    "title": "My Button is not appearing above my background image",
    "points": null,
    "comments": [
      {
        "comment": "The button has \"position: absolute\" which means it's removed from the document flow and positioned relative to its closest positioned ancestor (if any) or to the initial containing block. So in the html move the button to be a child of the background image div and it will be relative to that. https://jsfiddle.net/scaeo2rz/",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeu69s",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeu69s/i_need_to_refresh_the_localhost_twice_for_changes/",
    "title": "I need to refresh the localhost twice for changes to occur using Next.js App Router, anyone else having this as well?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aetgi9",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aetgi9/how_to_find_out_the_cause_of_a_massive_paint_in/",
    "title": "How to find out the cause of a (massive) paint in chrome dev tools?",
    "points": null,
    "comments": [
      {
        "comment": "Er, a canvas of 30720 x 30720 pixels equals 943,718,400 pixels. So that source image alone can't even render in Safari (supports a max of 16,777,217 pixels) and likely other browsers when on mobile devices. I suggest creating smaller slices for that purpose.\n\nHaving said that, the draw call for 16.7 M x 16.7 M pixels is another order of magnitude too large. You should check the input variables you provide to your draw methods and sanitize these, you want to clip the destination rectangle to not exceed the visible canvas size.",
        "points": "1 point",
        "children": [
          {
            "comment": "The fun thing here is I'm skipping canvas altogether and loading different layers of an svg file into a stack of img tags. (For my purposes, drawing on canvas adds little benefit anyway.)\n\nStill quite chunky to move all those around, I know, but this hasn't been an issue before. I feel like made a change somewhere recently that caused this to happen but I don't know what that was, hehe. So I'm trying to use devtools to try and retrace my steps to the culprit :)",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aet9q7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aet9q7/sales_manager_here_with_a_question_about/",
    "title": "Sales Manager here with a question about overseeing the development our website",
    "points": null,
    "comments": [
      {
        "comment": "You will have to pay someone else to verify the work. It's hard to save money through outsourcing if you can't verify what's going on",
        "points": "1 point",
        "children": [
          {
            "comment": "What sort of role should I look for checking the code? Are they available on fiverr?",
            "points": "-2 points",
            "children": [
              {
                "comment": "You're kinda in the same seat if you just hire someone else, how do you then verify them? Maybe you could hire a well-ranked developer on fiverr and have them talk to the other dev",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "In my world, \"few weeks overdue\" is the same as no longer being involved with the project. Cut your losses and move to a self-serve platform like squarespace, wix, webflow or carrd.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Digital ocean is providing you with a virtual server that will run your websites code. Virtual in this context means you get a shared part of a physical computer. At least within the time the development is happening, I wouldn‚Äôt worry about cpu, memory usage etc. All of this will start to matter once you have real world users.\n\nOn the topic of checking his code, I would firstly suggest that you try EVERY function of your site. Once you have verified that ‚Äûhappy path‚Äú is working. You could start to have a more experienced person to look through this. It very much depends on what kind of site that is. Is this a static content website, is this a server rendered website with a database (Wordpress, drupal, the likes) or is this something completely custom or is this maybe even something more like a saas applikation?\n\nAll of these require different levels of checking.\n\nHonestly, what you should probably look into, is somebody to do maintenance and keep your site uptodate (especially if it is Wordpress!!)",
        "points": "0 points",
        "children": [
          {
            "comment": "It‚Äôs more of a web app with API integration with Stripe. I asked him to create a database of users that I can view on my dashboard.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I would kinda doubt somebody is hosting a WordPress site on digital ocean. You're better off using a WordPress specific host, imo. WP engine, Kinsta, Pagely, etc.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Depending on what your website has to do and your requirements, there could have been much better options to use for hosting instead of digitalocean (most options being free). However, it‚Äôs hard to judge with this amount of info. Anyhow being a few weeks overdue is a big red flag.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I would not recommend letting someone you have never met handle important services like online payments, hosting, etc. These are things that you can be liable for. Even though you sent them a contract, how are you going to enforce it? Are going to go Asia and sue the guy ?How are you going to check if your \"guy\" in Asia doesn't still have access to your server, app and payment gateway after the project is done? What if you he hosts some illegal files on your server? Who's responsible then?\n\nBe careful what data and access you provide to payment APIs, hosting, etc. You save some money now but you can lose a lot more later.",
        "points": "0 points",
        "children": [
          {
            "comment": "Omg I didn‚Äôt think of this before. My small business is currently bootstrapped and we saw a youtube video about this guy talking about how we‚Äôre living in the ‚Äúgolden age of outsourcing‚Äù so me and my partner decided to give it a try.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Hire a western developer you can trust. You get what you pay for, if you piss this guy off or ask to much what's stopping him from pulling the plug?¬†\n\nAlso do you own your code base or does your dev?",
        "points": "0 points",
        "children": [
          {
            "comment": "He does. I‚Äôve not seen a single line of the code to date.",
            "points": "0 points",
            "children": [
              {
                "comment": "I would suggest the following. First of all, make a github.com profile, takes 2 minutes. Then ask your dev the following: 'Could you please push this code to a private repository on github and invite my github profile to colloborate' This way you'll get to see exactly what has been produced so far, ask him to 'push the changes to the project at the end of each day' (this literally takes 5 seconds for him). This way you'll have a record of all the work he has done daily and if you need to have a dev look over it they will have a full history of the project being completed and can inform you of how much this guy has worked on the project at what times.¬†\n\nThis will also allow any new dev to be able to come in and take over with zero friction.\n\nSometimes you don't really want to be negotiating about getting the work handed over if things have not gone as planned as you have little leverage at that point.\n\nIf you want, I can look over the code base if you're concerned.¬†\n\nBest of luck.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "On it. Thank you so so much for your advice. Can I PM you further for looking at the codebase?",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "Yeah man, shoot me a dm if you you want.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aesrm3",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aesrm3/dont_use_namecheap_for_the_fr_tld/",
    "title": "Don't use NameCheap for the .fr TLD",
    "points": null,
    "comments": [
      {
        "comment": "Besides, Namecheap isn't cheap anymore. I've been using it for years but recently moved to Cloudflare as the renewal of my .com domain was 50% more expensive on Namecheap.",
        "points": "74 points",
        "children": [
          {
            "comment": "Yep, they‚Äôve hiked some of their tld prices twice this last year. They‚Äôre slowly transitioning to become nameexpensive.com\n\nWhat alternatives are there though?, it seems all domain providers are a bit dodgy, at least namecheap is still relatively cheap on renewal. 123reg and ionos hike their prices massively on renewal, their cheap prices are a scam. Plus namecheap has really good and affordable hosting plans.",
            "points": "14 points",
            "children": [
              {
                "comment": "porkbun and cloudflare",
                "points": "17 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "I've used them extensively for a long time and in the last year they've hiked by +50% pretty much every TLD I owned... like .tech, .pics, .net, and more. I had to get rid of a few of them since it wasn't worth anymore for hobby, non-profit sites.",
                "points": "7 points",
                "children": [
                  {
                    "comment": "Couldn‚Äôt you have transferred the domains?",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "I recently got a very good deal on .audio at https://sav.com.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Porkbun for most of my domains.\n\nNjalla for the more private ones.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Out of curiosity, did you have auto-renewal enabled on this domain?\n\n‚Äã\n\nP.S. OVH isn't technically renewing it for free. All registrars extend the registration by 1 year when you transfer in a domain.",
        "points": "2 points",
        "children": [
          {
            "comment": "Yes, but no credit card on the account. And yes, this does not show an error on the admin panel.",
            "points": "0 points",
            "children": [
              {
                "comment": "I think you‚Äôll only know that in a year. Currently, you paid them to do the domain transfer - which automatically renews it. They (like most other providers) will likely recoup their costs at renewal time. Would be interesting to see at that point if they require auto renewal to in a similar manner or not.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I switched to cloudflare domains.. best decision",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is called user error.",
        "points": "15 points",
        "children": [
          {
            "comment": "Why is this even allowed? It seems purely like a scam.",
            "points": "0 points",
            "children": [
              {
                "comment": "No, the scam comes when you let it all the way expire, and a bot swoops it up for someone like hugedomains. Then you get to by back your domain for $6000 when you initially paid 200 for 10 years. Domains aren't owned, they expire. And I like that system because it gives me hope one day I can have goatse.com for my portfolio",
                "points": "7 points",
                "children": [
                  {
                    "comment": "That's a different scam.",
                    "points": "11 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Don‚Äôt ever use namecheap for any kind of domains. It is the second worse domain registrar exists",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I lost a .pe address under the exact same conditions.\n\nI had been warned of the policy when I first bought it, and again in plenty of time before renewal. It was my fault.\n\nI fail to see why you are blaming NameCheap for this. It's not their policy, and they even tried to get it back for you.",
        "points": "3 points",
        "children": [
          {
            "comment": "Well they are the only one with this policy. Ovh, gandi,cloudflare do just fine.",
            "points": "-2 points",
            "children": [
              {
                "comment": "Tucows, Enom, & Webnames enforce the restriction, and I'm not bothering to go past the first page of results.\n\nThis is on you. Stop blaming others for your mistake.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You didn‚Äôt follow the TOS and it‚Äôs their problem?",
        "points": "-19 points",
        "children": [
          {
            "comment": "I didn't follow a dumb rule that only applies to them ?\n\nFuck me.",
            "points": "13 points",
            "children": [
              {
                "comment": "But isn't it also your responsibility to know what you sign up for? Make sure auto-renewal is in place? Companies will screw you if you let them.",
                "points": "-4 points",
                "children": [
                  {
                    "comment": "Do you read the support page before buying a domain name ?\n\nI do agree it's partly my fault but still, WTF is this rule and the recovery cost is crazy.",
                    "points": "2 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Golden rule: He who has the gold makes the rules.",
                "points": "-21 points",
                "children": [
                  {
                    "comment": "Cool bro, we're critiquing the way it works. We all fully understand how it works. Thanks for your input tho.",
                    "points": "9 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Or just don't buy your domains from companies whose only USP is being cheap.",
        "points": "-6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Unrelated but .fr sounds like a novel domain for zoomer speech, like nocap.fr.",
        "points": "-2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Thanks for the tip. Scary. Almost reminds me of registerfly days when I was blackmailed with $500k to release a domain",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aespa7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aespa7/making_a_website/",
    "title": "Making a website",
    "points": null,
    "comments": [
      {
        "comment": "Don't worry if you're new to web development! Dive into coding your website‚Äîit's a valuable skill for the future. üöÄüíª",
        "points": "0 points",
        "children": [
          {
            "comment": "I‚Äôd honestly love to just don‚Äôt know where to start üòÇ",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I would recommend no-code development as it makes it cheap and fast. If you are looking for more further customization and very specific functionality, however, custom code is the way to go. However, would be much more expensive and would take longer to build. Plus, you would have to maintain the website after building it.\n\nI've been using Wix and I love it. Has everything you need. It also has a good balance between ease of use and customization. You can drag and drop everything which makes building incredibly easy and create what's on your mind.\n\nPlus, it is nice to have all the tools required to run your business right there in one website. Wordpress is a great option too, and Shopify if you are planning to build an ecommerce business.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aes5ez",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aes5ez/accidentally_firewalld_out_of_my_own_vps/",
    "title": "accidentally firewall‚Äòd out of my own vps",
    "points": null,
    "comments": [
      {
        "comment": "Usually you'll have access to the actual console terminal of the vps as an out of band-connections for exactly those situations.",
        "points": "33 points",
        "children": [
          {
            "comment": "unfortunately the provider i use charges extra for that so i guess i‚Äòll have to wait until they answer my support ticket",
            "points": "7 points",
            "children": [
              {
                "comment": "You should never have to pay for a recovery console on a cloud provider.\n\nWhat provider are you using? Seriously consider changing.",
                "points": "37 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Wow.. literally every VPS provider I've ever used has provided either an SSH recovery console, or a VNC connection to a virtual local serial console (unaffected by firewall) at no extra charge..",
                "points": "11 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Even the dirt cheapest VPS providers have a console. I use a lot of cheap VPSs and they all provide it.\n\nBTW we're not taking about CPanel. This is just a TTY login to the VPS.",
                "points": "",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Sounds like you should get a vps from another company.",
        "points": "5 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I did the same. My service provider must see this all the time and provided a free VNC connection which you can access anytime on the account dashboard. Hoping you get your VPS back soon.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I did this before when setting up Apache on an ec2 instance. I chucked and somehow I was able to get in by rebooting the instance and sshing in asap",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Oh, been there before.\n\nDid some routing/IP-table stuff for a VPN and locked me out. Had to reinstall the whole server.\n\nHappens to the best.\n\nIt won't happen again next time, I'm¬†sure!",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "To chime in with what others are saying, a good provider has an alternate access method for this very reason. Could be web based. Or VNC. Or a different SSH port. Etc. consider checking out Hostinger.com.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What hosting provider are you using so I know not to use them?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aes54s",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aes54s/is_it_possible_to_check_a_facebook_users_groups/",
    "title": "Is it possible to check a Facebook user's groups?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aes3mr",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aes3mr/platform_for_user_management_billing/",
    "title": "Platform for user management / billing?",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aermz8",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aermz8/how_can_i_code_this_design/",
    "title": "How can I code this design",
    "points": null,
    "comments": [
      {
        "comment": "how about providing a link",
        "points": "7 points",
        "children": [
          {
            "comment": "here's the design: https://dribbble.com/shots/23210297-Fintech-Landing-Page-Design",
            "points": "0 points",
            "children": [
              {
                "comment": "i would make svg and set it as background...i think the easiest way|\nno need to overthink it",
                "points": "3 points",
                "children": [
                  {
                    "comment": "1 row - background color as green\n\n3 columns in the row:\n\n1st column is 3 width and has home logo\n2nd column is 6 width, has black special svg to be the cutout as the background image. Has px-4 padding with another row inside that has the nav links. Also looks like there's negative top margin. To get the black svg either export\n3rd column is 3 width and has a row that contains the Search Icon, vertical bar, and help button.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "The ‚Äúnav areas‚Äù look like divs with rounded corners w/ some padding on the main container.\n\nMay need to use the transform property or some border tricks to make it work. Looks like fun challenge.",
        "points": "3 points",
        "children": [
          {
            "comment": "the problem I am facing is to create the notch design.",
            "points": "-1 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I think a mask. SVG clipping mask. But if you inspect the code in the dev tool, you‚Äôll be able to see exactly how they did it.",
        "points": "1 point",
        "children": [
          {
            "comment": "I have only this pic, its taken from dribble",
            "points": "0 points",
            "children": [
              {
                "comment": "Try searching CodePen for examples.",
                "points": "-1 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I figured you could do it with CSS mask, and I didn't know how to use that property so I took it as a learning opportunity.\n\nHere is an example that at least includes the header notches. The design itself (like many dribble designs) falls apart on mobile, doesn't scroll well, and doesn't scale well to more content, but do with it what you will.\n\nYou can use the inspector to investigate it.",
        "points": "1 point",
        "children": [
          {
            "comment": "thanks for example.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You‚Äôre asking about React, but this has nothing to do with React. I would look up CSS, and get comfortable with positioning. From there, you‚Äôll have the building blocks to create pretty much any layout, including this one.",
        "points": "1 point",
        "children": [
          {
            "comment": "What is it with people skipping the fundamentals and going straight to JS frameworks. Learn to walk before you run.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Again? this is like the 4th time you've asked this?",
        "points": "0 points",
        "children": [
          {
            "comment": "that's first time I am asking you can check on my profile, maybe someone posted this design earlier",
            "points": "-1 points",
            "children": [
              {
                "comment": "This is literally the 4th time i've seen someone ask how to do the corners on that nav, i remember it cause its those corners on that colour scheme.",
                "points": "0 points",
                "children": [
                  {
                    "comment": "Doesn't mean that OP seen it before",
                    "points": "2 points",
                    "children": [],
                    "isDeleted": false
                  },
                  {
                    "comment": "I found this design on dribble and it looked appealing and tried to make it. Maybe many people posted it before.\nI understand your concern",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Creating that navbar using CSS is totally doable! Utilize the display property with relative or absolute. Just set up a div containing your navigation links and align it using these display properties. Piece of cake! üç∞üé®",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "image is deleted :(",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "How many more subreddits are you going to spam with this question, /u/byteNinja10?\n\nYou need to learn the basics. Not just think React is a tool to solve every problem.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Add css rounded corner .border-radius",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aerijv",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aerijv/web_agency_in_2024/",
    "title": "Web agency in 2024?",
    "points": null,
    "comments": [
      {
        "comment": "From my perspective, as long as there is traffic on the Internet, agencies will be needed, although from the experience of working in several, I will tell you right away that it is best for you to specialize right away and build the image of your agency as a specialist in a given niche, for example, it may be creating stores websites, or websites only for the real estate industry with various add-ons, such as forms for apartment management, etc.\n\nTry it, you can always give up, you will regret more that you didn't try than that it didn't work out.",
        "points": "4 points",
        "children": [
          {
            "comment": "that‚Äôs actually a very good advice. thanks you!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Profitable yes, but prepare to be an expert on wordpress and shopify.",
        "points": "13 points",
        "children": [
          {
            "comment": "Yep. I do mostly WordPress and did $260,000 this year by myself with only some contractors here and there.",
            "points": "7 points",
            "children": [
              {
                "comment": "Same boat.¬† Somehow made stupid money last year.¬† Let me know if you need help!",
                "points": "3 points",
                "children": [
                  {
                    "comment": "Do you build your sites from scratch with php?",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "WordPress mostly and create bespoke themes.",
                        "points": "0 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "Do you build your sites from scratch with php?",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "what about some sales and marketing strategies?",
            "points": "1 point",
            "children": [
              {
                "comment": "Paid search. From there you better have a killer website and portfolio lined up. Be prepared to outbid the competition in that area. Google is a bidding system essentially for top slots on keywords and geography. market towards up and coming areas geography wise. Look to places where entire local economies are springing back to life. With all that business growth comes a need for websites and apps. Alternatively, find a niche or network the old fashioned way, making friends at corporate and civic luncheons.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "My team is available for conctracting if anyone's bloated with work. Feel free to send a PM",
        "points": "1 point",
        "children": [
          {
            "comment": "Can‚Äôt knock the hustle.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Only way to find out - Actually running a web agency. By the way, best of luck.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yes. It‚Äôs incredibly profitable if you know how to niche down and get your workflow down. I‚Äôve been at it for 5 years now and consistently make 6 figures a year doing it part time. The hardest part is know how to sell yourself and your services against Cheap overseas labor and page builders. I wrote this guide telling you everything you should do to start and grow a freelance web agency based on everything i did to grow mine\n\nhttps://codestitch.app/complete-guide-to-freelancing\n\nThat should answer a lot of questions!",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeqy2u",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeqy2u/what_is_your_your_preferred_tech_stack/",
    "title": "What is your your preferred tech stack?",
    "points": null,
    "comments": [
      {
        "comment": "There isn't an industry standard in terms of tech stacks, there are just a few more popular than other, i would advice however to start learning about some frameworks, both front-end and back-end if you wish to become a full-stack dev.\n\nOften for these complex projects you would start working with microservices that could tendentially be built with different technologies and have an API allowing to communicate with each other.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This isn‚Äôt cutting edge but it‚Äôs what I have used professionally and I like it ¬† ¬† ¬† ¬† ¬† ¬†¬†\n\n-Angular ¬† ¬†\n\n-GraphQL ¬† ¬†\n\n-Java spring ¬† ¬†¬†\n\n-MS SQL Server",
        "points": "2 points",
        "children": [
          {
            "comment": "Why would you choose spring over .net if you're using SQL server?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "PHP + Laravel, MySQL, React/Vue and TailwindCSS.",
        "points": "4 points",
        "children": [
          {
            "comment": "100% my choice. I would add redis\n\n(I have 12+ years experience)",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Started webdev from scratch in April 2023.\n\nI really love the techstack for my little website here :\n\nSveltekit (Frontend)\nFastAPI (Backend)\nTailwindcss (CSS)\nPocketbase (Database)",
        "points": "5 points",
        "children": [
          {
            "comment": "Svelte or sveltekit mention is an automatic up vote from me. It's such a delight to work with! Even better if you have enough control to get it into the workplace.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I like Phoenix (even though I don't really like elixir üòê I like my types) with psql and tailwind. Easy stack and development is super fast.\n\nJust use it for \"normal\" stuff not heavy loads or specialized problems",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "MERN\n\nIt‚Äôs what I know",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Remix (it's a fullstack React framework), Prisma, PostgreSQL. Express for websockets.\n\nNo frameworks for css.\n\nPrefer SSG over SPA.\n\nWebsockets for real time notifications.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "frontend: vuejs (option api) backend: laravel/rails/django (i cant decide)",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Vue, Node, Postgres\n\nAWS with everything severless (Lambda, S3, Aurora)",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "A fully scalable stack for me would be React with NextJS, .NET8 backend, SQL database (Postgres or MSSQL), Tailwind or StyleX for styling. Honestly you don't need much else.\n\ndotnet is insanely fast and efficient, even if you are a novice\nNextJS gives you the ability to pick tbetween ISR, SSR and CSR however you like it. Thus you can optimize as you go along - going from CSR to SSR / ISR. It also handles codesplitting out of the box for you so that you only serve the JS / CSS that is needed on a per page basis\nTailwind / StyleX with removing all unused styles and duplication",
        "points": "0 points",
        "children": [
          {
            "comment": "my biggest problem with tailwind it makes html or jsx code unreadable instead.\n\nI'd rather have duplicates.\n\nIt feels like slightly better version of inline styles, but still bad.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "What load do you expect? Are there any other fun requirements?\n\nUnless we are talking about something huge, Rails 7 with HotWire + React for the FE and a Postgres DB with assets in S3 should be fine.\n\nAuth / Auth would be Devise. Rendering and routing are backend.\n\nKeep it simple.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "React / Angular (frontends)\nLaravel / Symfony (backends)\nDDEV (local dev environment)\ncypress (e2e tests)\nphpstan & eslint (helping hands)\npostgres (database)\nPhpStorm (ide)\nWindows 11 + Debian in WSL (os)\nDBeaver (sql client)\nPostman (api platform)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Browser Extensions: - Svelte v5 + TypeScript + TailwindCSS - Adobe Photoshop + Illustrator - Vite v5 - Firebase Auth - Firebase Storage if needed - My own custom build step extensions and websockets\n\nBasic Website with server components: - NextJs App router + server components - Namecheap - GitHub Pages for free hosting",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I build my own side projects with pure CSS,JavsScript and PHP.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Aws elastic beanstalk for¬†deploy, next for ssr, astro for SSG, css modules + sass for css. Kysely for \"ORM\", express for the api ( looking into next or Adonis next ), react hook form for forms, shadcn UI for component library, zustand + react query for state management stuff and data fetching, AG grid for datagrids. Docker for obvious reasons.\n\nThis is my go to for most projects. I kinda wanna explore with a monorepo like turborepo next as well.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeqv3n",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeqv3n/aws_ses_is_pissing_me_off/",
    "title": "AWS SES is pissing me off",
    "points": null,
    "comments": [
      {
        "comment": "We use Mandril at work, ¬†not insane volume but it works well and support is surprising good.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Have you tried setting up SNS? It's often recommended to show that you have a plan in place to track and handle bounces and complaints as part of the application process. Also worth being explicit that you are planning on using it for transactional emails only if you didn't include that already.\n\nRegarding other transactional email services, we might be able to help you on Waypoint. Here's a bit on how we compare to SES. I'm one of the co-founders ‚Äì happy to help if you need it.",
        "points": "1 point",
        "children": [
          {
            "comment": "I have set up SNS and described that emails that get bounced are black listed. I‚Äôll take a look at your service\n\nEdit: I don‚Äôt need to send 10,000 emails a month‚Äîat least starting out. Probably closer to a few hundred at most. Thanks for sharing though",
            "points": "2 points",
            "children": [
              {
                "comment": "Bummer. Unfortunately, the application process isn't very transparent.\n\nOne more thought ‚Äì do you have a live website on the domain that you are looking to host emails on?\n\nEdit: Based on your volume and needs, check out SendGrid. They have a free plan with up to 100 emails per day.",
                "points": "-1 points",
                "children": [
                  {
                    "comment": "I have two domains example.com and shop.example.com. The example.com site is still in development and hasn‚Äôt been hosted yet (theres currently just a placeholder banner that says ‚ÄúSite in development‚Äù). The shop.example.com site is up but the only visible part is the login/registration. This may be a red flag. I‚Äôll try sending them a screen recording of my site in action",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "I imagine a non-resolving domain is a big red flag on their end ‚Äì and might even be part of their automated checks. I think a landing page with a bit more info or even a waitlist could be a quick fix.\n\nGood luck!",
                        "points": "2 points",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "We use Sendgrid without issues. Support when you're on the paid plans is pretty acceptable.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I use Mad Mimi for transactional emails. They have an easy to use API and their plans are very reasonable. You pay for the number of email addresses stored, not the number of emails. So you can literally send each user an email 10 times a day and still pay the same price as if you sent 1 email a month.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Yep it‚Äôs really annoying, after getting denied multiple times I found Brevo, works right away and can send like 300 free a day I think",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeqhqe",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://www.forth.com/wp-content/uploads/2018/11/thinking-forth-color.pdf",
    "title": "Thinking Forth: A Language and Philosophy for Solving Problems",
    "points": null,
    "comments": [
      {
        "comment": "At a Glance:\n\nThis document is an in-depth exploration of the Forth programming language, detailing its unique approach to problem-solving and programming. It not only covers the technical aspects of Forth but also delves into its philosophical underpinnings, making it an essential read for those interested in both the practical and theoretical aspects of this distinctive language.\n\nIf you don't like the summary, just downvote and I'll try to delete the comment eventually üëç",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeqg7f",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeqg7f/creating_a_website_as_a_beginner_for_a_friend_who/",
    "title": "Creating a Website as a beginner for a friend who has a client",
    "points": null,
    "comments": [
      {
        "comment": "Oof, sounds like quite the responsibility. You‚Äôll also have to think about security stuff. If it‚Äôs going to be a webshop, go for something like shopify so you don‚Äôt really have to focus on the ‚Äòshop‚Äô part and deploying part.",
        "points": "1 point",
        "children": [
          {
            "comment": "I was thinking about Shopify as well, I already have a subscription, and it will cut off a lot of work. The business is very small and I don't see why I should build it from scratch the functional part at least.",
            "points": "0 points",
            "children": [
              {
                "comment": "Definitely start with that then!",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "In your situation I would probably suggest knocking up a Shopify (or similar) website.\n\nIf you really are looking to develop it yourself then you'll have to decide on what language stack you will use. For example, I am currently in a job that uses a LAMP stack (Linux, Apache, MySQL, PHP). It is heavily PHP oriented as our core system is built on the Slim Framework. HTML, CSS and JS are fundamental skills, but you will most likely need a lot more than just those in order to built a great site nowadays, especially if the site is commerce (you mentioned payment gateways).\n\nYou could use a headless CMS to start off with which will make life a fair bit easier, but again, it also depends on budget, what languages you choose to use and also how many products/categories you'll be selling",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'd recommend either squarespace or wix. They come with a WYSIWYG editor and unlocked editor for more advanced users. What is included however is domain name handling, email, product management, payments and transactions and even delivery (if required).\n\nhttps://www.squarespace.com/\n\nhttps://www.wix.com/\n\nBoth are free to start designing and experimenting and even if you don't use them they will be great tools for mock ups and working out what you DO want and what you don't.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I think don‚Äôt do it, you aren‚Äôt ready yet. Or just do it but expect it to go wrong and use it as a learning experience",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeq6q5",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeq6q5/mediocre_programmers_dilemma/",
    "title": "Mediocre programmers dilemma",
    "points": null,
    "comments": [
      {
        "comment": "You'll always feel more in a \"assembly line\" environment at work compared to a bootcamp or if you're learning solo.\n\nIt takes time to get a work life balance to also allow to other projects to pop back up and you'll eventually get there.\n\nBut yes, a very popular option would be to make an open source side project to also use as a portfolio one day.",
        "points": "106 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Think about what you're expected to do at work vs what you want to do outside of your work codebase.\n\nThe reason it feels mediocre its cause its same shirt different day.\n\nNo matter how much the project changes, its still the same project with new features.\n\nWhen you sit down outside of work, its a different ecosystem, and thats exciting.\n\nBuild mini ecosystems for you to play in. and for the love of programming jesus, not every piece of code you write has to make money on the internet.\n\nSit and break things, sit and mess around, sit and read code, f*** sit and review your own code.\n\nMay the compiler be with you.",
        "points": "22 points",
        "children": [
          {
            "comment": "Great comment.",
            "points": "1 point",
            "children": [
              {
                "comment": "We get so stuck in the \"always delivering\" mindset. Every piece of code needs to be as amazing as we can muster.\n\nBut thats not what got us into programming, design or even working on the interpipes.\n\nI personally get a kick out of doing cool shit with shaders... for example",
                "points": "5 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "This is a complicated question. From a code perspective, I get the most out of exploring new tech on weekends for projects I almost never finish; but I learn a ton.\n\nThere are other areas in which you could develop your role though; you could expand horizontally rather than vertically. How are your soft skills? Could you ask for more responsibility at work? Maybe dip into dev ops or product?",
        "points": "36 points",
        "children": [
          {
            "comment": "My Soft skills are so so. I try to be more involved in retros, grooming, code reviews etc. but, again, I don‚Äôt feel I have the deep understanding needed to be very productive or helpful in these places. I‚Äôm just doing enough to get my tickets done.\n\nI did setup our google analytics for the product team. I like the idea of doing more dev ops stuff but I‚Äôm not sure how I could get into it shy of getting a new job as a junior again and kind of starting over.",
            "points": "6 points",
            "children": [
              {
                "comment": "DevOps isn‚Äôt a role change, it‚Äôs more about taking on the responsibility of getting software into production and operating it.\n\nDo you have build and deployment pipelines for the apps your team own? Could you find ways to improve them, like making them faster with caching and parallelisation? That could be a start.\n\nI‚Äôve gravitated to a DevOps role in most of the teams I‚Äôve worked in, just by putting the work in when there‚Äôs downtime and I spot an improvement. Most people don‚Äôt wanna do it so they‚Äôre just grateful someone else is dealing with it.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Thanks for that advice. How can I start there? I certainly don‚Äôt feel like I know enough to go and improve our deployments. I hardly know how our deployments work, there‚Äôs a lot of docker and Jenkins and rabbitmq that I don‚Äôt understand. But I work on the web portal side. How could I break into that some more?",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "I hardly know how our deployments work, there‚Äôs a lot of docker and Jenkins and rabbitmq that I don‚Äôt understand\n\nPerfect opportunity to find out :)\n\nShow a curious mind, and (for the most part) people will respect your curiosity. Show a productive curious mind, and folks will want you on their teams.",
                        "points": "6 points",
                        "children": [],
                        "isDeleted": false
                      },
                      {
                        "comment": "I can‚Äôt give specific advice, but speak to your lead developer and mention you‚Äôre interested in learning more around DevOps.\n\nThey may have some tasks they want doing, or give you pointers about what to learn / where to look.",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Stop copying from codebase, stack overflow, or ChatGPT.\n\nStart using the languages' documentation: https://www.php.net https://developer.mozilla.org/en-US/docs/Web https://nodejs.org/docs/latest/api/\n\nYou're not growing because you're not challenging yourself. Next task you need to complete, try to solve it by yourself.",
        "points": "25 points",
        "children": [
          {
            "comment": "Thanks for your input, This comment encapsulates my problem pretty well.\n\nI don‚Äôt feel like I have the time to try and solve tickets myself so I end up relying on chat and stack overflow. I‚Äôm not proud of this lol, I want to learn and get better. I usually spend the first 3-4 days of a ticket trying to solve it myself but then hit the point where I need to deliver and I go looking for help. That‚Äôs my dilemma and that‚Äôs why I feel like I‚Äôm spinning my wheels. I‚Äôm either frantically trying to absorb knowledge or frantically trying to finish the work and it‚Äôs hard to do a good job of either when that‚Äôs the case. I certainly feel challenged üòÑ. But I don‚Äôt feel like I‚Äôm really reaping the rewards of my struggle.",
            "points": "10 points",
            "children": [
              {
                "comment": "How can you simultaneously not have time to do your work on your own and also not feel challenged or growth? The is a massive opportunity for growth. Stop using crutches to slam your way through work and take the time to really figure it out.\n\nThink of it in video game terms: imagine you‚Äôre playing a game, but before every session you go watch a full playthrough of the next hour of gameplay with all the puzzles solved. Of course that would be boring.\n\nYou‚Äôll never become a senior developer if you don‚Äôt learn to use your tools. Ask ‚Äúwhy‚Äù and then go legitimately figure it out.",
                "points": "4 points",
                "children": [
                  {
                    "comment": "I never said I don‚Äôt feel challenged, I‚Äôm not sure where that‚Äôs coming from. I feel very challenged every day. My tasks are hard for me, I struggle to finish things on time, and I feel like I‚Äôm working really hard every day. But I don‚Äôt feel like I‚Äôm getting smarter or better at this despite my effort. that‚Äôs why I‚Äôve made this post üòÑ",
                    "points": "4 points",
                    "children": [
                      {
                        "comment": "Ah, okay, fair enough.\n\nIf you‚Äôre still being challenged but don‚Äôt feel like you‚Äôre growing: why is that? Adjusting to professional life as a dev is quite hard.\n\nIf you don‚Äôt feel like you‚Äôre growing enough, that‚Äôs a hard one. I‚Äôve mentored a lot of juniors, and they spend a lot of time comparing themselves to people who have 5+ years of experience and wondering why it‚Äôs taking them so long to catch up. The best suggestion I‚Äôd make is to see if you can get a real mentor in your company (even better if they‚Äôre on your team) and try to get them to give you feedback on what you can do to improve.\n\nA lot of growth in software is raw experience. Doing enough things that you start to recognize patterns or remember what you‚Äôve done. It‚Äôs hard to turn that corner, though, because first you have to get to the point where you understand why you‚Äôre solving your existing work the way you are.",
                        "points": "1 point",
                        "children": [],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              },
              {
                "comment": "I think a lot of people are giving you advice that doesn't really make sense and you keep having to correct them because you don't know that you're actually learning. You say you're not learning, so people are assuming it's because you find what you're doing not challenging, because that's the only time you wouldn't learn. You don't see your struggles or reading of SO as learning, so you say you're not learning although you actually are.\n\nEvery time you encounter a problem and remember \"oh yeah I saw this issue before, this is what I found online that solved it\", you learned something. Every time you struggle through days of finding different solutions to a problem, you learned what didn't work. Every time you remember something you did in the past to help you on a ticket is evidence of you learning. There's going to be a day if you just keep doing what you're doing when you look back at yourself from 6 months ago and think \"wow they couldn't have done what I just did\".\n\nAlso, going to disagree with the other person saying to just \"take the time to figure it out\". With my juniors, I would be upset if I realized they were spending days of their time not having any idea how to do something and didn't ask me about it. Use the rest of the company as a crutch, even if it's just to bounce ideas off of.",
                "points": "3 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "If the OP is getting paid to do a job on time, it's doubtful they have time to start from scratch. Also, it's possible to learn on your own after looking at working code.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You're doing fine don't worry\n\nAs a junior, you're expected get done what's asked of you\nAs a medior, you're expected to do what is needed (including figuring out what that is)\nAs a senior, you're expected to shape what is needed (including telling juniors what to do)\n\nMost of the growth is not on getting better at doing, but at knowing what needs to be done. Handling a few hundred simple tickets is part of that",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "> I want to be a good dev, a senior dev one day. Is my only option to put in extra hours with a side project, or extracurricular classes?\n\nBasically yes, but you do not have to do it *now*, nor all at once. It's a marathon, not a sprint. If you read a couple of books and play with one new language or framework each year, over 10 years you have 20 books and 10 languages.",
        "points": "8 points",
        "children": [
          {
            "comment": "Thank you. Got any book recommendations?",
            "points": "1 point",
            "children": [
              {
                "comment": "Oh God, there's so many :), but it depends on what you like, and where you're at in your journey. You may want to start with this essay from Norvig as motivation - https://norvig.com/21-days.html\n\nIf you want to become a better *programmer* and want to go deeper on the fundamentals, Structure and Interpretation of Computer Programs is amazing, or it that one feels too heavy, try How to Design Programs. These are both on the Scheme language. Or the 'little schemer' series for a *much* lighter read.\n\nIf you want to focus on Javascript, https://github.com/getify/You-Dont-Know-JS sounds pretty good. Also, there's many for each of the frameworks (these change too fast, I'm not an expert), or even Typescript books.\n\nIf you want to go to light backends, any book on Rails or Django. I learned Rails with this one https://3rd-edition.railstutorial.org/book, or, if you're more adventurous, Elixir and Phoenix\n\nIf you want to go more into small scale software engineering, 'Code Complete' and 'The practice of programming' are great. 'Clean Code' is also good. I learned a lot from the original Design Patterns book.\n\nYou can also get any Data Structures or Algorithms books. Any programming languages book, or, maybe in a few years, when you get to team lead etc, some of the books focused on soft skills (I'm old, for me these were The Mythical man-month, Decline and Fall of the American Programmer and Peopleware, although I've managed to avoid being a boss :).\n\nAgain, keep in mind these are NOT all at once (you do that in college/grad school, if you're a full-time student). Also, ignore and skip the ones you don't like; different books hit different people differently; these are some of the ones that helped *me* (and some of my students) grow.",
                "points": "10 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "First off, I'll say that you're only a year in, you really don't know anything yet. I felt I knew a lot of things after a year. And then the year after that I learned a ton more. And the year after that as well. And now it's been many years, and I remember how my first year felt. I could barely do complicated things without googling it. Now that I've been doing it for years, repetition is literally what learning is. You learn how to do it, you do it 10 times, your 11th time you can now just do it off the top of your head without looking things up.\n\nI'm at a point in my career where I know more than most other devs I'm in contact with. I still learn new things all the time because I'm lucky enough to work with devs that have even more experience than I do. Which brings me to my next point. Everyone really needs at least one mentor. Someone that has been doing it for long enough that they have solid experience, and more importantly, opinions. I had such a great mentor, I learned more from him in the first 6 months I worked with him than I did the previous 3 years of working on my own.\n\nSo that's really it. If you feel you're stuck you need to find a mentor, and also realize that while you feel like you know a lot right now, I can assure you that after working for only a year, you know barely anything, and to be open to new things. Look through the code. You say you're using stack overflow and chatgpt. So you don't know certain things. Explore that. What are those things that you need to look up? How do they work? Look at parts of the codebase that you might not have 100% understanding of. Figure out how they work. Figure out why certain decisions were made. Talk to other people and ask questions about code. Sometimes the answer is \"because that's the only way it works\", and sometimes the answer is \"we're doing it this way because of [learning experience]\".",
        "points": "13 points",
        "children": [
          {
            "comment": "Sorry if I presented myself like I know a lot, it‚Äôs the opposite üòÇ. I don‚Äôt feel like a very good dev, and I want to get better. I think you are exactly right about a mentor, that‚Äôs honestly what I want the most but I‚Äôm pretty siloed at work.",
            "points": "2 points",
            "children": [
              {
                "comment": "No you didn't don't worry, I'm just trying to explain my thoughts, and explain what I remember.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "This is pretty common. It‚Äôs why devs can be working for 15 years and not get much better and never learn the basics of CSS and the normal things you might expect. It‚Äôs also why a lot of people are having trouble finding work right now. They don‚Äôt have much to show in comparison to people who aren‚Äôt in maintenance mode.\n\nThere aren‚Äôt areas of the codebase that interest you? That you might read or refactor? There are tickets that are a bit more out of your comfort zone that internet you? You‚Äôre exhausted? Are you using your time wisely? Are you using chat to do your work for you - or using it to learn? Do you have people on your team to pair up with? Are you using hours at work to read documentation and try what you learn out in the codebase? Maybe your bootcamp didn‚Äôt teach you to problem solve. Maybe your specific company is just boring and doesn‚Äôt have anything to learn. So, you gotta treat this like a problem and solve it. Why are you too exhausted to spend 1 hour a day working on a project? How could you organize your time differently? Can you change your approach so that you‚Äôre learning new things with each ticket? Or are you at the wrong job? I‚Äôd suggest talking to a mentor or coach of some sort with the real code in front of you.",
        "points": "14 points",
        "children": [
          {
            "comment": "These are very good questions, thank you, I‚Äôll touch on a couple of them.\n\nI try to absorb and learn as much as I can from each ticket. I keep a running document of ‚Äúwhat I learned today‚Äù. But I feel I need to balance learning and delivering, so at a certain point I‚Äôll admit that I let chat or stack overflow do the work. I feel like I‚Äôll take too long to finish tickets if I don‚Äôt. So I find myself in this grey zone where I‚Äôve got a semi-complete understanding and a complete ticket. This is why I posted, I want to be better.\n\nThere are parts of the codebase that interest me but again, the balance of learning vs delivering. I can‚Äôt go off into laravel land just because I like it, I need to deliver on tickets. Honestly I feel a mentor would be the best thing for me but I‚Äôm pretty siloed at work ‚òπÔ∏è.\n\nTruthfully yes I am pretty exhausted after work. It‚Äôs stressful to me to have this mix of frantically trying to absorb knowledge half the day and frantically trying to complete my task the other half the day lol. I probably could do an hour on a pet project, we‚Äôre all more capable than we think but it‚Äôs just hard.",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You are me.\n\nBootcamp. Little over a year in.\n\nI work in 4 repos. I finally understand how they all connect and how to navigate the code to find where I need to work. This was a huge breakthrough for me. But now because I am a year in I feel like I am not where I ‚Äúshould‚Äù be. I recently started using chatGPT and while it‚Äôs been a game changer as far as gaining traction/momentum on starting tickets, I feel like I am not really growing as a developer. If I get stuck for too long I start consulting with chatGPT. My efficiency has improved significantly (tickets that would have taken days now take hours) but I feel like I am doing myself a disservice. My biggest fear is that if I get laid off and need to start applying for a new position I won‚Äôt have what it takes. I work my 9-5. But I don‚Äôt have much time outside of work. I have a wife and kids which is the reason I switched careers in the first place.\n\nI really try to be a team player. Help with reviews, swarm on QAs, run stand ups, present at show and tells with stake holders, and ask for help from my team when I am royally stuck and chat doesn‚Äôt help. I want to be better, and I want to be valuable so that if/when layoffs come around I am seen as indispensable.\n\nI was also recently reassured by some friends that are senior level that using AI is the future of development and that it‚Äôs okay that I use it to get started. They said as long as you understand what it generates and you can morph it to your specifications then I shouldn‚Äôt worry‚Ä¶ and I digress\n\nTL;DR. Echo basically everything you have said with a couple revisions to your story.",
        "points": "6 points",
        "children": [
          {
            "comment": "Ya you nailed it! Glad I‚Äôm not alone in thisüòÑ",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I‚Äôve been there. At some point at my job I was doing financial recon systems that needed to be configurable, and handle excel files of 16GBs with more than 30 Million Rows while juggling having to make a whitelabel website that has configurable forms and validations all while being a Junior. Fast forward two years at the same job, I‚Äôm making 60 Email Templates. The next month, I‚Äôm trying to deliver a 3 Month Estimated App in 3 Weeks and my Team of 3 that I led exploded to 24. Sometimes difficult problems need to be done, other times the boring stuff needs to be done.\n\nJobs fluctuate, problem difficulties change, that‚Äôs why a lot of good engineers hop around; to get bigger and bigger challenges. Some others, like me, like to challenge internal problems and try to solve those. I got bored once and built a scraping tool so I could keep a database of most recent car models for our company ul to date. I got even more bored once and built a configurable web builder. Was it shitty? Yes, but I learned a lot. How did I balance it? I either didn‚Äôt or explicitly asked my manager for time to complete a project.\n\nAnd some days I felt like a master, others I felt like a complete idiot. I find that it‚Äôs a common experience as a dev especially as you tend to have to learn and unlearn things much much more frequently than other professions.\n\nAlso, writing more code =\\= getting better. Some engineers only memorize, but don‚Äôt think. If you start to feel the problem is just repetitive and has no other way to be solved, find a more compelling problem either on your own or by moving jobs. That I feel, is the fastest way to ‚Äúlearn‚Äù.\n\nI‚Äôm really sorry for the shitty write up but I hope it helps.",
        "points": "4 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "being at a job for a year after a boot camp is not much time at all. what‚Äôs tough as a junior is to set boundaries. who‚Äôs the genius that told you your grace period is over? it takes a few years to pick up the craft seriously and you are not in the position to judge yourself as not such good programmer.\n\nKeep. Going.",
        "points": "4 points",
        "children": [
          {
            "comment": "This.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Your employer should provide you with some time and resources to learn more in order to improve the company's codebase.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "New programmers often have the misconception that knowing the programming language is the most important and, by extension, that writing code is the job. The best devs get their value largely from engineering...From deciding which code to write and which not to write, from carefully maintaining dependencies, from keeping a project consistent with good standards, from collecting the right requirements from stakeholders, etc. What takes you from a junior to senior dev is largely not knowing programming languages or writing code, it's all that other stuff.\n\nSo, I'd say if you hit a plateau because you're not writing as much code, maybe pick up a book on software engineering, software design, algorithms, computer security, database design, etc. Focus less on the language and the code and more about the knowledge of process and system design.",
        "points": "2 points",
        "children": [
          {
            "comment": "Agree with this, but this comment may create a false impression that the language does not matter. It does, decent coding skills is absolute must on every level. However, while it's almost everything that is needed from a junior dev, it will be just a checkbox for a senior. When I conduct interviews, the difference between junior and senior devs expectations is not in code readability and language knowledge.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Read those books on fundamentals already mentioned, and thoroughly read language and framework documentation so you can start to grok what is actually happening under the hood.\n\nStart to identify what in your tickets is repetitive, and what you could do to make your work easier (refactoring, writing or adding tools and scripts). Nibble away at them over time.\n\nBy year 2 you'll have deeper knowledge of writing good code, understand the tools you're working with, and have some bullet points for your resume if you want to look for a new job for lack of a mentor or advancement.",
        "points": "1 point",
        "children": [
          {
            "comment": "Thank you üôè",
            "points": "0 points",
            "children": [
              {
                "comment": "Now's also the time to really dig into optimizing your workflow.\n\nLearn how to use git beyond the basics, your IDE keyboard shortcuts, proper debugging tools, command line tools (find, grep, sed, etc), etc.\n\nShaving off minutes for every task will pay dividends in productivity.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I think there are multiple approaches to improving as a dev. Some do it in free time, but it's most effective if you can do it on company time. Once you get past the grace period of \"learning on the job\" / not getting anything done, the next step is to figure out how to learn while still getting shit done. Nicer places to work build in some extra time, shitty places you have to add a buffer to your work so you get that time.\n\nIs the copy pasted crap actually the best way to build things? Often copy pasted crap is just cargo culted legacy garbage that no one bothers to fix or understand. Learning the ins and outs of your stack is probably the next best way to advance (unless you want a specific job with a different stack). Do you understand all the best practices of docker, graphql, sql, vue(vite)? How about your ORM or interface/bridge layers? Is there a particular area that can be better? Are there things your org does funny? Do you understand why? How resilient is a particular choice to changes in requirements in the future?\n\nYou gotta choose do you want general knowledge or domain knowledge. The 1st is better for getting new jobs. The 2nd is better for succeeding at your current job. Being good at both is what makes you valuable.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is this your first job? If so, give it time. You'll feel more comfortable when you have more experience.\n\nThe \"greenfield\" project is always more exciting, and always will be.\n\nBut if you don't have the energy to do learning / side projects after work (and you're definitely not alone in that), then my suggestion would be to see if you can get some paid training time at work. A lot of companies do this now. It's even better if you can tie the training to something that would benefit your project at work.\n\nIt's not: \"hey boss, I'd like to learn some random new shit, can I do that on the clock?\" (although some companies are fine with this, it's not a great way to sell it)\n\nIt's more: \"hey boss, I think that if I learned a bit more about [insert subject matter], it could really help us with [insert relevant technical issue / planned feature / maintenance etc]. Is it okay if I carve out some time on Friday afternoons to study this? I've been doing a good job getting my tickets done so far and I think this could really help the team.\"\n\nGood luck!",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Horizontal investment: learn ruby on rails, django, react, or svelte.\n\nVertical investment: learn nosql dbs, cap theorem, infrastructure, architecture.\n\nWhen i felt like i was plateauing out my knowledge with django, i tried to go deeper and go wider with web development. Nothing is ever the best thing but when you get exposure to a lot of different things, you slowly understand an even bigger picture of webdev. It's beautiful.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "What you're experiencing is normal. Keep going, find new things to improve each day, and you'll feel another wave of progress soon!\n\nPersonally I picked up analysis once the implementation, integration, deployment, and validation stuff got easy. Systems analysis, use cases, data flows and interfaces. So that was about applying power/influence stakeholder analysis, writing user stories in first principles, designing cucumber test cases, diagrammatic data flows, defining applicable security controls/standards, and UML. I perform the analysis as part of my investigation of a ticket, and implement it as I've analysed it.\n\nIt improved my software development immensely, almost like a breathing technique for martial artists.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I have a suggestion on how to improve while continuing to use chat.\n\nReceive a ticket, plan how you think/ would solve it by identifying the concepts involved and documentation. Then throw it to chat, reverse engineer chat's response, was it close to what you were thinking? As a challenge try to prove why chat's code is conceptually wrong. If it isn't wrong and you fully understand how to get there via reverse engineering, attempt refactoring -if plausible- implement. If chat's code is wrong, give yours a try. Refine using chat and docs if needed.\n\nReasoning for this approach: You save time in this process by attempting two paths at once. You have your plan, chat has a plan, you can collaborate on those plans. You also get an opportunity to practice code review, and through studying of documentation/ refactoring attempts you gain practice and knowledge.\n\nThis has been my approach to using chat and I feel less like I'm \"spinning my wheels in the mud\" and more like I'm improving.",
        "points": "1 point",
        "children": [
          {
            "comment": "Great idea, thank you!",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Use ChatGPT for learning. Ask it to explain the code; use why and how when asking. I've been coding for a long time and I find it extremely useful",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Welcome to work. It's not like school.\n\nHope this helps",
        "points": "0 points",
        "children": [
          {
            "comment": "I‚Äôm just saying I wanna be good at my job. I‚Äôm no stranger to the 9-5 shlog, I‚Äôm happy to put in the hours. But I want to get better and not just spin my wheels ya know",
            "points": "0 points",
            "children": [
              {
                "comment": "Here's what I learned and you will, too. As soon as you figure out how to crush tickets so you can blow through them like nothing they start giving you more fun stuff to do. Every ticket is an opportunity to get more familiar with the codebase so you can recognize what and where the problem is faster. That takes some practice. Don't just fix things. Understand the root of the problem. Start proposing solutions that get out in front of issues so that the tickets don't happen. Have opinions on what would make it better. Let the seniors vet your opinions and poke holes in them. Then make better ones. That's the difference between experience and skill. You're worried about skill, but you need XP to level up",
                "points": "3 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Golden rule: You will never reach senior level only doing things at work. You have to constantly improve outside working hours, learn things, read etc.",
        "points": "-2 points",
        "children": [
          {
            "comment": "This is not true at all.\n\nIf your work is extremely siloed and repetitive then sure. But most devs who work for an organization, change jobs, learn from others and can absolutely become a senior dev without spending all their free time coding.\n\nThe whole mindset of \"I must live and breath programming\" is toxic and is not at all required to become a senior in this field.",
            "points": "14 points",
            "children": [
              {
                "comment": "You mentioned \"change jobs\", which means learning new things. If you stay in same company - learn after work.",
                "points": "-3 points",
                "children": [
                  {
                    "comment": "I was just outlining a normal career path. Learning outside of work certainly helps, but is not at all required is all I'm saying.",
                    "points": "1 point",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "Dammit üòÇüòÇüòÇ I listen to podcasts but have such little bandwidth for a pet project when I finally get free time",
            "points": "-2 points",
            "children": [
              {
                "comment": "you don't need to finish any of them. Also read books from time to time about programming in general.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Got any book recommendations? I read the Phoenix project ü§∑‚Äç‚ôÇÔ∏è",
                    "points": "0 points",
                    "children": [
                      {
                        "comment": "\"The Pragmatic Programmer\"\n\"Designing Data-Intensive Applications\"\n\"PHP Master: Write Cutting Edge Code\"\n\"PHP Objects, Patterns, and Practice\"\n\nLean programming principles, theory, design patterns, SOLID etc.",
                        "points": "2 points",
                        "children": [
                          {
                            "comment": "Thank you üôè",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Are you literally complaining that you are copying and pasting from ChatGPT and StackOverflow and you feel like you hit a plateau? I mean you're just copying and pasting shit, not creating something new, what's to learn? Don't do that.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is something that many people don't get, regardless if they're coming from a bootcamp or not: You're there to make money to the company. The daily work will feel like a chore, at times you'll be fighting legacy code written by others who only did the bare minimum to make things work because deadlines are running, etc.\n\nYou HAVE to invest in yourself in your free time, especially when you're new. You cannot expect to work with exciting things in your day job, and the rate the technologies/frameworks change affect the job market out there, not the company in there.\n\nFor instance, most of our projects are .NET Framework with jQuery, and we have ZERO Angular/React/Vue projects. The job market moves towards .NET Core/.NET and separate frontend frameworks. It makes no corporate sense to rewrite everything in modern technologies, but it makes sense for you as a developer to learn what's currently popular.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Focus on the quality of your code rather than the quantity. There are lots of ways to level up while solely focusing on assigned tasks.\n\nWould it have been better to centralize code rather than copy/paste it? Do you truly understand the code you are pasting/generating? Are you following common standards and conventions for the languages/frameworks you are using? Do you have a linter installed, and if so have you made all the red and yellow squiggly lines go away? Does your code get reviewed? Does your code get tested?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "how long was the grace period?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Having an invested interest in the problem and solution is huge in starting to grasp the how and why instead of just chasing the what that will work.\n\nIf you have any passion or personal projects you can work on with your spare time, those can serve to spring you ahead faster than developing for someone else",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I have masters in CS, a lot of year of experience and I work in big tech. It's exactly the same thing. In addition to that, for any problem that you stuck with, there's ALWAYS another person who will do it in half an hour.\n\nOne thing is true though, it's very hard to grow professionally if you stuck with OE work. Fixing tickets is a skill but other skills must not be neglected.\n\nIs my only option to put in extra hours with a side project, or extracurricular classes\n\nIt's true for overwhelming majority of good devs that I know. You play around with things in your spare time, you learn them and then if you're lucky, you may use them at work.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is your project more a \"maintenance\" project, or a \"build\" one ? ( sorry, I'm not sure about the english terms )\n\nWhat I mean to say is that I find it interesting to work on projects that are just starting out ( build type ), as well as evolving existing projects that already have a large written code base ( maintenance ). Both allow us to gain different skills and help us to improve in different ways.\n\nMaybe you'd like to switch to a different type of project, or maybe you need to move on to more ambitious and complex projects (e.g. e-commerce, or simply high-traffic sites? ) that are different and would let you see more things.\n\nBut if you're working at a place that only handles one project, it's not necessarily going to be possible sadly.\n\nWhen there's a bug on the live version on your project, do you help with the debugging? Or is it just the leads developpers who take care of it ? Because looking for and finding solutions during emergencies is a nice skill to grow.\n\nWould you be able to manage this project on your own if everyone was suddenly absent for a while? Would you be able to handle any tickets ? Do you know and understand the deployment process for your project?\n\nIf not, maybe it can help you figure out which topics to delve into, at least ones related to your project, to broaden your knowledge.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "this is a common feeling in a lot of advanced learning, the feeling of hitting a wall. only thing you can do is keep pushing, i guess you could quit but i wouldnt recommend that.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "ChatGPT is kind of cool cause you can ask it to explain stuff or post it large parts of the project and ask it to explain it or recommend improvements.\n\nI am sometimes doing assembly line boring code work like you and the way I make it interesting is trying to innovate or refactor in the space and ChatGPT is pretty good at helping give me ideas and stuff. Sometimes it doesn't really turn into anything but it's still fun to explore.\n\nOther than that, and most people don't like to hear this, but job hopping. Switch jobs around every two years and you'll get a pay bump greater than ever staying at one place and you'll keep getting learning periods and getting exposed to new systems.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is my only option to put in extra hours with a side project, or extracurricular classes?\n\nWhen I was a junior I was basically constantly coding, in and out of work. I had personal / side projects that I would do when not at work, and sometimes I would bring work home to work on it. I was also getting challenging problems that I found interesting, at work, though.\n\nYour skill will grow as high as you need it to, so if it's not being challenged at work, you'll want to impose challenge on yourself externally.\n\n‚Äã\n\nmost of what I do now is reworked copy/paste code from elsewhere in the codebase, stack overflow, or ChatGPT.\n\nStop doing copypasta, esp from ChatGPT, and start writing it from scratch, even if it takes a little longer. You're denying yourself learning opportunities.\n\n‚Äã\n\nI want to be a good dev, a senior dev one day.\n\nDoes your company have a path for improvement / career development? If you don't have room to grow, then you'll have to move on elsewhere. 2-3 years is pretty standard for this industry, and it's not unreasonable to move onwards if you feel you've stopped growing.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Not wanting to program after work is pretty normal. Especially if your current work is sometimes exhausting or your personal life is busy.\n\nAlso, code camps are more like prototypes where you will build 90% of the code in 10% of the time and if you'd continue you would write 10% of the code in 90% of the time. Its always nice to not have to bother with unit tests and code quality but you need it for regular work to make guarantees on the quality of your work and specifications you need to implement.\n\nPrototypes are kind of \"trust me bro\" whereas your work creates professional work that you should feel proud of (or at least accomplished). But also if you don't feel like that (perhaps because your boss doesn't let you, you don't get enough time to finish it or they have too many deadlines) then it might be time to look elsewhere to a position that does make you feel accomplished and gives you a good feeling about what you've created.\n\nAlso, at some point the hackathon stuff or side projects offer less fulfillment or make you learn less and less since your knowledge grows and at some point you don't need to do side projects to stay in the game because you have enough knowledge that any project or new tech that gets thrown at you, you will be able to work with in a matter of days/hours/minutes. Like, if you'd give me a different framework to work with for the next 6 months, then yeah I need a bit of practice but at some point I will be familiar and thus have no real reason to do it in my own time. At that point you get paid for the knowledge you have. At some point you don't need a portfolio site anymore because people will know you have the knowledge and can talk a lot about what you've done and how it went. Its kind of like that joke where a mechanic arrives to fix an issue, presses 1 button and the thing is fixed. After which he gives a bill that is 300 bucks. 1 buck to fix the issue and 299 for knowing what button to press.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You need to find more challenges. Full stop.\nDon't be one of those guys who have 20 years of 1 YOE repeated 20 times over. Meaning,they do the same ole CRUD work over and over.\nI've seen it to many times. Friends who did classic ASP. Then Cold Fusion. Then PHP. Then express. Doing the same thing with just a different stack. Creating pages that talk to a database. Nothing more, nothing less. They may get the occasional thing like form generates a PDF or excel. Or the form calls an API to populate some view on a page... Basically 1 YOE.\n\nIt is good to recognize it now.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "have you ever heard the expression, \"inspiration is for beginners\"? it means pros just do the work. they aren't searching for motivation. becoming a dev is what you do on your own time.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Learn Python.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Welcome to real jobs.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Some people are happier switching jobs every few years to learn new things.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "You did a boot camp and immediately jumped into a reliable programming job? What‚Äôs the problem? Enjoy it.",
        "points": "0 points",
        "children": [
          {
            "comment": "üòÇüòÇ no I‚Äôm not trying to complain! I‚Äôm very grateful! I just wanna get better",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I did something similar. Stop copy pasting lol. It‚Äôs really that easy, you‚Äôre letting your tools become crutches. Set some boundaries with what types of thing you‚Äôll ask chat gpt and if you do go to chat gpt stick around and get a detailed explanation so next time you won‚Äôt need to go back. As you grow as a dev, what it takes to grow changes.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "given the short amount of time you've been in the job...sounds like you're doing OK to me! where do you feel you are lacking?\n\nthere are many other areas to improve as a developer other than programming, which can be learnt on the job (soft skills!)",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I can 100% relate. This is one of the classic signs of burnout. Learn to recognise it early! It might be time to move on to a different company. I realise you said you don't have the experience - so for a start do some research to see what companies/ tech interest you and work towards that goal üòä",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeq34j",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeq34j/if_you_built_a_social_media_platform_alone_how/",
    "title": "If you built a social media platform alone, how would you monetize it?",
    "points": null,
    "comments": [
      {
        "comment": "Gamification.\n\nUnlockable cosmetics (icons, avatars, fancy profile, etc), paid QoL features, achievements, badges, experience bar and/or leveling, etc. Make it cool and fun to visit. Have something special/different every day. Let the users \"progress\" in some way, so they can unlock avatars, animations, special effects, whatever. People love cosmetics. That's where \"free\" games make money.",
        "points": "21 points",
        "children": [
          {
            "comment": "Every mobile game ever.",
            "points": "3 points",
            "children": [
              {
                "comment": "Also, temu",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          },
          {
            "comment": "This is actually a pretty good idea.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          },
          {
            "comment": "Anybody remember Gaia Online?",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Build a p2p platform and/or a federated platform, and let people host their own profiles and stuff.\nBuilding a centralised platform is only viable for companies that have the capital to lose money year over year until some idiot buys them for 44 billion.",
        "points": "41 points",
        "children": [
          {
            "comment": "imo it's a great idea but doesn't work. 99% of people are non going to host it.\n\neven after reddit app fiasco - not many people switched over to mastodon or lemmy? why are you still on reddit?",
            "points": "6 points",
            "children": [
              {
                "comment": "How many people switched over to ello, Pebble, Threads, Cohost, Bebo, or any other number of centralised social media sites that aren't going anywhere either?\n\nThe problem isn't P2P/federation, the problem is that it costs a lot of money and requires a lot of influence and luck to get big enough that you become a household name.\n\nI'm on Reddit because it's where my communities are. If I could self-host my Reddit profile, I would.\n\nEdit: actually, come to think of it, how many social media sites have had anywhere near the, admittedly modest, success of Mastodon, Lemmy, or Matrix with a similar amount of funding?\nIf anything, P2P/federation is a powerful force multiplier. Sure, Mastodon is nowhere near the size of Twitter, but it's still a place where I can post, get replies, and find people who are into some of the stuff I'm into.",
                "points": "7 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "why are you still on Reddit?\n\nthis isn't about we the users, this is their problem to solve. we don't have to care about monetization. if reddit exists, we use it, and when it dies because they can't keep hemorrhaging money, we'll use something else.¬†\n\nOP is asking from the dev side and the answer is realistic.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You gotta have to have great number of active users first. Then huge trafic on your platforms. If both are already done, monetization is not hard. Without first two stop your platform is just a compiled app not a money making machine.",
        "points": "7 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I'd sell very expensive premium accounts to allow people power over others and then let them loose",
        "points": "6 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "4th option: Raise funding based on your plans to grow the network.",
        "points": "5 points",
        "children": [
          {
            "comment": "You mean fake it til you're bought for billions by some asshat?",
            "points": "0 points",
            "children": [
              {
                "comment": "That's the backbone of many high profile companies.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Charge $5 for every post that is negative karma after 10 days.",
        "points": "10 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "LEAN, Add ultra basic version for each and see what sticks. You don't even need to implement it, just put the buttons on and track engagement.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I‚Äôd sell it to Google",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "A few years ago a friend was in kind of a similar position except it wasn‚Äôt a social media platform. He was contemplating creating a premium type of system to get some revenue cause the bills were piling up.\n\nI and his other friends told him the same thing: get investors involved, build up the platform, grow the product, and then think about how to create money with it.\n\nHe took our advice and eventually got acquired for $30M.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "id accept donations from my users and if the server costs werent covered by month end id pull the plug",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "From a purely monetary standpoint, just sell your users data.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "without facilitating some kind of way to exchange goods within this new social network, I don't see a way to monetize the network itself...",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Most social media sites don‚Äôt make money",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Completely depends on the content. In the three examples you gave, each are best for their content type. There is no absolute winner or everyone would be doing it.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's important during growth to decide between prioritizing current users vs potential/future users. And you kinda have to figure out that balance, as well as how that affects monetization.\n\nAre your users people or businesses? How would ads work? If you're aiming at a subscription model, which way would that go (creator or consumer pays)? Do you think your app would survive charging for what others do for free (maybe, if you don't sell accounts their own audience and giving them full reach is valuable enough)? What about taking a Twitter (no, I will not call it X) route and offering creators a cut of ad revenue for their content?",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This may not be the best place to ask, as developers are not typically the best at knowing what to do with what they've built, from a business standpoint.\n\nDo you have a business development person?\n\nI think the line up investors idea is a good one, especially if you don't mind submitting to those pressures and eventual loss of control of your product. But it's probably in some ways the safest way to go.\n\nOtherwise, among your three ideas, I would say test all three and see what fits your product the best. People generally expect not to pay for social media though. Twitter is currently trying out a limited \"subscribe to follow certain users\" feature, and I'm not sure how that's going for them - maybe research that a bit.\n\nSo far, ads haven't really hurt facebook, twitter, reddit, etc. Facebook started as \"no ads ever\" and now they run their own ad service. But ads only really work if you have a lot of users. The margins can be low.\n\nGood luck.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I think I'd go with ads, getting a subscription is hard. I'll subscribe to Spotify, Audible, Netflix, but there is no social network I'd pay a cent a month for.\n\nAds aren't expensive to implement, it's free for most providers isn't it?",
        "points": "0 points",
        "children": [
          {
            "comment": "Ads aren't expensive to implement\n\nThey aren't?\n\nPerhaps I'm misinformed, but from what I understand, there are two options for ad integration. The first is using AdSense or some equivalent, which is really wack, because you have little to no control over the aesthetics, making your website look very cheap, so it doesn't even feel like a serious strategy. Meanwhile, the second option would be to build your own ad interface from scratch, complete with its own campaign setup UI and ad recommendation algorithm. That's the difficult and expensive part.\n\nPlease correct me if I'm wrong. Maybe there's some in-between option I'm unaware of.",
            "points": "0 points",
            "children": [
              {
                "comment": "I‚Äôm pretty sure they‚Äôre talking about the first one, Adsense et al. That‚Äôs what I was going to suggest as well.\n\nMaybe they don‚Äôt look ‚Äòbeautiful‚Äô but they‚Äôre pretty common and aren‚Äôt really much worse than native/in-feed ads (which themselves can often feel misleading).\n\nThere are many companies that do different types of ads so maybe you can find one that fits better. Or even direct selling - allow a company to pay you X amount to put a simple picture on your site (probably more time consuming but not that expensive).",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Depends on what kind of social media. You already have the three points listed, so you seem to know which ones are best for which.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeptfo",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeptfo/help_needed_regarding_high_level_architecture_for/",
    "title": "Help needed regarding high level architecture for a compute intensive backend",
    "points": null,
    "comments": [
      {
        "comment": "What the hell is taking a minute to process? That's billions of operations. What are you doing that needs that? Can you split it up into much smaller chunks that can run in parallel?\n\nWe'd need a lot more information to be able to answer your question. Architecture is a whole speciality in itself.",
        "points": "-1 points",
        "children": [
          {
            "comment": "A lot of things can take over a minute. Encoding a video upload, generating a 60 page PDF report of a financial record. User uploads a hevc from their iPhone, that video needs to be re-encoded to h.264 for other users to see. A 5 minute video may take 10 minutes to encode. Thumbnails need to be generated.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "#2 is for highly distributed scalable systems at a cost. It requires expertise to maintain that Kafka and create the proper plumbing. For many, it can lead to a lot of over-engineering with little gains. Where I work, 80% of the outages are usually Kafka clusters and nodes. In production.\n\nWe need to know a bit more. But I've had to make this decision and ended up using redis as a cache and worker nodes just pick up jobs from redis queue. Scaled it to 40 or so nodes and increased TPS (Transactions per second) up to hundreds of TPS, without having to resort to Kafka.",
        "points": "0 points",
        "children": [
          {
            "comment": "Thank you for the answer.\n\nI see, so can we not do the latter one with a different message queue like redis or rabbitmq instead? I'm pretty sure scale won't be as huge as 100 TPS, and I see a problem of overengineering.\n\nThis particular tool is used for generating some PDFs, and I was thinking that keeping this as a separate service, such that it can be extended in functionality if needed in future. Also so that it can be used to interact with any other backend.\n\nI wanted to know one last thing, what's the pro/con of having it as a worker vs having it as a standalone service",
            "points": "0 points",
            "children": [
              {
                "comment": "I wanted to know one last thing, what's the pro/con of having it as a worker vs having it as a standalone service\n\nYou can scale it out with replicas. In Kubernetes for example, add more replicas (nodes) to handle more volume.",
                "points": "0 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "If a process takes a minute, you do not want to \"await,\" you just want event driven architecture.\n\nThere's not enough information to know if you need Kafka or not. That's rather heavy machinery. It's the type of service that, if you're wondering if you need it, you probably don't. You could likely get away with a simple queue; think Redis, RabbitMQ or a managed solution like SQS if you're on a cloud provider.\n\nThen figure out a notification system for your front end user. Unless the real time nature of the alert is critical, it probably doesn't need to be websocket based. An email, push notification, text or even just a status update in their profile may work.\n\nI'd also love to hear what'd be the difference when it is a separate service of its own\n\nThat depends completely on your implementation. Services are decoupled for any number of reasons. The most popular are limited blast radius should the service fail, scaling simplicity and corresponding cost optimization, as well as smaller code components for simpler maintenance.\n\nNone of those things are a given, though, you have to implement them.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "No. 2, you can use a simpler solution though.\n\nFor example simply run a serverless function, we use Cloud Run to execute very heavy jobs (importing gigabytes worth of data each run), had no issues scaling so far.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aepnat",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aepnat/how_can_i_run_the_backend_and_frontend_on_the/",
    "title": "How can I run the backend and frontend on the same port correctly?",
    "points": null,
    "comments": [
      {
        "comment": "The issue you're facing is due to the way single-page applications (SPAs) like those built with Svelte handle routing on the client side, combined with how the Rocket server handles requests.\n\nIn an SPA, the routing is handled by JavaScript on the client side, not by the server. When you enter a URL directly into the address bar, the request goes to the server, which doesn't know about the client-side routes defined in your Svelte app.\n\nTo resolve this, you need to configure your Rocket server to serve the index.html file from your Svelte build for all routes that are supposed to be handled by the client-side router. This way, when you access a route directly via the address bar, Rocket will serve the index.html file, and then Svelte's client-side router can take over and render the correct component.\n\nYou can do this by adding a catch-all route in your Rocket application that serves the index.html file. Here's an example of how you can modify your main.rs:\n\nuse rocket::{\n    catch, get, \n    fs::{relative, FileServer, NamedFile},\n    launch, routes, Rocket,\n};\nuse std::path::{Path, PathBuf};\n\n#[launch]\nfn rocket() -> Rocket<rocket::Build> {\n    rocket::build()\n        .mount(\"/\", FileServer::from(relative!(\"../frontend/dist\")))\n        .mount(\"/api\", all_api_routes)\n        .mount(\"/\", routes![index])\n}\n\n#[get(\"/<_..>\", rank = 10)]\nasync fn index(path: PathBuf) -> Option<NamedFile> {\n    NamedFile::open(Path::new(relative!(\"../frontend/dist/index.html\"))).await.ok()\n}\n\n\nThis index function is a catch-all route (/_..) with a lower priority (rank = 10) that serves the index.html file. It's important to give it a lower rank so that it doesn't interfere with other routes, especially your API routes.\n\nRegarding running the frontend and backend on separate ports, it's a matter of preference and the specifics of your project.\n\nSeparate Ports: This is common during development because it allows you to leverage the development server provided by Svelte (like hot module replacement). You would run Svelte on one port (like 3000) and Rocket on another (like 8000). You would then need to set up a proxy in your Svelte dev server to forward API requests to the Rocket server to avoid CORS issues.\n\nSingle Port: For production, it's common to serve both the frontend and backend from the same port. This simplifies deployment and avoids CORS issues, as both your API and frontend are served from the same origin. Your current approach is aligned with this method.\n\nRemember, when deploying, you need to build your Svelte app and ensure the dist folder contains the correct built files. The Rocket server will then serve these files as your frontend.",
        "points": "4 points",
        "children": [
          {
            "comment": "Great now it's working! Thanks for the help and amazing explanation :)",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aepblj",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aepblj/help_me_choose_a_tech_stack_please/",
    "title": "HELP ME CHOOSE A TECH STACK PLEASE?",
    "points": null,
    "comments": [
      {
        "comment": "I‚Äôll try to say this gently.\n\nDon‚Äôt fuck around with things connected to money and financials if you don‚Äôt have solid opinions about and experience with the tech you‚Äôre going to use to build it.",
        "points": "3 points",
        "children": [
          {
            "comment": "It's not a production build it's a development for a project it's not that deep",
            "points": "-2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeoppb",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeoppb/the_current_state_and_future_of_web_development/",
    "title": "The Current State and Future of Web Development",
    "points": null,
    "comments": [
      {
        "comment": "Honestly, nothing has changed.\n\nOur purpose is still to solve user's problems.\n\nThere are some new tools, and some new snake-oil salesman; and a alot of people who don't know how to run a profitable business so hire/fire as their VC tells them to.",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "AI is thoroughly unproven as a replacement for developers in my opinion. The amount of tuning, effort and oversight it would take to get a model to the point where it can deliver enterprise grade solutions, with all the QA and CI/CD that is industry standard would be gargantuan.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "It's already good enough.\n\nI hope SSG gets more popular than SPA, and maybe some cool stuff for websockets.",
        "points": "1 point",
        "children": [
          {
            "comment": "Hang on. Am I reading this right? SSG is exclusively its own thing? You sure about that? Maybe you meant SSR?",
            "points": "0 points",
            "children": [
              {
                "comment": "I take it you've never heard of Jamstack?",
                "points": "0 points",
                "children": [
                  {
                    "comment": "I heard about it two years before the pandemic. It helped me land a cush job and then I went through a yuppie phase.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeop5x",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeop5x/largest_contentful_paint_79_s_wp_rocket/",
    "title": "Largest Contentful Paint 7.9 s - WP ROCKET",
    "points": null,
    "comments": [
      {
        "comment": "Identify and solve your blockers first. Defer any JS that is not required for initial rendering of the page. Ideally, you want 0ms blocking time and there are very few reasons you should have any blocking JS at all. Then make sure you're adding preloads to your HTML head for any above the fold images and check that they're not being lazily loaded.\n\nAdditionally, make sure you're using either memcached or redis to serve cached DB responses from WP to cut down your response/TTFB.",
        "points": "5 points",
        "children": [
          {
            "comment": "its funny this guy is the closest / seems the most knowledgeable of the comments and his comment appears as \"SPAM\" lol this subreddit is hilarious",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I have the exact same issue, and I've already optimized all my images, but to no avail. I'm really not sure what's up.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The only way to really diagnose would be to see a live url. I'm happy to take a look if you want to share.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Hard to diagnose without a URL but 3.2s spent on script evaluation. My money is on too much JS.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "A WordPress theme with bloated JavaScript?!\n\nWell I guess now I have seen everything!",
        "points": "0 points",
        "children": [
          {
            "comment": "WP has nothing to do with this, look at react websites they are by definition bloated with libraries that load everywhere because most react devs don't understand how to use it.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "installing wprocket has NOTHING to do with having an optimized website\n\nthe problems can run very deep like the way you load scripts etc... you need an expert to figure that stuff out\n\nfor reference it took me from knowing almost nothing about this to rebuilding my entire company website structure in like 6 months or so of trial and error.\n\n‚Äã\n\nwhoever says you just need to do \"this and that\" and its going to be fine has no understanding of CWV and fundamental stuff like this.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeo0fo",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeo0fo/seo_keywordexisting_website_audit_question/",
    "title": "SEO Keyword/Existing Website Audit Question",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aenxyp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aenxyp/list_of_cool_ui_dashboards_for_inspiration/",
    "title": "List of cool UI Dashboards for inspiration",
    "points": null,
    "comments": [
      {
        "comment": "thanks for sharing",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "The subreddit continues to colonize my saved section at a rate that would make the British Empire blush.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aenwtn",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aenwtn/freelance_developers_how_are_you_building/",
    "title": "Freelance developers, how are you building e-commerce websites for your clients?",
    "points": null,
    "comments": [
      {
        "comment": "Shopify with custom frontend using Storefront API",
        "points": "4 points",
        "children": [
          {
            "comment": "Does it include hydrogen also ?",
            "points": "0 points",
            "children": [
              {
                "comment": "No, I'm not using Hydrogen. You can see an example made with Deno and the Fresh framework here:¬†https://github.com/denoland/merch",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "However they want. Usually Shopify or WooCommerce. If they don't have an existing site usually Shopify. If they've an existing WP then WooCommerce. I don't see a reason to reinvent the wheel here or try to use some new kid on the block eCommerce platform that hasn't been tried and true for years. Building from scratch would only be an option if I were working for a larger company and had a team as eCommerce is an absolute nightmare and even then I'd probably just reach for Laravel and some packages.",
        "points": "3 points",
        "children": [
          {
            "comment": "Do you usually offer to maintain it or leave it with them? And how do you deal with Shopify subscriptions ?",
            "points": "1 point",
            "children": [
              {
                "comment": "They pay for their Shopify subscription on their own, but I do help them set that up if needed. Site maintenance is a separate maintenance contract for whatever I negotiate their monthly fee to be based off the demands of their site and the client.",
                "points": "2 points",
                "children": [
                  {
                    "comment": "Ah ok, thank you.",
                    "points": "0 points",
                    "children": [],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Shopify keeps clients happy.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I‚Äôd go for a shopify shop if design isn‚Äôt too custom. If you need as much as developers freedom as possible; I‚Äôd go for a good old Woocommerce. I recently set one up with Bedrock and Sage.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I build e-commerce by hand and the cms. Have my own template for these. Sometimes I use Medusajs if the use case fits. Generally it‚Äôs unadvised to build your own ecomm, I just prefer to have my own.",
        "points": "1 point",
        "children": [
          {
            "comment": "I would actually love to have my own as well but like you said it's not advised and i think they're right since it will take so much time and i don't think clients would care much about it. What about the font-end side? How do you make it as personalised as possible?",
            "points": "0 points",
            "children": [
              {
                "comment": "Frontend/backend/db/ai/hosting/cms/admin/ etc. all unlimited potential of personalization when you make your own. For frontend, I just follow top conversions techniques and use personal experience to keep driving conversions as the main goal. Of course if a client has a designer or in house assets and logos I‚Äôll throw that on there. Also much more flexible to implement stuff like abandon carts, track ips for triggered marketing campaigns etc. Also a huge plus is being able to integrate with whatever you want.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Craft Commerce.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "BigCommerce, osCommerce/ZenCart, WooCommerce, and Magento back in the day. I haven't contracted in several years.\n\nOf all the things to build from scratch, an e-commerce site is one of the absolute worst things to do yourself. PCI-DSS requirements change with some regularity. That's your best possible outcome -- you're just worried about keeping the site up to date with PCI-DSS requirements so payment processors will continue to work with the business. That can be a lot of work by itself. Not including surfacing/patching CVEs, keeping the e-commerce database synced with accounting software, ensuring ongoing API compatibility with payment processors, etc. That maintenance burden is either hurting your bottom line or the client's bottom line.",
        "points": "1 point",
        "children": [
          {
            "comment": "We don't have online payment yet in our country (Algeria), there are some APIs but they're not reliable enough yet, but most businesses use an old accounting software so that would be hard to sync the site with them.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "I've been dabbling in Odoo Community recently.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "We made this kit to build static e-commerce sites connecting a Shopify account to the static site generator and loading the contents of the store into the site\n\nhttps://github.com/CodeStitchOfficial/Advanced-Website-Kit\n\nHere‚Äôs what it looks like out the box\n\nhttps://theadvancedkit.com/collection/automated-collection/\n\nLiterally just add the Shopify api credentials to the kit and it will just work. The rest of the site is html and css built with 11ty static site generator. There‚Äôs also a blog you can add using decap cms. Merge the blog branch to get a Working static markdown based blog system that the client can edit and add posts to via a dashboard provided by decap cms. Lots of neat stuff in this kit. I use it for all my e-commerce clients. Allows us to make truly custom Shopify stores without needing to touch the liquid code in Shopify. I just edit my site as I normally would and save and publish. When the client makes edits on the Shopify side and changes products and pricing, the kit rebuilds the site with those new changes.",
        "points": "1 point",
        "children": [
          {
            "comment": "Will have a look, thank you for sharing it.",
            "points": "",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aenrpa",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aenrpa/why_is_the_text_going_off_the_screen/",
    "title": "Why is the text going off the screen?",
    "points": null,
    "comments": [
      {
        "comment": "Is your max width in pixels, or percent?",
        "points": "3 points",
        "children": [
          {
            "comment": "vw (view width)",
            "points": "0 points",
            "children": [
              {
                "comment": "That could be why, your text has a left margin/padding, which is pushing the content to the right, but your VW width won‚Äôt account for that.\n\nInstead, try:\n\nwidth: 100vw;\nmax-width: 100%",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "You'll need to show us something we can see in the browser. We can speculate and guess all day long, but we need to see it to be able to properly diagnose.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Is your breadcrumbs one unbroken line of text without spaces?",
        "points": "2 points",
        "children": [
          {
            "comment": "oh... this happened to me once... now i break-word in my reset",
            "points": "1 point",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Is p inside some container where title isn't?",
        "points": "1 point",
        "children": [
          {
            "comment": "No.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Without seeing some code it could be anything, but if it‚Äôs only happening on mobile screen sizes, I‚Äôd say check your media queries first and foremost.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I miss the \"Tilt\" feature in old Firefox. It was perfect for this kind of stuff.\n\nI see in the comments that you say that the max-width is set using vw units, but what about margin/padding/positioning, etc? If something has a max-width: 90vw, for example, but has other styles on it and its parents the cause its left-most edge to be > 10vw, you'll get this kind of results. Widths of auto or percentages are typically better for that reason.\n\nAnd, by \"a break word\", are you talking about the white-space or <wbr> or what?\n\nSo, my guess would be basically that the URL/breadcrumbs is too long and causes issues with whitespace/text wrapping, likely due to lack of opportunity to break. So it overflows. That increases the width of the parent element and the title is also widened as a result.",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "I recommend to use devtools in chrome or firefox and make changes to fix stuff like this quickly.",
        "points": "2 points",
        "children": [
          {
            "comment": "Thank you for the suggestion, guitar_up_my_ass. üòä",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aenmrp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aenmrp/scaleway_web_hosting_versus_aws_lightsail_a_quick/",
    "title": "Scaleway web hosting versus AWS Lightsail: A quick comparison",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aenfpw",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://github.com/hoppscotch/hoppscotch",
    "title": "Hoppscotch",
    "points": null,
    "comments": [
      {
        "comment": "What it does: ‚ÄúOpen source API development ecosystem.‚Äù\n\nWhat problems it claims to solve: none\n\nWhat advantages it claims it gives: none\n\nY‚Äôall need to work on your marketing.",
        "points": "-1 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aen43z",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aen43z/tools_to_find_website_design/",
    "title": "Tools to find Website Design Ideas/Themes/Inspiration",
    "points": null,
    "comments": [
      {
        "comment": "Use Flexbox for simple and responsive forms. It offers a straightforward and flexible layout model, ideal for basic form structures. Grid, while powerful, might be overkill for simpler forms. Flexbox provides a concise and effective solution, easily aligning items in a single direction for an efficient form layout.",
        "points": "0 points",
        "children": [
          {
            "comment": "I'm sorry , but you seem to have misunderstood the question , I'm looking for tools or websites to find UI templates and themes and inspirations. I'm confident I can replicate them, using css and js and tools like flex box as you mentioned",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aen1pz",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aen1pz/does_this_style_of_querying_make_sense_in_a/",
    "title": "Does this style of querying make sense in a REST-ish API or should I just move to (g)RPC?",
    "points": null,
    "comments": [
      {
        "comment": "Maybe I'm weird but this just looks like URL query params with extra steps",
        "points": "8 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Why is this better than GraphQL?",
        "points": "8 points",
        "children": [
          {
            "comment": "Do you think it's worth the effort? Would it be better than RPC? I am aware of all the differences between the various API models, I would just like to get a 2nd opinion.",
            "points": "0 points",
            "children": [
              {
                "comment": "Only you can say whether it's more suited for your use case. I just don't understand why you basically reinvented GraphQL.",
                "points": "1 point",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aemuxc",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aemuxc/digital_ocean_spaces/",
    "title": "Digital Ocean Spaces",
    "points": null,
    "comments": [
      {
        "comment": "DO spaces is fine. It's an s3-compatible storage layer. I think strapi has a DO-spaces upload provider, but we use the standard s3 provider for DO spaces with no issues.\n\nIn terms of pricing, it's really cheap, cheaper than s3. In fact most of the non-aws s3-compatible storage platforms will be competing with s3 on price not features, so they are all going to be cheaper than s3.\n\nThe one I like the best is R2 (cloudflare). 0 egress costs. Super nice.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aeml3e",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aeml3e/yesterday_i_did_a_coding_task_for_a_new_job_that/",
    "title": "Yesterday I did a coding task for a new job that I thought went very well, and the feedback was terrible",
    "points": null,
    "comments": [
      {
        "comment": "If this was your first time using React and you spent a few hours on it I'd say it's reasonable to expect it to look beginner-ish. React is one of those things that changes fast, has a lot of best practice and pitfalls for those new to it.",
        "points": "16 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you only have two years experience and it‚Äôs from two years ago‚Ä¶. You ARE a beginner regardless of language or technology.\n\nThat‚Äôs not a bad thing but you need to probably adjust your expectations and perspective.",
        "points": "6 points",
        "children": [
          {
            "comment": "2 years ago last time I was looking for a job I got higher salary with a much simpler coding challenge, and the guy was impressed by my skills.",
            "points": "-2 points",
            "children": [
              {
                "comment": "Okay.\n\nThat doesn‚Äôt change my answer. You‚Äôre still a beginner with a 2 year gap. Just keep learning and working on your skills.\n\n2 years away from your last employment will also degrade your skills unless you‚Äôve been coding while off. You are not as good as you were at the end of your last employment. On top of that the market 2 years ago and the market today are very different as well so once again, I think you may need to adjust your expectations.",
                "points": "6 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Do you have a repo for it? It‚Äôs hard to tell without seeing the code",
        "points": "5 points",
        "children": [
          {
            "comment": "I wrote you in a chat in private",
            "points": "0 points",
            "children": [
              {
                "comment": "Im.curious aswell, can you send it to me?",
                "points": "2 points",
                "children": [
                  {
                    "comment": "I have sent it to you too through reddit chat",
                    "points": "1 point",
                    "children": [
                      {
                        "comment": "1",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Okay you got a chat too",
                            "points": "0 points",
                            "children": [],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      },
                      {
                        "comment": "+1",
                        "points": "0 points",
                        "children": [
                          {
                            "comment": "Chat",
                            "points": "0 points",
                            "children": [
                              {
                                "comment": "+1",
                                "points": "0 points",
                                "children": [
                                  {
                                    "comment": "chat",
                                    "points": "0 points",
                                    "children": [
                                      {
                                        "comment": "+1",
                                        "points": "0 points",
                                        "children": [
                                          {
                                            "comment": "chat",
                                            "points": "0 points",
                                            "children": [
                                              {
                                                "comment": "",
                                                "points": "",
                                                "children": [],
                                                "isDeleted": false
                                              }
                                            ],
                                            "isDeleted": false
                                          }
                                        ],
                                        "isDeleted": false
                                      }
                                    ],
                                    "isDeleted": false
                                  }
                                ],
                                "isDeleted": false
                              }
                            ],
                            "isDeleted": false
                          }
                        ],
                        "isDeleted": false
                      }
                    ],
                    "isDeleted": false
                  }
                ],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "It depends what the company expected from you.\n\nI would be surprised if the company in question was searching a junior candidate, it would make sense though if they were searching for a mid/senior developer.\n\nAnyway let's put it in a way where they were searching for a junior developer, the only thing a healthy company would really check is your attitude to solve a problem, they expect little to no knowledge from you, just the basics of programming.",
        "points": "0 points",
        "children": [
          {
            "comment": "Well junior nowadays seem to be someone that is super solid in everything and has no weaknesses...\n\nMeanwhile in 2020 I found a job with shitty simple projects and no experience",
            "points": "1 point",
            "children": [
              {
                "comment": "Yeah the market IS way harder now for devs....",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              },
              {
                "comment": "Remember that you're now competing with all of last year's layoffs. They're all historically over-compensated because big tech corporations were trying to cuff all of the talent on the market. There are so many more developers than jobs right now that you're probably competing with people that have years of intermediate experience.",
                "points": "2 points",
                "children": [],
                "isDeleted": false
              }
            ],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aelxig",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "https://webventures.rejh.nl/blog/2024/web-push-ios-one-year/",
    "title": "Web Push on iOS - 1 year anniversary - Webventures",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aelqdk",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aelqdk/after_few_adventures_with_ui_libraries_i_decided/",
    "title": "After few adventures with UI libraries, I decided to go back to the roots with next open-source project. Which of those three tools/libraries would you choose for styling?",
    "points": null,
    "comments": [
      {
        "comment": "Tailwind again, fact is most css contains bloat and tailwind comes with premade documentation + is optimized for speed.\n\n‚Äã\n\nI switched from css -> tailwind, only regret was not doing it earlier.",
        "points": "3 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "tailwind",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Tailwind if you don't need pixel-perfect customization. Styled-components if you need.",
        "points": "-3 points",
        "children": [
          {
            "comment": "Eww, styled components",
            "points": "-2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1ael6sp",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1ael6sp/sole_proprietor_or_limited/",
    "title": "Sole proprietor or limited?",
    "points": null,
    "comments": [
      {
        "comment": "Used to contract, don't anymore.\n\nI hired a lawyer and an accountant who both suggested LLC given the jurisdictions I was subject to. Same lawyer worked on my standard contracts for project work and ongoing support. Any time a client wanted to adjust the language in the standard contract, I'd typically just say \"no thanks\" and walk away. If it's a client I really really want to work with, I have my lawyer review the adjustments, advise me, and bill me. I'm now in the red on this work and it hasn't started yet. That only happened once in the 5 years I was active, and lucky me, they were a great client to work with. Generally the SOW, with deliverables and timelines, is where we would spend the most time going back and forth. I don't have my lawyer review SOWs because the contract lays out some ground rules around what the SOW is, and what it's used for, and what it's not used for.\n\nMy only insight is to consult with a lawyer and send them a nice gift basket around the holidays every year.\n\nhttps://youtu.be/jVkLVRt6c1U",
        "points": "0 points",
        "children": [
          {
            "comment": "Thanks, for the advice and video, great presentation with a lot of good points.\n\nUnfortunately, in Canada we don't have LLC which sounds simpler than incorporated. We only have proprietor and corp (I guess limited corp. Is just about minutes or something like that).\n\nI'm defiantly going to take your advice and consult with a lawyer. At the very least have contracts drawn up.",
            "points": "0 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aekizg",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aekizg/i_want_a_smooth_infeed_adviewing_experience_on_a/",
    "title": "I want a smooth in-feed ad-viewing experience on a social media website I've made. Is a custom ad interface my only option?",
    "points": null,
    "comments": [
      {
        "comment": "Native ads. Most platforms offer them and you can often choose the colours, fonts, sizings and spacings. If you tell us more about your platform I can recommend some ad providers.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aekhx7",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aekhx7/flex_or_grid_or_both_to_make_simple_form_for_a/",
    "title": "Flex or Grid or both to make simple form for a backend dev ?",
    "points": null,
    "comments": [
      {
        "comment": "I personally tend to use Grid to style the overall page in terms of web vs mobile/responsive. Then I use flexbox inside individual divs to manage the flow of boxes/panels/divs, etc.\n\nIf you're trying to make a simple form, there isn't anything wrong with bootstrap.",
        "points": "24 points",
        "children": [
          {
            "comment": "Glad I‚Äôm not the only one who does this. When you work alone it‚Äôs hard to know what‚Äôs sloppy coding and what isn‚Äôt.\n\nI took use the grid for containers, then flex box to organize the container‚Äôs content. I can‚Äôt believe how much time this saves.",
            "points": "3 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "Probably both, depends on your fields. I would use grid for the initial structure then flex to fill in any oddities in the form. If it was a contact form with an address i would want to use a two column grid and use the grid items for most fields, but for the state and postal code i might want to use a flex in there to account for the state field if it's only the abbreviation.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Almost certainly just flex. I hardly use grid for anything since pages are often laid out and then just iterated on for all of eternity.",
        "points": "2 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If your items are identical then using a grid makes more sense but if ur items are of varying sizes then maybe flex wud b a good option imo",
        "points": "1 point",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Grid is slightly more code but more intuitive.\n\nFor simple things I just use default display:block, where most people would've used flex (know it because I make custom stylish for sites; I even sometimes change to block to make it easier for me)\n\nGrid is also cool for responsive design if you want to change layout and that wouldn't be possible without chaning html in flex or block (there's not many sites that need to change layout like that though)\n\nFor simple forms where you need both vertical and horizontal align flex will work.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Lol this is the big question? Flex or Grid, I struggle myself, read somewhere that grid is best if two dimensions, i.e flex is more like a list display, you can not reference the flex row above.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Completely depends on your form. Most likely, either will work fine though",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Flex if things are mainly in one dimension. Vertical or horizontal. Which is mainly just nav bars and lists. Things that just need quick simple flexiness. Grid for anything else.\n\nGrid is much more powerful and easy to use when you are familiar with it.\n\nCentering the last row can be hard in grid if it does not fit the pattern exactly so take that into consideration. If your layout has that use flex sparringly where you need it",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "For simple and responsive forms, use Flexbox. It offers a straightforward and flexible layout model, making it well-suited for forms. Grid is powerful for complex layouts but may be overkill for basic forms. Flexbox provides a concise and effective solution, aligning items easily in a single direction.",
        "points": "0 points",
        "children": [
          {
            "comment": "Grid is powerful for complex layouts but may be overkill for basic forms. Flexbox provides a concise and effective solution, aligning items easily in a single direction.\n\nGrid does exactly the same. It's as easy and straightforward as flexbox, it just manages columns in a different way.",
            "points": "2 points",
            "children": [],
            "isDeleted": false
          }
        ],
        "isDeleted": false
      },
      {
        "comment": "If it‚Äôs a simple form, why do you need either? If you have ~6 or less fields they can be stacked and shouldn‚Äôt need much/any responsiveness.\n\nThat being said, if you have designs to follow or just want to do it a certain way, I‚Äôd personally go with flexbox.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "If you want to position elements across a single axis and deal with how they are spaced apart and how they align - flex.\n\nIf you want to have a fixed grid and position elements to occupy individual cells (they can span multiple cells), then grid.\n\nI usually use flex the most and grid only occasionally, as the content naturally flows from top to bottom and I only need to deal with how it's positioned within each \"row\".",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "This is dumb question.\n\nWhat's simple to me isn't simple for you.\n\nFlex and Grid have nothing inherently to do with forms.\n\nThere is no right answer and \"a form\" isn't enough of a reference for anyone to give you and answer that isn't subjective and meaningless.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      },
      {
        "comment": "Depending on the form layout, you may not need either.",
        "points": "0 points",
        "children": [],
        "isDeleted": false
      }
    ]
  },
  {
    "id": "t3_1aekfjr",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aekfjr/easiest_way_to_distort_audio_to_give_some_kind_of/",
    "title": "Easiest way to distort audio to give some kind of \"voice anonymization\"",
    "points": null,
    "comments": []
  },
  {
    "id": "t3_1aejved",
    "subreddit": "r/webdev",
    "dataType": "link",
    "dataUrl": "/r/webdev/comments/1aejved/good_services_for_photography_site/",
    "title": "Good services for photography site",
    "points": null,
    "comments": []
  }
]